var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[Object.keys(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// node_modules/@sveltejs/kit/dist/chunks/multipart-parser.js
var multipart_parser_exports = {};
__export(multipart_parser_exports, {
  toFormData: () => toFormData
});
function _fileName(headerValue) {
  const m2 = headerValue.match(/\bfilename=("(.*?)"|([^()<>@,;:\\"/[\]?={}\s\t]+))($|;\s)/i);
  if (!m2) {
    return;
  }
  const match = m2[2] || m2[3] || "";
  let filename = match.slice(match.lastIndexOf("\\") + 1);
  filename = filename.replace(/%22/g, '"');
  filename = filename.replace(/&#(\d{4});/g, (m3, code) => {
    return String.fromCharCode(code);
  });
  return filename;
}
async function toFormData(Body2, ct) {
  if (!/multipart/i.test(ct)) {
    throw new TypeError("Failed to fetch");
  }
  const m2 = ct.match(/boundary=(?:"([^"]+)"|([^;]+))/i);
  if (!m2) {
    throw new TypeError("no or bad content-type header, no multipart boundary");
  }
  const parser = new MultipartParser(m2[1] || m2[2]);
  let headerField;
  let headerValue;
  let entryValue;
  let entryName;
  let contentType;
  let filename;
  const entryChunks = [];
  const formData = new FormData();
  const onPartData = (ui8a) => {
    entryValue += decoder.decode(ui8a, { stream: true });
  };
  const appendToFile = (ui8a) => {
    entryChunks.push(ui8a);
  };
  const appendFileToFormData = () => {
    const file = new File(entryChunks, filename, { type: contentType });
    formData.append(entryName, file);
  };
  const appendEntryToFormData = () => {
    formData.append(entryName, entryValue);
  };
  const decoder = new TextDecoder("utf-8");
  decoder.decode();
  parser.onPartBegin = function() {
    parser.onPartData = onPartData;
    parser.onPartEnd = appendEntryToFormData;
    headerField = "";
    headerValue = "";
    entryValue = "";
    entryName = "";
    contentType = "";
    filename = null;
    entryChunks.length = 0;
  };
  parser.onHeaderField = function(ui8a) {
    headerField += decoder.decode(ui8a, { stream: true });
  };
  parser.onHeaderValue = function(ui8a) {
    headerValue += decoder.decode(ui8a, { stream: true });
  };
  parser.onHeaderEnd = function() {
    headerValue += decoder.decode();
    headerField = headerField.toLowerCase();
    if (headerField === "content-disposition") {
      const m3 = headerValue.match(/\bname=("([^"]*)"|([^()<>@,;:\\"/[\]?={}\s\t]+))/i);
      if (m3) {
        entryName = m3[2] || m3[3] || "";
      }
      filename = _fileName(headerValue);
      if (filename) {
        parser.onPartData = appendToFile;
        parser.onPartEnd = appendFileToFormData;
      }
    } else if (headerField === "content-type") {
      contentType = headerValue;
    }
    headerValue = "";
    headerField = "";
  };
  for await (const chunk of Body2) {
    parser.write(chunk);
  }
  parser.end();
  return formData;
}
var import_node_fs, import_node_path, import_node_worker_threads, import_node_http, import_node_https, import_node_zlib, import_node_stream, import_node_util, import_node_url, import_net, s, S, f2, F, LF, CR, SPACE, HYPHEN, COLON, A, Z, lower, noop, MultipartParser;
var init_multipart_parser = __esm({
  "node_modules/@sveltejs/kit/dist/chunks/multipart-parser.js"() {
    init_shims();
    import_node_fs = __toModule(require("node:fs"));
    import_node_path = __toModule(require("node:path"));
    import_node_worker_threads = __toModule(require("node:worker_threads"));
    init_install_fetch();
    import_node_http = __toModule(require("node:http"));
    import_node_https = __toModule(require("node:https"));
    import_node_zlib = __toModule(require("node:zlib"));
    import_node_stream = __toModule(require("node:stream"));
    import_node_util = __toModule(require("node:util"));
    import_node_url = __toModule(require("node:url"));
    import_net = __toModule(require("net"));
    globalThis.DOMException || (() => {
      const port = new import_node_worker_threads.MessageChannel().port1;
      const ab = new ArrayBuffer(0);
      try {
        port.postMessage(ab, [ab, ab]);
      } catch (err) {
        return err.constructor;
      }
    })();
    s = 0;
    S = {
      START_BOUNDARY: s++,
      HEADER_FIELD_START: s++,
      HEADER_FIELD: s++,
      HEADER_VALUE_START: s++,
      HEADER_VALUE: s++,
      HEADER_VALUE_ALMOST_DONE: s++,
      HEADERS_ALMOST_DONE: s++,
      PART_DATA_START: s++,
      PART_DATA: s++,
      END: s++
    };
    f2 = 1;
    F = {
      PART_BOUNDARY: f2,
      LAST_BOUNDARY: f2 *= 2
    };
    LF = 10;
    CR = 13;
    SPACE = 32;
    HYPHEN = 45;
    COLON = 58;
    A = 97;
    Z = 122;
    lower = (c2) => c2 | 32;
    noop = () => {
    };
    MultipartParser = class {
      constructor(boundary) {
        this.index = 0;
        this.flags = 0;
        this.onHeaderEnd = noop;
        this.onHeaderField = noop;
        this.onHeadersEnd = noop;
        this.onHeaderValue = noop;
        this.onPartBegin = noop;
        this.onPartData = noop;
        this.onPartEnd = noop;
        this.boundaryChars = {};
        boundary = "\r\n--" + boundary;
        const ui8a = new Uint8Array(boundary.length);
        for (let i2 = 0; i2 < boundary.length; i2++) {
          ui8a[i2] = boundary.charCodeAt(i2);
          this.boundaryChars[ui8a[i2]] = true;
        }
        this.boundary = ui8a;
        this.lookbehind = new Uint8Array(this.boundary.length + 8);
        this.state = S.START_BOUNDARY;
      }
      write(data) {
        let i2 = 0;
        const length_ = data.length;
        let previousIndex = this.index;
        let { lookbehind, boundary, boundaryChars, index, state, flags } = this;
        const boundaryLength = this.boundary.length;
        const boundaryEnd = boundaryLength - 1;
        const bufferLength = data.length;
        let c2;
        let cl;
        const mark = (name) => {
          this[name + "Mark"] = i2;
        };
        const clear = (name) => {
          delete this[name + "Mark"];
        };
        const callback = (callbackSymbol, start, end, ui8a) => {
          if (start === void 0 || start !== end) {
            this[callbackSymbol](ui8a && ui8a.subarray(start, end));
          }
        };
        const dataCallback = (name, clear2) => {
          const markSymbol = name + "Mark";
          if (!(markSymbol in this)) {
            return;
          }
          if (clear2) {
            callback(name, this[markSymbol], i2, data);
            delete this[markSymbol];
          } else {
            callback(name, this[markSymbol], data.length, data);
            this[markSymbol] = 0;
          }
        };
        for (i2 = 0; i2 < length_; i2++) {
          c2 = data[i2];
          switch (state) {
            case S.START_BOUNDARY:
              if (index === boundary.length - 2) {
                if (c2 === HYPHEN) {
                  flags |= F.LAST_BOUNDARY;
                } else if (c2 !== CR) {
                  return;
                }
                index++;
                break;
              } else if (index - 1 === boundary.length - 2) {
                if (flags & F.LAST_BOUNDARY && c2 === HYPHEN) {
                  state = S.END;
                  flags = 0;
                } else if (!(flags & F.LAST_BOUNDARY) && c2 === LF) {
                  index = 0;
                  callback("onPartBegin");
                  state = S.HEADER_FIELD_START;
                } else {
                  return;
                }
                break;
              }
              if (c2 !== boundary[index + 2]) {
                index = -2;
              }
              if (c2 === boundary[index + 2]) {
                index++;
              }
              break;
            case S.HEADER_FIELD_START:
              state = S.HEADER_FIELD;
              mark("onHeaderField");
              index = 0;
            case S.HEADER_FIELD:
              if (c2 === CR) {
                clear("onHeaderField");
                state = S.HEADERS_ALMOST_DONE;
                break;
              }
              index++;
              if (c2 === HYPHEN) {
                break;
              }
              if (c2 === COLON) {
                if (index === 1) {
                  return;
                }
                dataCallback("onHeaderField", true);
                state = S.HEADER_VALUE_START;
                break;
              }
              cl = lower(c2);
              if (cl < A || cl > Z) {
                return;
              }
              break;
            case S.HEADER_VALUE_START:
              if (c2 === SPACE) {
                break;
              }
              mark("onHeaderValue");
              state = S.HEADER_VALUE;
            case S.HEADER_VALUE:
              if (c2 === CR) {
                dataCallback("onHeaderValue", true);
                callback("onHeaderEnd");
                state = S.HEADER_VALUE_ALMOST_DONE;
              }
              break;
            case S.HEADER_VALUE_ALMOST_DONE:
              if (c2 !== LF) {
                return;
              }
              state = S.HEADER_FIELD_START;
              break;
            case S.HEADERS_ALMOST_DONE:
              if (c2 !== LF) {
                return;
              }
              callback("onHeadersEnd");
              state = S.PART_DATA_START;
              break;
            case S.PART_DATA_START:
              state = S.PART_DATA;
              mark("onPartData");
            case S.PART_DATA:
              previousIndex = index;
              if (index === 0) {
                i2 += boundaryEnd;
                while (i2 < bufferLength && !(data[i2] in boundaryChars)) {
                  i2 += boundaryLength;
                }
                i2 -= boundaryEnd;
                c2 = data[i2];
              }
              if (index < boundary.length) {
                if (boundary[index] === c2) {
                  if (index === 0) {
                    dataCallback("onPartData", true);
                  }
                  index++;
                } else {
                  index = 0;
                }
              } else if (index === boundary.length) {
                index++;
                if (c2 === CR) {
                  flags |= F.PART_BOUNDARY;
                } else if (c2 === HYPHEN) {
                  flags |= F.LAST_BOUNDARY;
                } else {
                  index = 0;
                }
              } else if (index - 1 === boundary.length) {
                if (flags & F.PART_BOUNDARY) {
                  index = 0;
                  if (c2 === LF) {
                    flags &= ~F.PART_BOUNDARY;
                    callback("onPartEnd");
                    callback("onPartBegin");
                    state = S.HEADER_FIELD_START;
                    break;
                  }
                } else if (flags & F.LAST_BOUNDARY) {
                  if (c2 === HYPHEN) {
                    callback("onPartEnd");
                    state = S.END;
                    flags = 0;
                  } else {
                    index = 0;
                  }
                } else {
                  index = 0;
                }
              }
              if (index > 0) {
                lookbehind[index - 1] = c2;
              } else if (previousIndex > 0) {
                const _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);
                callback("onPartData", 0, previousIndex, _lookbehind);
                previousIndex = 0;
                mark("onPartData");
                i2--;
              }
              break;
            case S.END:
              break;
            default:
              throw new Error(`Unexpected state entered: ${state}`);
          }
        }
        dataCallback("onHeaderField");
        dataCallback("onHeaderValue");
        dataCallback("onPartData");
        this.index = index;
        this.state = state;
        this.flags = flags;
      }
      end() {
        if (this.state === S.HEADER_FIELD_START && this.index === 0 || this.state === S.PART_DATA && this.index === this.boundary.length) {
          this.onPartEnd();
        } else if (this.state !== S.END) {
          throw new Error("MultipartParser.end(): stream ended unexpectedly");
        }
      }
    };
  }
});

// node_modules/@sveltejs/kit/dist/install-fetch.js
function dataUriToBuffer(uri) {
  if (!/^data:/i.test(uri)) {
    throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
  }
  uri = uri.replace(/\r?\n/g, "");
  const firstComma = uri.indexOf(",");
  if (firstComma === -1 || firstComma <= 4) {
    throw new TypeError("malformed data: URI");
  }
  const meta = uri.substring(5, firstComma).split(";");
  let charset = "";
  let base64 = false;
  const type = meta[0] || "text/plain";
  let typeFull = type;
  for (let i2 = 1; i2 < meta.length; i2++) {
    if (meta[i2] === "base64") {
      base64 = true;
    } else {
      typeFull += `;${meta[i2]}`;
      if (meta[i2].indexOf("charset=") === 0) {
        charset = meta[i2].substring(8);
      }
    }
  }
  if (!meta[0] && !charset.length) {
    typeFull += ";charset=US-ASCII";
    charset = "US-ASCII";
  }
  const encoding = base64 ? "base64" : "ascii";
  const data = unescape(uri.substring(firstComma + 1));
  const buffer = Buffer.from(data, encoding);
  buffer.type = type;
  buffer.typeFull = typeFull;
  buffer.charset = charset;
  return buffer;
}
async function* toIterator(parts, clone2 = true) {
  for (const part of parts) {
    if ("stream" in part) {
      yield* part.stream();
    } else if (ArrayBuffer.isView(part)) {
      if (clone2) {
        let position = part.byteOffset;
        const end = part.byteOffset + part.byteLength;
        while (position !== end) {
          const size = Math.min(end - position, POOL_SIZE);
          const chunk = part.buffer.slice(position, position + size);
          position += chunk.byteLength;
          yield new Uint8Array(chunk);
        }
      } else {
        yield part;
      }
    } else {
      let position = 0;
      while (position !== part.size) {
        const chunk = part.slice(position, Math.min(part.size, position + POOL_SIZE));
        const buffer = await chunk.arrayBuffer();
        position += buffer.byteLength;
        yield new Uint8Array(buffer);
      }
    }
  }
}
function formDataToBlob(F2, B = Blob$1) {
  var b2 = `${r()}${r()}`.replace(/\./g, "").slice(-28).padStart(32, "-"), c2 = [], p = `--${b2}\r
Content-Disposition: form-data; name="`;
  F2.forEach((v, n) => typeof v == "string" ? c2.push(p + e2(n) + `"\r
\r
${v.replace(/\r(?!\n)|(?<!\r)\n/g, "\r\n")}\r
`) : c2.push(p + e2(n) + `"; filename="${e2(v.name, 1)}"\r
Content-Type: ${v.type || "application/octet-stream"}\r
\r
`, v, "\r\n"));
  c2.push(`--${b2}--`);
  return new B(c2, { type: "multipart/form-data; boundary=" + b2 });
}
async function consumeBody(data) {
  if (data[INTERNALS$2].disturbed) {
    throw new TypeError(`body used already for: ${data.url}`);
  }
  data[INTERNALS$2].disturbed = true;
  if (data[INTERNALS$2].error) {
    throw data[INTERNALS$2].error;
  }
  const { body } = data;
  if (body === null) {
    return Buffer.alloc(0);
  }
  if (!(body instanceof import_node_stream2.default)) {
    return Buffer.alloc(0);
  }
  const accum = [];
  let accumBytes = 0;
  try {
    for await (const chunk of body) {
      if (data.size > 0 && accumBytes + chunk.length > data.size) {
        const error2 = new FetchError(`content size at ${data.url} over limit: ${data.size}`, "max-size");
        body.destroy(error2);
        throw error2;
      }
      accumBytes += chunk.length;
      accum.push(chunk);
    }
  } catch (error2) {
    const error_ = error2 instanceof FetchBaseError ? error2 : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error2.message}`, "system", error2);
    throw error_;
  }
  if (body.readableEnded === true || body._readableState.ended === true) {
    try {
      if (accum.every((c2) => typeof c2 === "string")) {
        return Buffer.from(accum.join(""));
      }
      return Buffer.concat(accum, accumBytes);
    } catch (error2) {
      throw new FetchError(`Could not create Buffer from response body for ${data.url}: ${error2.message}`, "system", error2);
    }
  } else {
    throw new FetchError(`Premature close of server response while trying to fetch ${data.url}`);
  }
}
function fromRawHeaders(headers = []) {
  return new Headers(headers.reduce((result, value, index, array) => {
    if (index % 2 === 0) {
      result.push(array.slice(index, index + 2));
    }
    return result;
  }, []).filter(([name, value]) => {
    try {
      validateHeaderName(name);
      validateHeaderValue(name, String(value));
      return true;
    } catch {
      return false;
    }
  }));
}
function stripURLForUseAsAReferrer(url, originOnly = false) {
  if (url == null) {
    return "no-referrer";
  }
  url = new URL(url);
  if (/^(about|blob|data):$/.test(url.protocol)) {
    return "no-referrer";
  }
  url.username = "";
  url.password = "";
  url.hash = "";
  if (originOnly) {
    url.pathname = "";
    url.search = "";
  }
  return url;
}
function validateReferrerPolicy(referrerPolicy) {
  if (!ReferrerPolicy.has(referrerPolicy)) {
    throw new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);
  }
  return referrerPolicy;
}
function isOriginPotentiallyTrustworthy(url) {
  if (/^(http|ws)s:$/.test(url.protocol)) {
    return true;
  }
  const hostIp = url.host.replace(/(^\[)|(]$)/g, "");
  const hostIPVersion = (0, import_net2.isIP)(hostIp);
  if (hostIPVersion === 4 && /^127\./.test(hostIp)) {
    return true;
  }
  if (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {
    return true;
  }
  if (/^(.+\.)*localhost$/.test(url.host)) {
    return false;
  }
  if (url.protocol === "file:") {
    return true;
  }
  return false;
}
function isUrlPotentiallyTrustworthy(url) {
  if (/^about:(blank|srcdoc)$/.test(url)) {
    return true;
  }
  if (url.protocol === "data:") {
    return true;
  }
  if (/^(blob|filesystem):$/.test(url.protocol)) {
    return true;
  }
  return isOriginPotentiallyTrustworthy(url);
}
function determineRequestsReferrer(request, { referrerURLCallback, referrerOriginCallback } = {}) {
  if (request.referrer === "no-referrer" || request.referrerPolicy === "") {
    return null;
  }
  const policy = request.referrerPolicy;
  if (request.referrer === "about:client") {
    return "no-referrer";
  }
  const referrerSource = request.referrer;
  let referrerURL = stripURLForUseAsAReferrer(referrerSource);
  let referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);
  if (referrerURL.toString().length > 4096) {
    referrerURL = referrerOrigin;
  }
  if (referrerURLCallback) {
    referrerURL = referrerURLCallback(referrerURL);
  }
  if (referrerOriginCallback) {
    referrerOrigin = referrerOriginCallback(referrerOrigin);
  }
  const currentURL = new URL(request.url);
  switch (policy) {
    case "no-referrer":
      return "no-referrer";
    case "origin":
      return referrerOrigin;
    case "unsafe-url":
      return referrerURL;
    case "strict-origin":
      if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {
        return "no-referrer";
      }
      return referrerOrigin.toString();
    case "strict-origin-when-cross-origin":
      if (referrerURL.origin === currentURL.origin) {
        return referrerURL;
      }
      if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {
        return "no-referrer";
      }
      return referrerOrigin;
    case "same-origin":
      if (referrerURL.origin === currentURL.origin) {
        return referrerURL;
      }
      return "no-referrer";
    case "origin-when-cross-origin":
      if (referrerURL.origin === currentURL.origin) {
        return referrerURL;
      }
      return referrerOrigin;
    case "no-referrer-when-downgrade":
      if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {
        return "no-referrer";
      }
      return referrerURL;
    default:
      throw new TypeError(`Invalid referrerPolicy: ${policy}`);
  }
}
function parseReferrerPolicyFromHeader(headers) {
  const policyTokens = (headers.get("referrer-policy") || "").split(/[,\s]+/);
  let policy = "";
  for (const token of policyTokens) {
    if (token && ReferrerPolicy.has(token)) {
      policy = token;
    }
  }
  return policy;
}
async function fetch(url, options_) {
  return new Promise((resolve2, reject) => {
    const request = new Request(url, options_);
    const { parsedURL, options: options2 } = getNodeRequestOptions(request);
    if (!supportedSchemas.has(parsedURL.protocol)) {
      throw new TypeError(`node-fetch cannot load ${url}. URL scheme "${parsedURL.protocol.replace(/:$/, "")}" is not supported.`);
    }
    if (parsedURL.protocol === "data:") {
      const data = dataUriToBuffer(request.url);
      const response2 = new Response(data, { headers: { "Content-Type": data.typeFull } });
      resolve2(response2);
      return;
    }
    const send2 = (parsedURL.protocol === "https:" ? import_node_https2.default : import_node_http2.default).request;
    const { signal } = request;
    let response = null;
    const abort = () => {
      const error2 = new AbortError("The operation was aborted.");
      reject(error2);
      if (request.body && request.body instanceof import_node_stream2.default.Readable) {
        request.body.destroy(error2);
      }
      if (!response || !response.body) {
        return;
      }
      response.body.emit("error", error2);
    };
    if (signal && signal.aborted) {
      abort();
      return;
    }
    const abortAndFinalize = () => {
      abort();
      finalize();
    };
    const request_ = send2(parsedURL, options2);
    if (signal) {
      signal.addEventListener("abort", abortAndFinalize);
    }
    const finalize = () => {
      request_.abort();
      if (signal) {
        signal.removeEventListener("abort", abortAndFinalize);
      }
    };
    request_.on("error", (error2) => {
      reject(new FetchError(`request to ${request.url} failed, reason: ${error2.message}`, "system", error2));
      finalize();
    });
    fixResponseChunkedTransferBadEnding(request_, (error2) => {
      response.body.destroy(error2);
    });
    if (process.version < "v14") {
      request_.on("socket", (s3) => {
        let endedWithEventsCount;
        s3.prependListener("end", () => {
          endedWithEventsCount = s3._eventsCount;
        });
        s3.prependListener("close", (hadError) => {
          if (response && endedWithEventsCount < s3._eventsCount && !hadError) {
            const error2 = new Error("Premature close");
            error2.code = "ERR_STREAM_PREMATURE_CLOSE";
            response.body.emit("error", error2);
          }
        });
      });
    }
    request_.on("response", (response_) => {
      request_.setTimeout(0);
      const headers = fromRawHeaders(response_.rawHeaders);
      if (isRedirect(response_.statusCode)) {
        const location = headers.get("Location");
        const locationURL = location === null ? null : new URL(location, request.url);
        switch (request.redirect) {
          case "error":
            reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, "no-redirect"));
            finalize();
            return;
          case "manual":
            if (locationURL !== null) {
              headers.set("Location", locationURL);
            }
            break;
          case "follow": {
            if (locationURL === null) {
              break;
            }
            if (request.counter >= request.follow) {
              reject(new FetchError(`maximum redirect reached at: ${request.url}`, "max-redirect"));
              finalize();
              return;
            }
            const requestOptions = {
              headers: new Headers(request.headers),
              follow: request.follow,
              counter: request.counter + 1,
              agent: request.agent,
              compress: request.compress,
              method: request.method,
              body: clone(request),
              signal: request.signal,
              size: request.size,
              referrer: request.referrer,
              referrerPolicy: request.referrerPolicy
            };
            if (response_.statusCode !== 303 && request.body && options_.body instanceof import_node_stream2.default.Readable) {
              reject(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect"));
              finalize();
              return;
            }
            if (response_.statusCode === 303 || (response_.statusCode === 301 || response_.statusCode === 302) && request.method === "POST") {
              requestOptions.method = "GET";
              requestOptions.body = void 0;
              requestOptions.headers.delete("content-length");
            }
            const responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);
            if (responseReferrerPolicy) {
              requestOptions.referrerPolicy = responseReferrerPolicy;
            }
            resolve2(fetch(new Request(locationURL, requestOptions)));
            finalize();
            return;
          }
          default:
            return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));
        }
      }
      if (signal) {
        response_.once("end", () => {
          signal.removeEventListener("abort", abortAndFinalize);
        });
      }
      let body = (0, import_node_stream2.pipeline)(response_, new import_node_stream2.PassThrough(), reject);
      if (process.version < "v12.10") {
        response_.on("aborted", abortAndFinalize);
      }
      const responseOptions = {
        url: request.url,
        status: response_.statusCode,
        statusText: response_.statusMessage,
        headers,
        size: request.size,
        counter: request.counter,
        highWaterMark: request.highWaterMark
      };
      const codings = headers.get("Content-Encoding");
      if (!request.compress || request.method === "HEAD" || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      const zlibOptions = {
        flush: import_node_zlib2.default.Z_SYNC_FLUSH,
        finishFlush: import_node_zlib2.default.Z_SYNC_FLUSH
      };
      if (codings === "gzip" || codings === "x-gzip") {
        body = (0, import_node_stream2.pipeline)(body, import_node_zlib2.default.createGunzip(zlibOptions), reject);
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      if (codings === "deflate" || codings === "x-deflate") {
        const raw = (0, import_node_stream2.pipeline)(response_, new import_node_stream2.PassThrough(), reject);
        raw.once("data", (chunk) => {
          body = (chunk[0] & 15) === 8 ? (0, import_node_stream2.pipeline)(body, import_node_zlib2.default.createInflate(), reject) : (0, import_node_stream2.pipeline)(body, import_node_zlib2.default.createInflateRaw(), reject);
          response = new Response(body, responseOptions);
          resolve2(response);
        });
        return;
      }
      if (codings === "br") {
        body = (0, import_node_stream2.pipeline)(body, import_node_zlib2.default.createBrotliDecompress(), reject);
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      response = new Response(body, responseOptions);
      resolve2(response);
    });
    writeToStream(request_, request);
  });
}
function fixResponseChunkedTransferBadEnding(request, errorCallback) {
  const LAST_CHUNK = Buffer.from("0\r\n\r\n");
  let isChunkedTransfer = false;
  let properLastChunkReceived = false;
  let previousChunk;
  request.on("response", (response) => {
    const { headers } = response;
    isChunkedTransfer = headers["transfer-encoding"] === "chunked" && !headers["content-length"];
  });
  request.on("socket", (socket) => {
    const onSocketClose = () => {
      if (isChunkedTransfer && !properLastChunkReceived) {
        const error2 = new Error("Premature close");
        error2.code = "ERR_STREAM_PREMATURE_CLOSE";
        errorCallback(error2);
      }
    };
    socket.prependListener("close", onSocketClose);
    request.on("abort", () => {
      socket.removeListener("close", onSocketClose);
    });
    socket.on("data", (buf) => {
      properLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;
      if (!properLastChunkReceived && previousChunk) {
        properLastChunkReceived = Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 && Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0;
      }
      previousChunk = buf;
    });
  });
}
var import_node_http2, import_node_https2, import_node_zlib2, import_node_stream2, import_node_util2, import_node_url2, import_net2, commonjsGlobal, ponyfill_es2018, POOL_SIZE$1, POOL_SIZE, _Blob, Blob2, Blob$1, _File, File, t, i, h, r, m, f3, e2, x, FormData, FetchBaseError, FetchError, NAME, isURLSearchParameters, isBlob, isAbortSignal, INTERNALS$2, Body, clone, getNonSpecFormDataBoundary, extractContentType, getTotalBytes, writeToStream, validateHeaderName, validateHeaderValue, Headers, redirectStatus, isRedirect, INTERNALS$1, Response, getSearch, ReferrerPolicy, DEFAULT_REFERRER_POLICY, INTERNALS, isRequest, Request, getNodeRequestOptions, AbortError, supportedSchemas;
var init_install_fetch = __esm({
  "node_modules/@sveltejs/kit/dist/install-fetch.js"() {
    init_shims();
    import_node_http2 = __toModule(require("node:http"));
    import_node_https2 = __toModule(require("node:https"));
    import_node_zlib2 = __toModule(require("node:zlib"));
    import_node_stream2 = __toModule(require("node:stream"));
    import_node_util2 = __toModule(require("node:util"));
    import_node_url2 = __toModule(require("node:url"));
    import_net2 = __toModule(require("net"));
    commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
    ponyfill_es2018 = { exports: {} };
    (function(module2, exports2) {
      (function(global2, factory) {
        factory(exports2);
      })(commonjsGlobal, function(exports3) {
        const SymbolPolyfill = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol : (description) => `Symbol(${description})`;
        function noop4() {
          return void 0;
        }
        function getGlobals() {
          if (typeof self !== "undefined") {
            return self;
          } else if (typeof window !== "undefined") {
            return window;
          } else if (typeof commonjsGlobal !== "undefined") {
            return commonjsGlobal;
          }
          return void 0;
        }
        const globals2 = getGlobals();
        function typeIsObject(x2) {
          return typeof x2 === "object" && x2 !== null || typeof x2 === "function";
        }
        const rethrowAssertionErrorRejection = noop4;
        const originalPromise = Promise;
        const originalPromiseThen = Promise.prototype.then;
        const originalPromiseResolve = Promise.resolve.bind(originalPromise);
        const originalPromiseReject = Promise.reject.bind(originalPromise);
        function newPromise(executor) {
          return new originalPromise(executor);
        }
        function promiseResolvedWith(value) {
          return originalPromiseResolve(value);
        }
        function promiseRejectedWith(reason) {
          return originalPromiseReject(reason);
        }
        function PerformPromiseThen(promise, onFulfilled, onRejected) {
          return originalPromiseThen.call(promise, onFulfilled, onRejected);
        }
        function uponPromise(promise, onFulfilled, onRejected) {
          PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), void 0, rethrowAssertionErrorRejection);
        }
        function uponFulfillment(promise, onFulfilled) {
          uponPromise(promise, onFulfilled);
        }
        function uponRejection(promise, onRejected) {
          uponPromise(promise, void 0, onRejected);
        }
        function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {
          return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);
        }
        function setPromiseIsHandledToTrue(promise) {
          PerformPromiseThen(promise, void 0, rethrowAssertionErrorRejection);
        }
        const queueMicrotask2 = (() => {
          const globalQueueMicrotask = globals2 && globals2.queueMicrotask;
          if (typeof globalQueueMicrotask === "function") {
            return globalQueueMicrotask;
          }
          const resolvedPromise = promiseResolvedWith(void 0);
          return (fn) => PerformPromiseThen(resolvedPromise, fn);
        })();
        function reflectCall(F2, V, args) {
          if (typeof F2 !== "function") {
            throw new TypeError("Argument is not a function");
          }
          return Function.prototype.apply.call(F2, V, args);
        }
        function promiseCall(F2, V, args) {
          try {
            return promiseResolvedWith(reflectCall(F2, V, args));
          } catch (value) {
            return promiseRejectedWith(value);
          }
        }
        const QUEUE_MAX_ARRAY_SIZE = 16384;
        class SimpleQueue {
          constructor() {
            this._cursor = 0;
            this._size = 0;
            this._front = {
              _elements: [],
              _next: void 0
            };
            this._back = this._front;
            this._cursor = 0;
            this._size = 0;
          }
          get length() {
            return this._size;
          }
          push(element) {
            const oldBack = this._back;
            let newBack = oldBack;
            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {
              newBack = {
                _elements: [],
                _next: void 0
              };
            }
            oldBack._elements.push(element);
            if (newBack !== oldBack) {
              this._back = newBack;
              oldBack._next = newBack;
            }
            ++this._size;
          }
          shift() {
            const oldFront = this._front;
            let newFront = oldFront;
            const oldCursor = this._cursor;
            let newCursor = oldCursor + 1;
            const elements = oldFront._elements;
            const element = elements[oldCursor];
            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {
              newFront = oldFront._next;
              newCursor = 0;
            }
            --this._size;
            this._cursor = newCursor;
            if (oldFront !== newFront) {
              this._front = newFront;
            }
            elements[oldCursor] = void 0;
            return element;
          }
          forEach(callback) {
            let i2 = this._cursor;
            let node = this._front;
            let elements = node._elements;
            while (i2 !== elements.length || node._next !== void 0) {
              if (i2 === elements.length) {
                node = node._next;
                elements = node._elements;
                i2 = 0;
                if (elements.length === 0) {
                  break;
                }
              }
              callback(elements[i2]);
              ++i2;
            }
          }
          peek() {
            const front = this._front;
            const cursor = this._cursor;
            return front._elements[cursor];
          }
        }
        function ReadableStreamReaderGenericInitialize(reader, stream) {
          reader._ownerReadableStream = stream;
          stream._reader = reader;
          if (stream._state === "readable") {
            defaultReaderClosedPromiseInitialize(reader);
          } else if (stream._state === "closed") {
            defaultReaderClosedPromiseInitializeAsResolved(reader);
          } else {
            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);
          }
        }
        function ReadableStreamReaderGenericCancel(reader, reason) {
          const stream = reader._ownerReadableStream;
          return ReadableStreamCancel(stream, reason);
        }
        function ReadableStreamReaderGenericRelease(reader) {
          if (reader._ownerReadableStream._state === "readable") {
            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
          } else {
            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
          }
          reader._ownerReadableStream._reader = void 0;
          reader._ownerReadableStream = void 0;
        }
        function readerLockException(name) {
          return new TypeError("Cannot " + name + " a stream using a released reader");
        }
        function defaultReaderClosedPromiseInitialize(reader) {
          reader._closedPromise = newPromise((resolve2, reject) => {
            reader._closedPromise_resolve = resolve2;
            reader._closedPromise_reject = reject;
          });
        }
        function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {
          defaultReaderClosedPromiseInitialize(reader);
          defaultReaderClosedPromiseReject(reader, reason);
        }
        function defaultReaderClosedPromiseInitializeAsResolved(reader) {
          defaultReaderClosedPromiseInitialize(reader);
          defaultReaderClosedPromiseResolve(reader);
        }
        function defaultReaderClosedPromiseReject(reader, reason) {
          if (reader._closedPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(reader._closedPromise);
          reader._closedPromise_reject(reason);
          reader._closedPromise_resolve = void 0;
          reader._closedPromise_reject = void 0;
        }
        function defaultReaderClosedPromiseResetToRejected(reader, reason) {
          defaultReaderClosedPromiseInitializeAsRejected(reader, reason);
        }
        function defaultReaderClosedPromiseResolve(reader) {
          if (reader._closedPromise_resolve === void 0) {
            return;
          }
          reader._closedPromise_resolve(void 0);
          reader._closedPromise_resolve = void 0;
          reader._closedPromise_reject = void 0;
        }
        const AbortSteps = SymbolPolyfill("[[AbortSteps]]");
        const ErrorSteps = SymbolPolyfill("[[ErrorSteps]]");
        const CancelSteps = SymbolPolyfill("[[CancelSteps]]");
        const PullSteps = SymbolPolyfill("[[PullSteps]]");
        const NumberIsFinite = Number.isFinite || function(x2) {
          return typeof x2 === "number" && isFinite(x2);
        };
        const MathTrunc = Math.trunc || function(v) {
          return v < 0 ? Math.ceil(v) : Math.floor(v);
        };
        function isDictionary(x2) {
          return typeof x2 === "object" || typeof x2 === "function";
        }
        function assertDictionary(obj, context) {
          if (obj !== void 0 && !isDictionary(obj)) {
            throw new TypeError(`${context} is not an object.`);
          }
        }
        function assertFunction(x2, context) {
          if (typeof x2 !== "function") {
            throw new TypeError(`${context} is not a function.`);
          }
        }
        function isObject(x2) {
          return typeof x2 === "object" && x2 !== null || typeof x2 === "function";
        }
        function assertObject(x2, context) {
          if (!isObject(x2)) {
            throw new TypeError(`${context} is not an object.`);
          }
        }
        function assertRequiredArgument(x2, position, context) {
          if (x2 === void 0) {
            throw new TypeError(`Parameter ${position} is required in '${context}'.`);
          }
        }
        function assertRequiredField(x2, field, context) {
          if (x2 === void 0) {
            throw new TypeError(`${field} is required in '${context}'.`);
          }
        }
        function convertUnrestrictedDouble(value) {
          return Number(value);
        }
        function censorNegativeZero(x2) {
          return x2 === 0 ? 0 : x2;
        }
        function integerPart(x2) {
          return censorNegativeZero(MathTrunc(x2));
        }
        function convertUnsignedLongLongWithEnforceRange(value, context) {
          const lowerBound = 0;
          const upperBound = Number.MAX_SAFE_INTEGER;
          let x2 = Number(value);
          x2 = censorNegativeZero(x2);
          if (!NumberIsFinite(x2)) {
            throw new TypeError(`${context} is not a finite number`);
          }
          x2 = integerPart(x2);
          if (x2 < lowerBound || x2 > upperBound) {
            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);
          }
          if (!NumberIsFinite(x2) || x2 === 0) {
            return 0;
          }
          return x2;
        }
        function assertReadableStream(x2, context) {
          if (!IsReadableStream(x2)) {
            throw new TypeError(`${context} is not a ReadableStream.`);
          }
        }
        function AcquireReadableStreamDefaultReader(stream) {
          return new ReadableStreamDefaultReader(stream);
        }
        function ReadableStreamAddReadRequest(stream, readRequest) {
          stream._reader._readRequests.push(readRequest);
        }
        function ReadableStreamFulfillReadRequest(stream, chunk, done) {
          const reader = stream._reader;
          const readRequest = reader._readRequests.shift();
          if (done) {
            readRequest._closeSteps();
          } else {
            readRequest._chunkSteps(chunk);
          }
        }
        function ReadableStreamGetNumReadRequests(stream) {
          return stream._reader._readRequests.length;
        }
        function ReadableStreamHasDefaultReader(stream) {
          const reader = stream._reader;
          if (reader === void 0) {
            return false;
          }
          if (!IsReadableStreamDefaultReader(reader)) {
            return false;
          }
          return true;
        }
        class ReadableStreamDefaultReader {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "ReadableStreamDefaultReader");
            assertReadableStream(stream, "First parameter");
            if (IsReadableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            }
            ReadableStreamReaderGenericInitialize(this, stream);
            this._readRequests = new SimpleQueue();
          }
          get closed() {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          cancel(reason = void 0) {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("cancel"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("cancel"));
            }
            return ReadableStreamReaderGenericCancel(this, reason);
          }
          read() {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("read"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("read from"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readRequest = {
              _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
              _closeSteps: () => resolvePromise({ value: void 0, done: true }),
              _errorSteps: (e3) => rejectPromise(e3)
            };
            ReadableStreamDefaultReaderRead(this, readRequest);
            return promise;
          }
          releaseLock() {
            if (!IsReadableStreamDefaultReader(this)) {
              throw defaultReaderBrandCheckException("releaseLock");
            }
            if (this._ownerReadableStream === void 0) {
              return;
            }
            if (this._readRequests.length > 0) {
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            }
            ReadableStreamReaderGenericRelease(this);
          }
        }
        Object.defineProperties(ReadableStreamDefaultReader.prototype, {
          cancel: { enumerable: true },
          read: { enumerable: true },
          releaseLock: { enumerable: true },
          closed: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamDefaultReader",
            configurable: true
          });
        }
        function IsReadableStreamDefaultReader(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_readRequests")) {
            return false;
          }
          return x2 instanceof ReadableStreamDefaultReader;
        }
        function ReadableStreamDefaultReaderRead(reader, readRequest) {
          const stream = reader._ownerReadableStream;
          stream._disturbed = true;
          if (stream._state === "closed") {
            readRequest._closeSteps();
          } else if (stream._state === "errored") {
            readRequest._errorSteps(stream._storedError);
          } else {
            stream._readableStreamController[PullSteps](readRequest);
          }
        }
        function defaultReaderBrandCheckException(name) {
          return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);
        }
        const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {
        }).prototype);
        class ReadableStreamAsyncIteratorImpl {
          constructor(reader, preventCancel) {
            this._ongoingPromise = void 0;
            this._isFinished = false;
            this._reader = reader;
            this._preventCancel = preventCancel;
          }
          next() {
            const nextSteps = () => this._nextSteps();
            this._ongoingPromise = this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) : nextSteps();
            return this._ongoingPromise;
          }
          return(value) {
            const returnSteps = () => this._returnSteps(value);
            return this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) : returnSteps();
          }
          _nextSteps() {
            if (this._isFinished) {
              return Promise.resolve({ value: void 0, done: true });
            }
            const reader = this._reader;
            if (reader._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("iterate"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readRequest = {
              _chunkSteps: (chunk) => {
                this._ongoingPromise = void 0;
                queueMicrotask2(() => resolvePromise({ value: chunk, done: false }));
              },
              _closeSteps: () => {
                this._ongoingPromise = void 0;
                this._isFinished = true;
                ReadableStreamReaderGenericRelease(reader);
                resolvePromise({ value: void 0, done: true });
              },
              _errorSteps: (reason) => {
                this._ongoingPromise = void 0;
                this._isFinished = true;
                ReadableStreamReaderGenericRelease(reader);
                rejectPromise(reason);
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
            return promise;
          }
          _returnSteps(value) {
            if (this._isFinished) {
              return Promise.resolve({ value, done: true });
            }
            this._isFinished = true;
            const reader = this._reader;
            if (reader._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("finish iterating"));
            }
            if (!this._preventCancel) {
              const result = ReadableStreamReaderGenericCancel(reader, value);
              ReadableStreamReaderGenericRelease(reader);
              return transformPromiseWith(result, () => ({ value, done: true }));
            }
            ReadableStreamReaderGenericRelease(reader);
            return promiseResolvedWith({ value, done: true });
          }
        }
        const ReadableStreamAsyncIteratorPrototype = {
          next() {
            if (!IsReadableStreamAsyncIterator(this)) {
              return promiseRejectedWith(streamAsyncIteratorBrandCheckException("next"));
            }
            return this._asyncIteratorImpl.next();
          },
          return(value) {
            if (!IsReadableStreamAsyncIterator(this)) {
              return promiseRejectedWith(streamAsyncIteratorBrandCheckException("return"));
            }
            return this._asyncIteratorImpl.return(value);
          }
        };
        if (AsyncIteratorPrototype !== void 0) {
          Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);
        }
        function AcquireReadableStreamAsyncIterator(stream, preventCancel) {
          const reader = AcquireReadableStreamDefaultReader(stream);
          const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);
          const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);
          iterator._asyncIteratorImpl = impl;
          return iterator;
        }
        function IsReadableStreamAsyncIterator(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_asyncIteratorImpl")) {
            return false;
          }
          try {
            return x2._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl;
          } catch (_a) {
            return false;
          }
        }
        function streamAsyncIteratorBrandCheckException(name) {
          return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);
        }
        const NumberIsNaN = Number.isNaN || function(x2) {
          return x2 !== x2;
        };
        function CreateArrayFromList(elements) {
          return elements.slice();
        }
        function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {
          new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);
        }
        function TransferArrayBuffer(O) {
          return O;
        }
        function IsDetachedBuffer(O) {
          return false;
        }
        function ArrayBufferSlice(buffer, begin, end) {
          if (buffer.slice) {
            return buffer.slice(begin, end);
          }
          const length = end - begin;
          const slice = new ArrayBuffer(length);
          CopyDataBlockBytes(slice, 0, buffer, begin, length);
          return slice;
        }
        function IsNonNegativeNumber(v) {
          if (typeof v !== "number") {
            return false;
          }
          if (NumberIsNaN(v)) {
            return false;
          }
          if (v < 0) {
            return false;
          }
          return true;
        }
        function CloneAsUint8Array(O) {
          const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);
          return new Uint8Array(buffer);
        }
        function DequeueValue(container) {
          const pair = container._queue.shift();
          container._queueTotalSize -= pair.size;
          if (container._queueTotalSize < 0) {
            container._queueTotalSize = 0;
          }
          return pair.value;
        }
        function EnqueueValueWithSize(container, value, size) {
          if (!IsNonNegativeNumber(size) || size === Infinity) {
            throw new RangeError("Size must be a finite, non-NaN, non-negative number.");
          }
          container._queue.push({ value, size });
          container._queueTotalSize += size;
        }
        function PeekQueueValue(container) {
          const pair = container._queue.peek();
          return pair.value;
        }
        function ResetQueue(container) {
          container._queue = new SimpleQueue();
          container._queueTotalSize = 0;
        }
        class ReadableStreamBYOBRequest {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get view() {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("view");
            }
            return this._view;
          }
          respond(bytesWritten) {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("respond");
            }
            assertRequiredArgument(bytesWritten, 1, "respond");
            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, "First parameter");
            if (this._associatedReadableByteStreamController === void 0) {
              throw new TypeError("This BYOB request has been invalidated");
            }
            if (IsDetachedBuffer(this._view.buffer))
              ;
            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);
          }
          respondWithNewView(view) {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("respondWithNewView");
            }
            assertRequiredArgument(view, 1, "respondWithNewView");
            if (!ArrayBuffer.isView(view)) {
              throw new TypeError("You can only respond with array buffer views");
            }
            if (this._associatedReadableByteStreamController === void 0) {
              throw new TypeError("This BYOB request has been invalidated");
            }
            if (IsDetachedBuffer(view.buffer))
              ;
            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);
          }
        }
        Object.defineProperties(ReadableStreamBYOBRequest.prototype, {
          respond: { enumerable: true },
          respondWithNewView: { enumerable: true },
          view: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamBYOBRequest",
            configurable: true
          });
        }
        class ReadableByteStreamController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get byobRequest() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("byobRequest");
            }
            return ReadableByteStreamControllerGetBYOBRequest(this);
          }
          get desiredSize() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("desiredSize");
            }
            return ReadableByteStreamControllerGetDesiredSize(this);
          }
          close() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("close");
            }
            if (this._closeRequested) {
              throw new TypeError("The stream has already been closed; do not close it again!");
            }
            const state = this._controlledReadableByteStream._state;
            if (state !== "readable") {
              throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);
            }
            ReadableByteStreamControllerClose(this);
          }
          enqueue(chunk) {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("enqueue");
            }
            assertRequiredArgument(chunk, 1, "enqueue");
            if (!ArrayBuffer.isView(chunk)) {
              throw new TypeError("chunk must be an array buffer view");
            }
            if (chunk.byteLength === 0) {
              throw new TypeError("chunk must have non-zero byteLength");
            }
            if (chunk.buffer.byteLength === 0) {
              throw new TypeError(`chunk's buffer must have non-zero byteLength`);
            }
            if (this._closeRequested) {
              throw new TypeError("stream is closed or draining");
            }
            const state = this._controlledReadableByteStream._state;
            if (state !== "readable") {
              throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);
            }
            ReadableByteStreamControllerEnqueue(this, chunk);
          }
          error(e3 = void 0) {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("error");
            }
            ReadableByteStreamControllerError(this, e3);
          }
          [CancelSteps](reason) {
            ReadableByteStreamControllerClearPendingPullIntos(this);
            ResetQueue(this);
            const result = this._cancelAlgorithm(reason);
            ReadableByteStreamControllerClearAlgorithms(this);
            return result;
          }
          [PullSteps](readRequest) {
            const stream = this._controlledReadableByteStream;
            if (this._queueTotalSize > 0) {
              const entry = this._queue.shift();
              this._queueTotalSize -= entry.byteLength;
              ReadableByteStreamControllerHandleQueueDrain(this);
              const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);
              readRequest._chunkSteps(view);
              return;
            }
            const autoAllocateChunkSize = this._autoAllocateChunkSize;
            if (autoAllocateChunkSize !== void 0) {
              let buffer;
              try {
                buffer = new ArrayBuffer(autoAllocateChunkSize);
              } catch (bufferE) {
                readRequest._errorSteps(bufferE);
                return;
              }
              const pullIntoDescriptor = {
                buffer,
                bufferByteLength: autoAllocateChunkSize,
                byteOffset: 0,
                byteLength: autoAllocateChunkSize,
                bytesFilled: 0,
                elementSize: 1,
                viewConstructor: Uint8Array,
                readerType: "default"
              };
              this._pendingPullIntos.push(pullIntoDescriptor);
            }
            ReadableStreamAddReadRequest(stream, readRequest);
            ReadableByteStreamControllerCallPullIfNeeded(this);
          }
        }
        Object.defineProperties(ReadableByteStreamController.prototype, {
          close: { enumerable: true },
          enqueue: { enumerable: true },
          error: { enumerable: true },
          byobRequest: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableByteStreamController",
            configurable: true
          });
        }
        function IsReadableByteStreamController(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_controlledReadableByteStream")) {
            return false;
          }
          return x2 instanceof ReadableByteStreamController;
        }
        function IsReadableStreamBYOBRequest(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_associatedReadableByteStreamController")) {
            return false;
          }
          return x2 instanceof ReadableStreamBYOBRequest;
        }
        function ReadableByteStreamControllerCallPullIfNeeded(controller) {
          const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);
          if (!shouldPull) {
            return;
          }
          if (controller._pulling) {
            controller._pullAgain = true;
            return;
          }
          controller._pulling = true;
          const pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, () => {
            controller._pulling = false;
            if (controller._pullAgain) {
              controller._pullAgain = false;
              ReadableByteStreamControllerCallPullIfNeeded(controller);
            }
          }, (e3) => {
            ReadableByteStreamControllerError(controller, e3);
          });
        }
        function ReadableByteStreamControllerClearPendingPullIntos(controller) {
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          controller._pendingPullIntos = new SimpleQueue();
        }
        function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {
          let done = false;
          if (stream._state === "closed") {
            done = true;
          }
          const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
          if (pullIntoDescriptor.readerType === "default") {
            ReadableStreamFulfillReadRequest(stream, filledView, done);
          } else {
            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);
          }
        }
        function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {
          const bytesFilled = pullIntoDescriptor.bytesFilled;
          const elementSize = pullIntoDescriptor.elementSize;
          return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);
        }
        function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {
          controller._queue.push({ buffer, byteOffset, byteLength });
          controller._queueTotalSize += byteLength;
        }
        function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {
          const elementSize = pullIntoDescriptor.elementSize;
          const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;
          const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);
          const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;
          const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;
          let totalBytesToCopyRemaining = maxBytesToCopy;
          let ready = false;
          if (maxAlignedBytes > currentAlignedBytes) {
            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;
            ready = true;
          }
          const queue = controller._queue;
          while (totalBytesToCopyRemaining > 0) {
            const headOfQueue = queue.peek();
            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);
            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);
            if (headOfQueue.byteLength === bytesToCopy) {
              queue.shift();
            } else {
              headOfQueue.byteOffset += bytesToCopy;
              headOfQueue.byteLength -= bytesToCopy;
            }
            controller._queueTotalSize -= bytesToCopy;
            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);
            totalBytesToCopyRemaining -= bytesToCopy;
          }
          return ready;
        }
        function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {
          pullIntoDescriptor.bytesFilled += size;
        }
        function ReadableByteStreamControllerHandleQueueDrain(controller) {
          if (controller._queueTotalSize === 0 && controller._closeRequested) {
            ReadableByteStreamControllerClearAlgorithms(controller);
            ReadableStreamClose(controller._controlledReadableByteStream);
          } else {
            ReadableByteStreamControllerCallPullIfNeeded(controller);
          }
        }
        function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {
          if (controller._byobRequest === null) {
            return;
          }
          controller._byobRequest._associatedReadableByteStreamController = void 0;
          controller._byobRequest._view = null;
          controller._byobRequest = null;
        }
        function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {
          while (controller._pendingPullIntos.length > 0) {
            if (controller._queueTotalSize === 0) {
              return;
            }
            const pullIntoDescriptor = controller._pendingPullIntos.peek();
            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
              ReadableByteStreamControllerShiftPendingPullInto(controller);
              ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
            }
          }
        }
        function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {
          const stream = controller._controlledReadableByteStream;
          let elementSize = 1;
          if (view.constructor !== DataView) {
            elementSize = view.constructor.BYTES_PER_ELEMENT;
          }
          const ctor = view.constructor;
          const buffer = TransferArrayBuffer(view.buffer);
          const pullIntoDescriptor = {
            buffer,
            bufferByteLength: buffer.byteLength,
            byteOffset: view.byteOffset,
            byteLength: view.byteLength,
            bytesFilled: 0,
            elementSize,
            viewConstructor: ctor,
            readerType: "byob"
          };
          if (controller._pendingPullIntos.length > 0) {
            controller._pendingPullIntos.push(pullIntoDescriptor);
            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
            return;
          }
          if (stream._state === "closed") {
            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);
            readIntoRequest._closeSteps(emptyView);
            return;
          }
          if (controller._queueTotalSize > 0) {
            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
              const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
              ReadableByteStreamControllerHandleQueueDrain(controller);
              readIntoRequest._chunkSteps(filledView);
              return;
            }
            if (controller._closeRequested) {
              const e3 = new TypeError("Insufficient bytes to fill elements in the given buffer");
              ReadableByteStreamControllerError(controller, e3);
              readIntoRequest._errorSteps(e3);
              return;
            }
          }
          controller._pendingPullIntos.push(pullIntoDescriptor);
          ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {
          const stream = controller._controlledReadableByteStream;
          if (ReadableStreamHasBYOBReader(stream)) {
            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {
              const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);
              ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);
            }
          }
        }
        function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {
          ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);
          if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {
            return;
          }
          ReadableByteStreamControllerShiftPendingPullInto(controller);
          const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;
          if (remainderSize > 0) {
            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);
          }
          pullIntoDescriptor.bytesFilled -= remainderSize;
          ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
          ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
        }
        function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            ReadableByteStreamControllerRespondInClosedState(controller);
          } else {
            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);
          }
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerShiftPendingPullInto(controller) {
          const descriptor = controller._pendingPullIntos.shift();
          return descriptor;
        }
        function ReadableByteStreamControllerShouldCallPull(controller) {
          const stream = controller._controlledReadableByteStream;
          if (stream._state !== "readable") {
            return false;
          }
          if (controller._closeRequested) {
            return false;
          }
          if (!controller._started) {
            return false;
          }
          if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            return true;
          }
          if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {
            return true;
          }
          const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);
          if (desiredSize > 0) {
            return true;
          }
          return false;
        }
        function ReadableByteStreamControllerClearAlgorithms(controller) {
          controller._pullAlgorithm = void 0;
          controller._cancelAlgorithm = void 0;
        }
        function ReadableByteStreamControllerClose(controller) {
          const stream = controller._controlledReadableByteStream;
          if (controller._closeRequested || stream._state !== "readable") {
            return;
          }
          if (controller._queueTotalSize > 0) {
            controller._closeRequested = true;
            return;
          }
          if (controller._pendingPullIntos.length > 0) {
            const firstPendingPullInto = controller._pendingPullIntos.peek();
            if (firstPendingPullInto.bytesFilled > 0) {
              const e3 = new TypeError("Insufficient bytes to fill elements in the given buffer");
              ReadableByteStreamControllerError(controller, e3);
              throw e3;
            }
          }
          ReadableByteStreamControllerClearAlgorithms(controller);
          ReadableStreamClose(stream);
        }
        function ReadableByteStreamControllerEnqueue(controller, chunk) {
          const stream = controller._controlledReadableByteStream;
          if (controller._closeRequested || stream._state !== "readable") {
            return;
          }
          const buffer = chunk.buffer;
          const byteOffset = chunk.byteOffset;
          const byteLength = chunk.byteLength;
          const transferredBuffer = TransferArrayBuffer(buffer);
          if (controller._pendingPullIntos.length > 0) {
            const firstPendingPullInto = controller._pendingPullIntos.peek();
            if (IsDetachedBuffer(firstPendingPullInto.buffer))
              ;
            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);
          }
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          if (ReadableStreamHasDefaultReader(stream)) {
            if (ReadableStreamGetNumReadRequests(stream) === 0) {
              ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            } else {
              if (controller._pendingPullIntos.length > 0) {
                ReadableByteStreamControllerShiftPendingPullInto(controller);
              }
              const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);
              ReadableStreamFulfillReadRequest(stream, transferredView, false);
            }
          } else if (ReadableStreamHasBYOBReader(stream)) {
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
          } else {
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
          }
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerError(controller, e3) {
          const stream = controller._controlledReadableByteStream;
          if (stream._state !== "readable") {
            return;
          }
          ReadableByteStreamControllerClearPendingPullIntos(controller);
          ResetQueue(controller);
          ReadableByteStreamControllerClearAlgorithms(controller);
          ReadableStreamError(stream, e3);
        }
        function ReadableByteStreamControllerGetBYOBRequest(controller) {
          if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {
            const firstDescriptor = controller._pendingPullIntos.peek();
            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);
            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);
            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);
            controller._byobRequest = byobRequest;
          }
          return controller._byobRequest;
        }
        function ReadableByteStreamControllerGetDesiredSize(controller) {
          const state = controller._controlledReadableByteStream._state;
          if (state === "errored") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function ReadableByteStreamControllerRespond(controller, bytesWritten) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            if (bytesWritten !== 0) {
              throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");
            }
          } else {
            if (bytesWritten === 0) {
              throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");
            }
            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {
              throw new RangeError("bytesWritten out of range");
            }
          }
          firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);
          ReadableByteStreamControllerRespondInternal(controller, bytesWritten);
        }
        function ReadableByteStreamControllerRespondWithNewView(controller, view) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            if (view.byteLength !== 0) {
              throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream");
            }
          } else {
            if (view.byteLength === 0) {
              throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream");
            }
          }
          if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {
            throw new RangeError("The region specified by view does not match byobRequest");
          }
          if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {
            throw new RangeError("The buffer of view has different capacity than byobRequest");
          }
          if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {
            throw new RangeError("The region specified by view is larger than byobRequest");
          }
          const viewByteLength = view.byteLength;
          firstDescriptor.buffer = TransferArrayBuffer(view.buffer);
          ReadableByteStreamControllerRespondInternal(controller, viewByteLength);
        }
        function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {
          controller._controlledReadableByteStream = stream;
          controller._pullAgain = false;
          controller._pulling = false;
          controller._byobRequest = null;
          controller._queue = controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._closeRequested = false;
          controller._started = false;
          controller._strategyHWM = highWaterMark;
          controller._pullAlgorithm = pullAlgorithm;
          controller._cancelAlgorithm = cancelAlgorithm;
          controller._autoAllocateChunkSize = autoAllocateChunkSize;
          controller._pendingPullIntos = new SimpleQueue();
          stream._readableStreamController = controller;
          const startResult = startAlgorithm();
          uponPromise(promiseResolvedWith(startResult), () => {
            controller._started = true;
            ReadableByteStreamControllerCallPullIfNeeded(controller);
          }, (r2) => {
            ReadableByteStreamControllerError(controller, r2);
          });
        }
        function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {
          const controller = Object.create(ReadableByteStreamController.prototype);
          let startAlgorithm = () => void 0;
          let pullAlgorithm = () => promiseResolvedWith(void 0);
          let cancelAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingByteSource.start !== void 0) {
            startAlgorithm = () => underlyingByteSource.start(controller);
          }
          if (underlyingByteSource.pull !== void 0) {
            pullAlgorithm = () => underlyingByteSource.pull(controller);
          }
          if (underlyingByteSource.cancel !== void 0) {
            cancelAlgorithm = (reason) => underlyingByteSource.cancel(reason);
          }
          const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;
          if (autoAllocateChunkSize === 0) {
            throw new TypeError("autoAllocateChunkSize must be greater than 0");
          }
          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);
        }
        function SetUpReadableStreamBYOBRequest(request, controller, view) {
          request._associatedReadableByteStreamController = controller;
          request._view = view;
        }
        function byobRequestBrandCheckException(name) {
          return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);
        }
        function byteStreamControllerBrandCheckException(name) {
          return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);
        }
        function AcquireReadableStreamBYOBReader(stream) {
          return new ReadableStreamBYOBReader(stream);
        }
        function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {
          stream._reader._readIntoRequests.push(readIntoRequest);
        }
        function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {
          const reader = stream._reader;
          const readIntoRequest = reader._readIntoRequests.shift();
          if (done) {
            readIntoRequest._closeSteps(chunk);
          } else {
            readIntoRequest._chunkSteps(chunk);
          }
        }
        function ReadableStreamGetNumReadIntoRequests(stream) {
          return stream._reader._readIntoRequests.length;
        }
        function ReadableStreamHasBYOBReader(stream) {
          const reader = stream._reader;
          if (reader === void 0) {
            return false;
          }
          if (!IsReadableStreamBYOBReader(reader)) {
            return false;
          }
          return true;
        }
        class ReadableStreamBYOBReader {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "ReadableStreamBYOBReader");
            assertReadableStream(stream, "First parameter");
            if (IsReadableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            }
            if (!IsReadableByteStreamController(stream._readableStreamController)) {
              throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");
            }
            ReadableStreamReaderGenericInitialize(this, stream);
            this._readIntoRequests = new SimpleQueue();
          }
          get closed() {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          cancel(reason = void 0) {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("cancel"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("cancel"));
            }
            return ReadableStreamReaderGenericCancel(this, reason);
          }
          read(view) {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("read"));
            }
            if (!ArrayBuffer.isView(view)) {
              return promiseRejectedWith(new TypeError("view must be an array buffer view"));
            }
            if (view.byteLength === 0) {
              return promiseRejectedWith(new TypeError("view must have non-zero byteLength"));
            }
            if (view.buffer.byteLength === 0) {
              return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));
            }
            if (IsDetachedBuffer(view.buffer))
              ;
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("read from"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readIntoRequest = {
              _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
              _closeSteps: (chunk) => resolvePromise({ value: chunk, done: true }),
              _errorSteps: (e3) => rejectPromise(e3)
            };
            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);
            return promise;
          }
          releaseLock() {
            if (!IsReadableStreamBYOBReader(this)) {
              throw byobReaderBrandCheckException("releaseLock");
            }
            if (this._ownerReadableStream === void 0) {
              return;
            }
            if (this._readIntoRequests.length > 0) {
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            }
            ReadableStreamReaderGenericRelease(this);
          }
        }
        Object.defineProperties(ReadableStreamBYOBReader.prototype, {
          cancel: { enumerable: true },
          read: { enumerable: true },
          releaseLock: { enumerable: true },
          closed: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamBYOBReader",
            configurable: true
          });
        }
        function IsReadableStreamBYOBReader(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_readIntoRequests")) {
            return false;
          }
          return x2 instanceof ReadableStreamBYOBReader;
        }
        function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {
          const stream = reader._ownerReadableStream;
          stream._disturbed = true;
          if (stream._state === "errored") {
            readIntoRequest._errorSteps(stream._storedError);
          } else {
            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);
          }
        }
        function byobReaderBrandCheckException(name) {
          return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);
        }
        function ExtractHighWaterMark(strategy, defaultHWM) {
          const { highWaterMark } = strategy;
          if (highWaterMark === void 0) {
            return defaultHWM;
          }
          if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {
            throw new RangeError("Invalid highWaterMark");
          }
          return highWaterMark;
        }
        function ExtractSizeAlgorithm(strategy) {
          const { size } = strategy;
          if (!size) {
            return () => 1;
          }
          return size;
        }
        function convertQueuingStrategy(init2, context) {
          assertDictionary(init2, context);
          const highWaterMark = init2 === null || init2 === void 0 ? void 0 : init2.highWaterMark;
          const size = init2 === null || init2 === void 0 ? void 0 : init2.size;
          return {
            highWaterMark: highWaterMark === void 0 ? void 0 : convertUnrestrictedDouble(highWaterMark),
            size: size === void 0 ? void 0 : convertQueuingStrategySize(size, `${context} has member 'size' that`)
          };
        }
        function convertQueuingStrategySize(fn, context) {
          assertFunction(fn, context);
          return (chunk) => convertUnrestrictedDouble(fn(chunk));
        }
        function convertUnderlyingSink(original, context) {
          assertDictionary(original, context);
          const abort = original === null || original === void 0 ? void 0 : original.abort;
          const close = original === null || original === void 0 ? void 0 : original.close;
          const start = original === null || original === void 0 ? void 0 : original.start;
          const type = original === null || original === void 0 ? void 0 : original.type;
          const write = original === null || original === void 0 ? void 0 : original.write;
          return {
            abort: abort === void 0 ? void 0 : convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),
            close: close === void 0 ? void 0 : convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),
            start: start === void 0 ? void 0 : convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),
            write: write === void 0 ? void 0 : convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),
            type
          };
        }
        function convertUnderlyingSinkAbortCallback(fn, original, context) {
          assertFunction(fn, context);
          return (reason) => promiseCall(fn, original, [reason]);
        }
        function convertUnderlyingSinkCloseCallback(fn, original, context) {
          assertFunction(fn, context);
          return () => promiseCall(fn, original, []);
        }
        function convertUnderlyingSinkStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertUnderlyingSinkWriteCallback(fn, original, context) {
          assertFunction(fn, context);
          return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
        }
        function assertWritableStream(x2, context) {
          if (!IsWritableStream(x2)) {
            throw new TypeError(`${context} is not a WritableStream.`);
          }
        }
        function isAbortSignal2(value) {
          if (typeof value !== "object" || value === null) {
            return false;
          }
          try {
            return typeof value.aborted === "boolean";
          } catch (_a) {
            return false;
          }
        }
        const supportsAbortController = typeof AbortController === "function";
        function createAbortController() {
          if (supportsAbortController) {
            return new AbortController();
          }
          return void 0;
        }
        class WritableStream {
          constructor(rawUnderlyingSink = {}, rawStrategy = {}) {
            if (rawUnderlyingSink === void 0) {
              rawUnderlyingSink = null;
            } else {
              assertObject(rawUnderlyingSink, "First parameter");
            }
            const strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, "First parameter");
            InitializeWritableStream(this);
            const type = underlyingSink.type;
            if (type !== void 0) {
              throw new RangeError("Invalid type is specified");
            }
            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
            const highWaterMark = ExtractHighWaterMark(strategy, 1);
            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);
          }
          get locked() {
            if (!IsWritableStream(this)) {
              throw streamBrandCheckException$2("locked");
            }
            return IsWritableStreamLocked(this);
          }
          abort(reason = void 0) {
            if (!IsWritableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$2("abort"));
            }
            if (IsWritableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot abort a stream that already has a writer"));
            }
            return WritableStreamAbort(this, reason);
          }
          close() {
            if (!IsWritableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$2("close"));
            }
            if (IsWritableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot close a stream that already has a writer"));
            }
            if (WritableStreamCloseQueuedOrInFlight(this)) {
              return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
            }
            return WritableStreamClose(this);
          }
          getWriter() {
            if (!IsWritableStream(this)) {
              throw streamBrandCheckException$2("getWriter");
            }
            return AcquireWritableStreamDefaultWriter(this);
          }
        }
        Object.defineProperties(WritableStream.prototype, {
          abort: { enumerable: true },
          close: { enumerable: true },
          getWriter: { enumerable: true },
          locked: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStream",
            configurable: true
          });
        }
        function AcquireWritableStreamDefaultWriter(stream) {
          return new WritableStreamDefaultWriter(stream);
        }
        function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
          const stream = Object.create(WritableStream.prototype);
          InitializeWritableStream(stream);
          const controller = Object.create(WritableStreamDefaultController.prototype);
          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
          return stream;
        }
        function InitializeWritableStream(stream) {
          stream._state = "writable";
          stream._storedError = void 0;
          stream._writer = void 0;
          stream._writableStreamController = void 0;
          stream._writeRequests = new SimpleQueue();
          stream._inFlightWriteRequest = void 0;
          stream._closeRequest = void 0;
          stream._inFlightCloseRequest = void 0;
          stream._pendingAbortRequest = void 0;
          stream._backpressure = false;
        }
        function IsWritableStream(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_writableStreamController")) {
            return false;
          }
          return x2 instanceof WritableStream;
        }
        function IsWritableStreamLocked(stream) {
          if (stream._writer === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamAbort(stream, reason) {
          var _a;
          if (stream._state === "closed" || stream._state === "errored") {
            return promiseResolvedWith(void 0);
          }
          stream._writableStreamController._abortReason = reason;
          (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();
          const state = stream._state;
          if (state === "closed" || state === "errored") {
            return promiseResolvedWith(void 0);
          }
          if (stream._pendingAbortRequest !== void 0) {
            return stream._pendingAbortRequest._promise;
          }
          let wasAlreadyErroring = false;
          if (state === "erroring") {
            wasAlreadyErroring = true;
            reason = void 0;
          }
          const promise = newPromise((resolve2, reject) => {
            stream._pendingAbortRequest = {
              _promise: void 0,
              _resolve: resolve2,
              _reject: reject,
              _reason: reason,
              _wasAlreadyErroring: wasAlreadyErroring
            };
          });
          stream._pendingAbortRequest._promise = promise;
          if (!wasAlreadyErroring) {
            WritableStreamStartErroring(stream, reason);
          }
          return promise;
        }
        function WritableStreamClose(stream) {
          const state = stream._state;
          if (state === "closed" || state === "errored") {
            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));
          }
          const promise = newPromise((resolve2, reject) => {
            const closeRequest = {
              _resolve: resolve2,
              _reject: reject
            };
            stream._closeRequest = closeRequest;
          });
          const writer = stream._writer;
          if (writer !== void 0 && stream._backpressure && state === "writable") {
            defaultWriterReadyPromiseResolve(writer);
          }
          WritableStreamDefaultControllerClose(stream._writableStreamController);
          return promise;
        }
        function WritableStreamAddWriteRequest(stream) {
          const promise = newPromise((resolve2, reject) => {
            const writeRequest = {
              _resolve: resolve2,
              _reject: reject
            };
            stream._writeRequests.push(writeRequest);
          });
          return promise;
        }
        function WritableStreamDealWithRejection(stream, error2) {
          const state = stream._state;
          if (state === "writable") {
            WritableStreamStartErroring(stream, error2);
            return;
          }
          WritableStreamFinishErroring(stream);
        }
        function WritableStreamStartErroring(stream, reason) {
          const controller = stream._writableStreamController;
          stream._state = "erroring";
          stream._storedError = reason;
          const writer = stream._writer;
          if (writer !== void 0) {
            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);
          }
          if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {
            WritableStreamFinishErroring(stream);
          }
        }
        function WritableStreamFinishErroring(stream) {
          stream._state = "errored";
          stream._writableStreamController[ErrorSteps]();
          const storedError = stream._storedError;
          stream._writeRequests.forEach((writeRequest) => {
            writeRequest._reject(storedError);
          });
          stream._writeRequests = new SimpleQueue();
          if (stream._pendingAbortRequest === void 0) {
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
            return;
          }
          const abortRequest = stream._pendingAbortRequest;
          stream._pendingAbortRequest = void 0;
          if (abortRequest._wasAlreadyErroring) {
            abortRequest._reject(storedError);
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
            return;
          }
          const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);
          uponPromise(promise, () => {
            abortRequest._resolve();
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          }, (reason) => {
            abortRequest._reject(reason);
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          });
        }
        function WritableStreamFinishInFlightWrite(stream) {
          stream._inFlightWriteRequest._resolve(void 0);
          stream._inFlightWriteRequest = void 0;
        }
        function WritableStreamFinishInFlightWriteWithError(stream, error2) {
          stream._inFlightWriteRequest._reject(error2);
          stream._inFlightWriteRequest = void 0;
          WritableStreamDealWithRejection(stream, error2);
        }
        function WritableStreamFinishInFlightClose(stream) {
          stream._inFlightCloseRequest._resolve(void 0);
          stream._inFlightCloseRequest = void 0;
          const state = stream._state;
          if (state === "erroring") {
            stream._storedError = void 0;
            if (stream._pendingAbortRequest !== void 0) {
              stream._pendingAbortRequest._resolve();
              stream._pendingAbortRequest = void 0;
            }
          }
          stream._state = "closed";
          const writer = stream._writer;
          if (writer !== void 0) {
            defaultWriterClosedPromiseResolve(writer);
          }
        }
        function WritableStreamFinishInFlightCloseWithError(stream, error2) {
          stream._inFlightCloseRequest._reject(error2);
          stream._inFlightCloseRequest = void 0;
          if (stream._pendingAbortRequest !== void 0) {
            stream._pendingAbortRequest._reject(error2);
            stream._pendingAbortRequest = void 0;
          }
          WritableStreamDealWithRejection(stream, error2);
        }
        function WritableStreamCloseQueuedOrInFlight(stream) {
          if (stream._closeRequest === void 0 && stream._inFlightCloseRequest === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamHasOperationMarkedInFlight(stream) {
          if (stream._inFlightWriteRequest === void 0 && stream._inFlightCloseRequest === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamMarkCloseRequestInFlight(stream) {
          stream._inFlightCloseRequest = stream._closeRequest;
          stream._closeRequest = void 0;
        }
        function WritableStreamMarkFirstWriteRequestInFlight(stream) {
          stream._inFlightWriteRequest = stream._writeRequests.shift();
        }
        function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {
          if (stream._closeRequest !== void 0) {
            stream._closeRequest._reject(stream._storedError);
            stream._closeRequest = void 0;
          }
          const writer = stream._writer;
          if (writer !== void 0) {
            defaultWriterClosedPromiseReject(writer, stream._storedError);
          }
        }
        function WritableStreamUpdateBackpressure(stream, backpressure) {
          const writer = stream._writer;
          if (writer !== void 0 && backpressure !== stream._backpressure) {
            if (backpressure) {
              defaultWriterReadyPromiseReset(writer);
            } else {
              defaultWriterReadyPromiseResolve(writer);
            }
          }
          stream._backpressure = backpressure;
        }
        class WritableStreamDefaultWriter {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "WritableStreamDefaultWriter");
            assertWritableStream(stream, "First parameter");
            if (IsWritableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive writing by another writer");
            }
            this._ownerWritableStream = stream;
            stream._writer = this;
            const state = stream._state;
            if (state === "writable") {
              if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {
                defaultWriterReadyPromiseInitialize(this);
              } else {
                defaultWriterReadyPromiseInitializeAsResolved(this);
              }
              defaultWriterClosedPromiseInitialize(this);
            } else if (state === "erroring") {
              defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);
              defaultWriterClosedPromiseInitialize(this);
            } else if (state === "closed") {
              defaultWriterReadyPromiseInitializeAsResolved(this);
              defaultWriterClosedPromiseInitializeAsResolved(this);
            } else {
              const storedError = stream._storedError;
              defaultWriterReadyPromiseInitializeAsRejected(this, storedError);
              defaultWriterClosedPromiseInitializeAsRejected(this, storedError);
            }
          }
          get closed() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          get desiredSize() {
            if (!IsWritableStreamDefaultWriter(this)) {
              throw defaultWriterBrandCheckException("desiredSize");
            }
            if (this._ownerWritableStream === void 0) {
              throw defaultWriterLockException("desiredSize");
            }
            return WritableStreamDefaultWriterGetDesiredSize(this);
          }
          get ready() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("ready"));
            }
            return this._readyPromise;
          }
          abort(reason = void 0) {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("abort"));
            }
            if (this._ownerWritableStream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("abort"));
            }
            return WritableStreamDefaultWriterAbort(this, reason);
          }
          close() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("close"));
            }
            const stream = this._ownerWritableStream;
            if (stream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("close"));
            }
            if (WritableStreamCloseQueuedOrInFlight(stream)) {
              return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
            }
            return WritableStreamDefaultWriterClose(this);
          }
          releaseLock() {
            if (!IsWritableStreamDefaultWriter(this)) {
              throw defaultWriterBrandCheckException("releaseLock");
            }
            const stream = this._ownerWritableStream;
            if (stream === void 0) {
              return;
            }
            WritableStreamDefaultWriterRelease(this);
          }
          write(chunk = void 0) {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("write"));
            }
            if (this._ownerWritableStream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("write to"));
            }
            return WritableStreamDefaultWriterWrite(this, chunk);
          }
        }
        Object.defineProperties(WritableStreamDefaultWriter.prototype, {
          abort: { enumerable: true },
          close: { enumerable: true },
          releaseLock: { enumerable: true },
          write: { enumerable: true },
          closed: { enumerable: true },
          desiredSize: { enumerable: true },
          ready: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStreamDefaultWriter",
            configurable: true
          });
        }
        function IsWritableStreamDefaultWriter(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_ownerWritableStream")) {
            return false;
          }
          return x2 instanceof WritableStreamDefaultWriter;
        }
        function WritableStreamDefaultWriterAbort(writer, reason) {
          const stream = writer._ownerWritableStream;
          return WritableStreamAbort(stream, reason);
        }
        function WritableStreamDefaultWriterClose(writer) {
          const stream = writer._ownerWritableStream;
          return WritableStreamClose(stream);
        }
        function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {
          const stream = writer._ownerWritableStream;
          const state = stream._state;
          if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
            return promiseResolvedWith(void 0);
          }
          if (state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          return WritableStreamDefaultWriterClose(writer);
        }
        function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error2) {
          if (writer._closedPromiseState === "pending") {
            defaultWriterClosedPromiseReject(writer, error2);
          } else {
            defaultWriterClosedPromiseResetToRejected(writer, error2);
          }
        }
        function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error2) {
          if (writer._readyPromiseState === "pending") {
            defaultWriterReadyPromiseReject(writer, error2);
          } else {
            defaultWriterReadyPromiseResetToRejected(writer, error2);
          }
        }
        function WritableStreamDefaultWriterGetDesiredSize(writer) {
          const stream = writer._ownerWritableStream;
          const state = stream._state;
          if (state === "errored" || state === "erroring") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);
        }
        function WritableStreamDefaultWriterRelease(writer) {
          const stream = writer._ownerWritableStream;
          const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);
          WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);
          WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);
          stream._writer = void 0;
          writer._ownerWritableStream = void 0;
        }
        function WritableStreamDefaultWriterWrite(writer, chunk) {
          const stream = writer._ownerWritableStream;
          const controller = stream._writableStreamController;
          const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);
          if (stream !== writer._ownerWritableStream) {
            return promiseRejectedWith(defaultWriterLockException("write to"));
          }
          const state = stream._state;
          if (state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
            return promiseRejectedWith(new TypeError("The stream is closing or closed and cannot be written to"));
          }
          if (state === "erroring") {
            return promiseRejectedWith(stream._storedError);
          }
          const promise = WritableStreamAddWriteRequest(stream);
          WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);
          return promise;
        }
        const closeSentinel = {};
        class WritableStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get abortReason() {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("abortReason");
            }
            return this._abortReason;
          }
          get signal() {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("signal");
            }
            if (this._abortController === void 0) {
              throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");
            }
            return this._abortController.signal;
          }
          error(e3 = void 0) {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("error");
            }
            const state = this._controlledWritableStream._state;
            if (state !== "writable") {
              return;
            }
            WritableStreamDefaultControllerError(this, e3);
          }
          [AbortSteps](reason) {
            const result = this._abortAlgorithm(reason);
            WritableStreamDefaultControllerClearAlgorithms(this);
            return result;
          }
          [ErrorSteps]() {
            ResetQueue(this);
          }
        }
        Object.defineProperties(WritableStreamDefaultController.prototype, {
          abortReason: { enumerable: true },
          signal: { enumerable: true },
          error: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStreamDefaultController",
            configurable: true
          });
        }
        function IsWritableStreamDefaultController(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_controlledWritableStream")) {
            return false;
          }
          return x2 instanceof WritableStreamDefaultController;
        }
        function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
          controller._controlledWritableStream = stream;
          stream._writableStreamController = controller;
          controller._queue = void 0;
          controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._abortReason = void 0;
          controller._abortController = createAbortController();
          controller._started = false;
          controller._strategySizeAlgorithm = sizeAlgorithm;
          controller._strategyHWM = highWaterMark;
          controller._writeAlgorithm = writeAlgorithm;
          controller._closeAlgorithm = closeAlgorithm;
          controller._abortAlgorithm = abortAlgorithm;
          const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
          WritableStreamUpdateBackpressure(stream, backpressure);
          const startResult = startAlgorithm();
          const startPromise = promiseResolvedWith(startResult);
          uponPromise(startPromise, () => {
            controller._started = true;
            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
          }, (r2) => {
            controller._started = true;
            WritableStreamDealWithRejection(stream, r2);
          });
        }
        function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {
          const controller = Object.create(WritableStreamDefaultController.prototype);
          let startAlgorithm = () => void 0;
          let writeAlgorithm = () => promiseResolvedWith(void 0);
          let closeAlgorithm = () => promiseResolvedWith(void 0);
          let abortAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingSink.start !== void 0) {
            startAlgorithm = () => underlyingSink.start(controller);
          }
          if (underlyingSink.write !== void 0) {
            writeAlgorithm = (chunk) => underlyingSink.write(chunk, controller);
          }
          if (underlyingSink.close !== void 0) {
            closeAlgorithm = () => underlyingSink.close();
          }
          if (underlyingSink.abort !== void 0) {
            abortAlgorithm = (reason) => underlyingSink.abort(reason);
          }
          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
        }
        function WritableStreamDefaultControllerClearAlgorithms(controller) {
          controller._writeAlgorithm = void 0;
          controller._closeAlgorithm = void 0;
          controller._abortAlgorithm = void 0;
          controller._strategySizeAlgorithm = void 0;
        }
        function WritableStreamDefaultControllerClose(controller) {
          EnqueueValueWithSize(controller, closeSentinel, 0);
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }
        function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {
          try {
            return controller._strategySizeAlgorithm(chunk);
          } catch (chunkSizeE) {
            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);
            return 1;
          }
        }
        function WritableStreamDefaultControllerGetDesiredSize(controller) {
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {
          try {
            EnqueueValueWithSize(controller, chunk, chunkSize);
          } catch (enqueueE) {
            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);
            return;
          }
          const stream = controller._controlledWritableStream;
          if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === "writable") {
            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
            WritableStreamUpdateBackpressure(stream, backpressure);
          }
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }
        function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {
          const stream = controller._controlledWritableStream;
          if (!controller._started) {
            return;
          }
          if (stream._inFlightWriteRequest !== void 0) {
            return;
          }
          const state = stream._state;
          if (state === "erroring") {
            WritableStreamFinishErroring(stream);
            return;
          }
          if (controller._queue.length === 0) {
            return;
          }
          const value = PeekQueueValue(controller);
          if (value === closeSentinel) {
            WritableStreamDefaultControllerProcessClose(controller);
          } else {
            WritableStreamDefaultControllerProcessWrite(controller, value);
          }
        }
        function WritableStreamDefaultControllerErrorIfNeeded(controller, error2) {
          if (controller._controlledWritableStream._state === "writable") {
            WritableStreamDefaultControllerError(controller, error2);
          }
        }
        function WritableStreamDefaultControllerProcessClose(controller) {
          const stream = controller._controlledWritableStream;
          WritableStreamMarkCloseRequestInFlight(stream);
          DequeueValue(controller);
          const sinkClosePromise = controller._closeAlgorithm();
          WritableStreamDefaultControllerClearAlgorithms(controller);
          uponPromise(sinkClosePromise, () => {
            WritableStreamFinishInFlightClose(stream);
          }, (reason) => {
            WritableStreamFinishInFlightCloseWithError(stream, reason);
          });
        }
        function WritableStreamDefaultControllerProcessWrite(controller, chunk) {
          const stream = controller._controlledWritableStream;
          WritableStreamMarkFirstWriteRequestInFlight(stream);
          const sinkWritePromise = controller._writeAlgorithm(chunk);
          uponPromise(sinkWritePromise, () => {
            WritableStreamFinishInFlightWrite(stream);
            const state = stream._state;
            DequeueValue(controller);
            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === "writable") {
              const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
              WritableStreamUpdateBackpressure(stream, backpressure);
            }
            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
          }, (reason) => {
            if (stream._state === "writable") {
              WritableStreamDefaultControllerClearAlgorithms(controller);
            }
            WritableStreamFinishInFlightWriteWithError(stream, reason);
          });
        }
        function WritableStreamDefaultControllerGetBackpressure(controller) {
          const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);
          return desiredSize <= 0;
        }
        function WritableStreamDefaultControllerError(controller, error2) {
          const stream = controller._controlledWritableStream;
          WritableStreamDefaultControllerClearAlgorithms(controller);
          WritableStreamStartErroring(stream, error2);
        }
        function streamBrandCheckException$2(name) {
          return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);
        }
        function defaultControllerBrandCheckException$2(name) {
          return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);
        }
        function defaultWriterBrandCheckException(name) {
          return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);
        }
        function defaultWriterLockException(name) {
          return new TypeError("Cannot " + name + " a stream using a released writer");
        }
        function defaultWriterClosedPromiseInitialize(writer) {
          writer._closedPromise = newPromise((resolve2, reject) => {
            writer._closedPromise_resolve = resolve2;
            writer._closedPromise_reject = reject;
            writer._closedPromiseState = "pending";
          });
        }
        function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {
          defaultWriterClosedPromiseInitialize(writer);
          defaultWriterClosedPromiseReject(writer, reason);
        }
        function defaultWriterClosedPromiseInitializeAsResolved(writer) {
          defaultWriterClosedPromiseInitialize(writer);
          defaultWriterClosedPromiseResolve(writer);
        }
        function defaultWriterClosedPromiseReject(writer, reason) {
          if (writer._closedPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(writer._closedPromise);
          writer._closedPromise_reject(reason);
          writer._closedPromise_resolve = void 0;
          writer._closedPromise_reject = void 0;
          writer._closedPromiseState = "rejected";
        }
        function defaultWriterClosedPromiseResetToRejected(writer, reason) {
          defaultWriterClosedPromiseInitializeAsRejected(writer, reason);
        }
        function defaultWriterClosedPromiseResolve(writer) {
          if (writer._closedPromise_resolve === void 0) {
            return;
          }
          writer._closedPromise_resolve(void 0);
          writer._closedPromise_resolve = void 0;
          writer._closedPromise_reject = void 0;
          writer._closedPromiseState = "resolved";
        }
        function defaultWriterReadyPromiseInitialize(writer) {
          writer._readyPromise = newPromise((resolve2, reject) => {
            writer._readyPromise_resolve = resolve2;
            writer._readyPromise_reject = reject;
          });
          writer._readyPromiseState = "pending";
        }
        function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {
          defaultWriterReadyPromiseInitialize(writer);
          defaultWriterReadyPromiseReject(writer, reason);
        }
        function defaultWriterReadyPromiseInitializeAsResolved(writer) {
          defaultWriterReadyPromiseInitialize(writer);
          defaultWriterReadyPromiseResolve(writer);
        }
        function defaultWriterReadyPromiseReject(writer, reason) {
          if (writer._readyPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(writer._readyPromise);
          writer._readyPromise_reject(reason);
          writer._readyPromise_resolve = void 0;
          writer._readyPromise_reject = void 0;
          writer._readyPromiseState = "rejected";
        }
        function defaultWriterReadyPromiseReset(writer) {
          defaultWriterReadyPromiseInitialize(writer);
        }
        function defaultWriterReadyPromiseResetToRejected(writer, reason) {
          defaultWriterReadyPromiseInitializeAsRejected(writer, reason);
        }
        function defaultWriterReadyPromiseResolve(writer) {
          if (writer._readyPromise_resolve === void 0) {
            return;
          }
          writer._readyPromise_resolve(void 0);
          writer._readyPromise_resolve = void 0;
          writer._readyPromise_reject = void 0;
          writer._readyPromiseState = "fulfilled";
        }
        const NativeDOMException = typeof DOMException !== "undefined" ? DOMException : void 0;
        function isDOMExceptionConstructor(ctor) {
          if (!(typeof ctor === "function" || typeof ctor === "object")) {
            return false;
          }
          try {
            new ctor();
            return true;
          } catch (_a) {
            return false;
          }
        }
        function createDOMExceptionPolyfill() {
          const ctor = function DOMException2(message, name) {
            this.message = message || "";
            this.name = name || "Error";
            if (Error.captureStackTrace) {
              Error.captureStackTrace(this, this.constructor);
            }
          };
          ctor.prototype = Object.create(Error.prototype);
          Object.defineProperty(ctor.prototype, "constructor", { value: ctor, writable: true, configurable: true });
          return ctor;
        }
        const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();
        function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {
          const reader = AcquireReadableStreamDefaultReader(source);
          const writer = AcquireWritableStreamDefaultWriter(dest);
          source._disturbed = true;
          let shuttingDown = false;
          let currentWrite = promiseResolvedWith(void 0);
          return newPromise((resolve2, reject) => {
            let abortAlgorithm;
            if (signal !== void 0) {
              abortAlgorithm = () => {
                const error2 = new DOMException$1("Aborted", "AbortError");
                const actions = [];
                if (!preventAbort) {
                  actions.push(() => {
                    if (dest._state === "writable") {
                      return WritableStreamAbort(dest, error2);
                    }
                    return promiseResolvedWith(void 0);
                  });
                }
                if (!preventCancel) {
                  actions.push(() => {
                    if (source._state === "readable") {
                      return ReadableStreamCancel(source, error2);
                    }
                    return promiseResolvedWith(void 0);
                  });
                }
                shutdownWithAction(() => Promise.all(actions.map((action) => action())), true, error2);
              };
              if (signal.aborted) {
                abortAlgorithm();
                return;
              }
              signal.addEventListener("abort", abortAlgorithm);
            }
            function pipeLoop() {
              return newPromise((resolveLoop, rejectLoop) => {
                function next(done) {
                  if (done) {
                    resolveLoop();
                  } else {
                    PerformPromiseThen(pipeStep(), next, rejectLoop);
                  }
                }
                next(false);
              });
            }
            function pipeStep() {
              if (shuttingDown) {
                return promiseResolvedWith(true);
              }
              return PerformPromiseThen(writer._readyPromise, () => {
                return newPromise((resolveRead, rejectRead) => {
                  ReadableStreamDefaultReaderRead(reader, {
                    _chunkSteps: (chunk) => {
                      currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), void 0, noop4);
                      resolveRead(false);
                    },
                    _closeSteps: () => resolveRead(true),
                    _errorSteps: rejectRead
                  });
                });
              });
            }
            isOrBecomesErrored(source, reader._closedPromise, (storedError) => {
              if (!preventAbort) {
                shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);
              } else {
                shutdown(true, storedError);
              }
            });
            isOrBecomesErrored(dest, writer._closedPromise, (storedError) => {
              if (!preventCancel) {
                shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);
              } else {
                shutdown(true, storedError);
              }
            });
            isOrBecomesClosed(source, reader._closedPromise, () => {
              if (!preventClose) {
                shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));
              } else {
                shutdown();
              }
            });
            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === "closed") {
              const destClosed = new TypeError("the destination writable stream closed before all data could be piped to it");
              if (!preventCancel) {
                shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);
              } else {
                shutdown(true, destClosed);
              }
            }
            setPromiseIsHandledToTrue(pipeLoop());
            function waitForWritesToFinish() {
              const oldCurrentWrite = currentWrite;
              return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : void 0);
            }
            function isOrBecomesErrored(stream, promise, action) {
              if (stream._state === "errored") {
                action(stream._storedError);
              } else {
                uponRejection(promise, action);
              }
            }
            function isOrBecomesClosed(stream, promise, action) {
              if (stream._state === "closed") {
                action();
              } else {
                uponFulfillment(promise, action);
              }
            }
            function shutdownWithAction(action, originalIsError, originalError) {
              if (shuttingDown) {
                return;
              }
              shuttingDown = true;
              if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
                uponFulfillment(waitForWritesToFinish(), doTheRest);
              } else {
                doTheRest();
              }
              function doTheRest() {
                uponPromise(action(), () => finalize(originalIsError, originalError), (newError) => finalize(true, newError));
              }
            }
            function shutdown(isError, error2) {
              if (shuttingDown) {
                return;
              }
              shuttingDown = true;
              if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
                uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error2));
              } else {
                finalize(isError, error2);
              }
            }
            function finalize(isError, error2) {
              WritableStreamDefaultWriterRelease(writer);
              ReadableStreamReaderGenericRelease(reader);
              if (signal !== void 0) {
                signal.removeEventListener("abort", abortAlgorithm);
              }
              if (isError) {
                reject(error2);
              } else {
                resolve2(void 0);
              }
            }
          });
        }
        class ReadableStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get desiredSize() {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("desiredSize");
            }
            return ReadableStreamDefaultControllerGetDesiredSize(this);
          }
          close() {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("close");
            }
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
              throw new TypeError("The stream is not in a state that permits close");
            }
            ReadableStreamDefaultControllerClose(this);
          }
          enqueue(chunk = void 0) {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("enqueue");
            }
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
              throw new TypeError("The stream is not in a state that permits enqueue");
            }
            return ReadableStreamDefaultControllerEnqueue(this, chunk);
          }
          error(e3 = void 0) {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("error");
            }
            ReadableStreamDefaultControllerError(this, e3);
          }
          [CancelSteps](reason) {
            ResetQueue(this);
            const result = this._cancelAlgorithm(reason);
            ReadableStreamDefaultControllerClearAlgorithms(this);
            return result;
          }
          [PullSteps](readRequest) {
            const stream = this._controlledReadableStream;
            if (this._queue.length > 0) {
              const chunk = DequeueValue(this);
              if (this._closeRequested && this._queue.length === 0) {
                ReadableStreamDefaultControllerClearAlgorithms(this);
                ReadableStreamClose(stream);
              } else {
                ReadableStreamDefaultControllerCallPullIfNeeded(this);
              }
              readRequest._chunkSteps(chunk);
            } else {
              ReadableStreamAddReadRequest(stream, readRequest);
              ReadableStreamDefaultControllerCallPullIfNeeded(this);
            }
          }
        }
        Object.defineProperties(ReadableStreamDefaultController.prototype, {
          close: { enumerable: true },
          enqueue: { enumerable: true },
          error: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamDefaultController",
            configurable: true
          });
        }
        function IsReadableStreamDefaultController(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_controlledReadableStream")) {
            return false;
          }
          return x2 instanceof ReadableStreamDefaultController;
        }
        function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {
          const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);
          if (!shouldPull) {
            return;
          }
          if (controller._pulling) {
            controller._pullAgain = true;
            return;
          }
          controller._pulling = true;
          const pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, () => {
            controller._pulling = false;
            if (controller._pullAgain) {
              controller._pullAgain = false;
              ReadableStreamDefaultControllerCallPullIfNeeded(controller);
            }
          }, (e3) => {
            ReadableStreamDefaultControllerError(controller, e3);
          });
        }
        function ReadableStreamDefaultControllerShouldCallPull(controller) {
          const stream = controller._controlledReadableStream;
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return false;
          }
          if (!controller._started) {
            return false;
          }
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            return true;
          }
          const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);
          if (desiredSize > 0) {
            return true;
          }
          return false;
        }
        function ReadableStreamDefaultControllerClearAlgorithms(controller) {
          controller._pullAlgorithm = void 0;
          controller._cancelAlgorithm = void 0;
          controller._strategySizeAlgorithm = void 0;
        }
        function ReadableStreamDefaultControllerClose(controller) {
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return;
          }
          const stream = controller._controlledReadableStream;
          controller._closeRequested = true;
          if (controller._queue.length === 0) {
            ReadableStreamDefaultControllerClearAlgorithms(controller);
            ReadableStreamClose(stream);
          }
        }
        function ReadableStreamDefaultControllerEnqueue(controller, chunk) {
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return;
          }
          const stream = controller._controlledReadableStream;
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            ReadableStreamFulfillReadRequest(stream, chunk, false);
          } else {
            let chunkSize;
            try {
              chunkSize = controller._strategySizeAlgorithm(chunk);
            } catch (chunkSizeE) {
              ReadableStreamDefaultControllerError(controller, chunkSizeE);
              throw chunkSizeE;
            }
            try {
              EnqueueValueWithSize(controller, chunk, chunkSize);
            } catch (enqueueE) {
              ReadableStreamDefaultControllerError(controller, enqueueE);
              throw enqueueE;
            }
          }
          ReadableStreamDefaultControllerCallPullIfNeeded(controller);
        }
        function ReadableStreamDefaultControllerError(controller, e3) {
          const stream = controller._controlledReadableStream;
          if (stream._state !== "readable") {
            return;
          }
          ResetQueue(controller);
          ReadableStreamDefaultControllerClearAlgorithms(controller);
          ReadableStreamError(stream, e3);
        }
        function ReadableStreamDefaultControllerGetDesiredSize(controller) {
          const state = controller._controlledReadableStream._state;
          if (state === "errored") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function ReadableStreamDefaultControllerHasBackpressure(controller) {
          if (ReadableStreamDefaultControllerShouldCallPull(controller)) {
            return false;
          }
          return true;
        }
        function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {
          const state = controller._controlledReadableStream._state;
          if (!controller._closeRequested && state === "readable") {
            return true;
          }
          return false;
        }
        function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
          controller._controlledReadableStream = stream;
          controller._queue = void 0;
          controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._started = false;
          controller._closeRequested = false;
          controller._pullAgain = false;
          controller._pulling = false;
          controller._strategySizeAlgorithm = sizeAlgorithm;
          controller._strategyHWM = highWaterMark;
          controller._pullAlgorithm = pullAlgorithm;
          controller._cancelAlgorithm = cancelAlgorithm;
          stream._readableStreamController = controller;
          const startResult = startAlgorithm();
          uponPromise(promiseResolvedWith(startResult), () => {
            controller._started = true;
            ReadableStreamDefaultControllerCallPullIfNeeded(controller);
          }, (r2) => {
            ReadableStreamDefaultControllerError(controller, r2);
          });
        }
        function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {
          const controller = Object.create(ReadableStreamDefaultController.prototype);
          let startAlgorithm = () => void 0;
          let pullAlgorithm = () => promiseResolvedWith(void 0);
          let cancelAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingSource.start !== void 0) {
            startAlgorithm = () => underlyingSource.start(controller);
          }
          if (underlyingSource.pull !== void 0) {
            pullAlgorithm = () => underlyingSource.pull(controller);
          }
          if (underlyingSource.cancel !== void 0) {
            cancelAlgorithm = (reason) => underlyingSource.cancel(reason);
          }
          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
        }
        function defaultControllerBrandCheckException$1(name) {
          return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);
        }
        function ReadableStreamTee(stream, cloneForBranch2) {
          if (IsReadableByteStreamController(stream._readableStreamController)) {
            return ReadableByteStreamTee(stream);
          }
          return ReadableStreamDefaultTee(stream);
        }
        function ReadableStreamDefaultTee(stream, cloneForBranch2) {
          const reader = AcquireReadableStreamDefaultReader(stream);
          let reading = false;
          let readAgain = false;
          let canceled1 = false;
          let canceled2 = false;
          let reason1;
          let reason2;
          let branch1;
          let branch2;
          let resolveCancelPromise;
          const cancelPromise = newPromise((resolve2) => {
            resolveCancelPromise = resolve2;
          });
          function pullAlgorithm() {
            if (reading) {
              readAgain = true;
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const readRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask2(() => {
                  readAgain = false;
                  const chunk1 = chunk;
                  const chunk2 = chunk;
                  if (!canceled1) {
                    ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);
                  }
                  if (!canceled2) {
                    ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);
                  }
                  reading = false;
                  if (readAgain) {
                    pullAlgorithm();
                  }
                });
              },
              _closeSteps: () => {
                reading = false;
                if (!canceled1) {
                  ReadableStreamDefaultControllerClose(branch1._readableStreamController);
                }
                if (!canceled2) {
                  ReadableStreamDefaultControllerClose(branch2._readableStreamController);
                }
                if (!canceled1 || !canceled2) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
            return promiseResolvedWith(void 0);
          }
          function cancel1Algorithm(reason) {
            canceled1 = true;
            reason1 = reason;
            if (canceled2) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function cancel2Algorithm(reason) {
            canceled2 = true;
            reason2 = reason;
            if (canceled1) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function startAlgorithm() {
          }
          branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);
          branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);
          uponRejection(reader._closedPromise, (r2) => {
            ReadableStreamDefaultControllerError(branch1._readableStreamController, r2);
            ReadableStreamDefaultControllerError(branch2._readableStreamController, r2);
            if (!canceled1 || !canceled2) {
              resolveCancelPromise(void 0);
            }
          });
          return [branch1, branch2];
        }
        function ReadableByteStreamTee(stream) {
          let reader = AcquireReadableStreamDefaultReader(stream);
          let reading = false;
          let readAgainForBranch1 = false;
          let readAgainForBranch2 = false;
          let canceled1 = false;
          let canceled2 = false;
          let reason1;
          let reason2;
          let branch1;
          let branch2;
          let resolveCancelPromise;
          const cancelPromise = newPromise((resolve2) => {
            resolveCancelPromise = resolve2;
          });
          function forwardReaderError(thisReader) {
            uponRejection(thisReader._closedPromise, (r2) => {
              if (thisReader !== reader) {
                return;
              }
              ReadableByteStreamControllerError(branch1._readableStreamController, r2);
              ReadableByteStreamControllerError(branch2._readableStreamController, r2);
              if (!canceled1 || !canceled2) {
                resolveCancelPromise(void 0);
              }
            });
          }
          function pullWithDefaultReader() {
            if (IsReadableStreamBYOBReader(reader)) {
              ReadableStreamReaderGenericRelease(reader);
              reader = AcquireReadableStreamDefaultReader(stream);
              forwardReaderError(reader);
            }
            const readRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask2(() => {
                  readAgainForBranch1 = false;
                  readAgainForBranch2 = false;
                  const chunk1 = chunk;
                  let chunk2 = chunk;
                  if (!canceled1 && !canceled2) {
                    try {
                      chunk2 = CloneAsUint8Array(chunk);
                    } catch (cloneE) {
                      ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);
                      ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);
                      resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                      return;
                    }
                  }
                  if (!canceled1) {
                    ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);
                  }
                  if (!canceled2) {
                    ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);
                  }
                  reading = false;
                  if (readAgainForBranch1) {
                    pull1Algorithm();
                  } else if (readAgainForBranch2) {
                    pull2Algorithm();
                  }
                });
              },
              _closeSteps: () => {
                reading = false;
                if (!canceled1) {
                  ReadableByteStreamControllerClose(branch1._readableStreamController);
                }
                if (!canceled2) {
                  ReadableByteStreamControllerClose(branch2._readableStreamController);
                }
                if (branch1._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);
                }
                if (branch2._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);
                }
                if (!canceled1 || !canceled2) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
          }
          function pullWithBYOBReader(view, forBranch2) {
            if (IsReadableStreamDefaultReader(reader)) {
              ReadableStreamReaderGenericRelease(reader);
              reader = AcquireReadableStreamBYOBReader(stream);
              forwardReaderError(reader);
            }
            const byobBranch = forBranch2 ? branch2 : branch1;
            const otherBranch = forBranch2 ? branch1 : branch2;
            const readIntoRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask2(() => {
                  readAgainForBranch1 = false;
                  readAgainForBranch2 = false;
                  const byobCanceled = forBranch2 ? canceled2 : canceled1;
                  const otherCanceled = forBranch2 ? canceled1 : canceled2;
                  if (!otherCanceled) {
                    let clonedChunk;
                    try {
                      clonedChunk = CloneAsUint8Array(chunk);
                    } catch (cloneE) {
                      ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);
                      ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);
                      resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                      return;
                    }
                    if (!byobCanceled) {
                      ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                    }
                    ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);
                  } else if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                  }
                  reading = false;
                  if (readAgainForBranch1) {
                    pull1Algorithm();
                  } else if (readAgainForBranch2) {
                    pull2Algorithm();
                  }
                });
              },
              _closeSteps: (chunk) => {
                reading = false;
                const byobCanceled = forBranch2 ? canceled2 : canceled1;
                const otherCanceled = forBranch2 ? canceled1 : canceled2;
                if (!byobCanceled) {
                  ReadableByteStreamControllerClose(byobBranch._readableStreamController);
                }
                if (!otherCanceled) {
                  ReadableByteStreamControllerClose(otherBranch._readableStreamController);
                }
                if (chunk !== void 0) {
                  if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                  }
                  if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {
                    ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);
                  }
                }
                if (!byobCanceled || !otherCanceled) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);
          }
          function pull1Algorithm() {
            if (reading) {
              readAgainForBranch1 = true;
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);
            if (byobRequest === null) {
              pullWithDefaultReader();
            } else {
              pullWithBYOBReader(byobRequest._view, false);
            }
            return promiseResolvedWith(void 0);
          }
          function pull2Algorithm() {
            if (reading) {
              readAgainForBranch2 = true;
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);
            if (byobRequest === null) {
              pullWithDefaultReader();
            } else {
              pullWithBYOBReader(byobRequest._view, true);
            }
            return promiseResolvedWith(void 0);
          }
          function cancel1Algorithm(reason) {
            canceled1 = true;
            reason1 = reason;
            if (canceled2) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function cancel2Algorithm(reason) {
            canceled2 = true;
            reason2 = reason;
            if (canceled1) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function startAlgorithm() {
            return;
          }
          branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);
          branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);
          forwardReaderError(reader);
          return [branch1, branch2];
        }
        function convertUnderlyingDefaultOrByteSource(source, context) {
          assertDictionary(source, context);
          const original = source;
          const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;
          const cancel = original === null || original === void 0 ? void 0 : original.cancel;
          const pull = original === null || original === void 0 ? void 0 : original.pull;
          const start = original === null || original === void 0 ? void 0 : original.start;
          const type = original === null || original === void 0 ? void 0 : original.type;
          return {
            autoAllocateChunkSize: autoAllocateChunkSize === void 0 ? void 0 : convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),
            cancel: cancel === void 0 ? void 0 : convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),
            pull: pull === void 0 ? void 0 : convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),
            start: start === void 0 ? void 0 : convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),
            type: type === void 0 ? void 0 : convertReadableStreamType(type, `${context} has member 'type' that`)
          };
        }
        function convertUnderlyingSourceCancelCallback(fn, original, context) {
          assertFunction(fn, context);
          return (reason) => promiseCall(fn, original, [reason]);
        }
        function convertUnderlyingSourcePullCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => promiseCall(fn, original, [controller]);
        }
        function convertUnderlyingSourceStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertReadableStreamType(type, context) {
          type = `${type}`;
          if (type !== "bytes") {
            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);
          }
          return type;
        }
        function convertReaderOptions(options2, context) {
          assertDictionary(options2, context);
          const mode = options2 === null || options2 === void 0 ? void 0 : options2.mode;
          return {
            mode: mode === void 0 ? void 0 : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)
          };
        }
        function convertReadableStreamReaderMode(mode, context) {
          mode = `${mode}`;
          if (mode !== "byob") {
            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);
          }
          return mode;
        }
        function convertIteratorOptions(options2, context) {
          assertDictionary(options2, context);
          const preventCancel = options2 === null || options2 === void 0 ? void 0 : options2.preventCancel;
          return { preventCancel: Boolean(preventCancel) };
        }
        function convertPipeOptions(options2, context) {
          assertDictionary(options2, context);
          const preventAbort = options2 === null || options2 === void 0 ? void 0 : options2.preventAbort;
          const preventCancel = options2 === null || options2 === void 0 ? void 0 : options2.preventCancel;
          const preventClose = options2 === null || options2 === void 0 ? void 0 : options2.preventClose;
          const signal = options2 === null || options2 === void 0 ? void 0 : options2.signal;
          if (signal !== void 0) {
            assertAbortSignal(signal, `${context} has member 'signal' that`);
          }
          return {
            preventAbort: Boolean(preventAbort),
            preventCancel: Boolean(preventCancel),
            preventClose: Boolean(preventClose),
            signal
          };
        }
        function assertAbortSignal(signal, context) {
          if (!isAbortSignal2(signal)) {
            throw new TypeError(`${context} is not an AbortSignal.`);
          }
        }
        function convertReadableWritablePair(pair, context) {
          assertDictionary(pair, context);
          const readable = pair === null || pair === void 0 ? void 0 : pair.readable;
          assertRequiredField(readable, "readable", "ReadableWritablePair");
          assertReadableStream(readable, `${context} has member 'readable' that`);
          const writable3 = pair === null || pair === void 0 ? void 0 : pair.writable;
          assertRequiredField(writable3, "writable", "ReadableWritablePair");
          assertWritableStream(writable3, `${context} has member 'writable' that`);
          return { readable, writable: writable3 };
        }
        class ReadableStream2 {
          constructor(rawUnderlyingSource = {}, rawStrategy = {}) {
            if (rawUnderlyingSource === void 0) {
              rawUnderlyingSource = null;
            } else {
              assertObject(rawUnderlyingSource, "First parameter");
            }
            const strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, "First parameter");
            InitializeReadableStream(this);
            if (underlyingSource.type === "bytes") {
              if (strategy.size !== void 0) {
                throw new RangeError("The strategy for a byte stream cannot have a size function");
              }
              const highWaterMark = ExtractHighWaterMark(strategy, 0);
              SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);
            } else {
              const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
              const highWaterMark = ExtractHighWaterMark(strategy, 1);
              SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);
            }
          }
          get locked() {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("locked");
            }
            return IsReadableStreamLocked(this);
          }
          cancel(reason = void 0) {
            if (!IsReadableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$1("cancel"));
            }
            if (IsReadableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot cancel a stream that already has a reader"));
            }
            return ReadableStreamCancel(this, reason);
          }
          getReader(rawOptions = void 0) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("getReader");
            }
            const options2 = convertReaderOptions(rawOptions, "First parameter");
            if (options2.mode === void 0) {
              return AcquireReadableStreamDefaultReader(this);
            }
            return AcquireReadableStreamBYOBReader(this);
          }
          pipeThrough(rawTransform, rawOptions = {}) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("pipeThrough");
            }
            assertRequiredArgument(rawTransform, 1, "pipeThrough");
            const transform = convertReadableWritablePair(rawTransform, "First parameter");
            const options2 = convertPipeOptions(rawOptions, "Second parameter");
            if (IsReadableStreamLocked(this)) {
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");
            }
            if (IsWritableStreamLocked(transform.writable)) {
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");
            }
            const promise = ReadableStreamPipeTo(this, transform.writable, options2.preventClose, options2.preventAbort, options2.preventCancel, options2.signal);
            setPromiseIsHandledToTrue(promise);
            return transform.readable;
          }
          pipeTo(destination, rawOptions = {}) {
            if (!IsReadableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$1("pipeTo"));
            }
            if (destination === void 0) {
              return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);
            }
            if (!IsWritableStream(destination)) {
              return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));
            }
            let options2;
            try {
              options2 = convertPipeOptions(rawOptions, "Second parameter");
            } catch (e3) {
              return promiseRejectedWith(e3);
            }
            if (IsReadableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream"));
            }
            if (IsWritableStreamLocked(destination)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream"));
            }
            return ReadableStreamPipeTo(this, destination, options2.preventClose, options2.preventAbort, options2.preventCancel, options2.signal);
          }
          tee() {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("tee");
            }
            const branches = ReadableStreamTee(this);
            return CreateArrayFromList(branches);
          }
          values(rawOptions = void 0) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("values");
            }
            const options2 = convertIteratorOptions(rawOptions, "First parameter");
            return AcquireReadableStreamAsyncIterator(this, options2.preventCancel);
          }
        }
        Object.defineProperties(ReadableStream2.prototype, {
          cancel: { enumerable: true },
          getReader: { enumerable: true },
          pipeThrough: { enumerable: true },
          pipeTo: { enumerable: true },
          tee: { enumerable: true },
          values: { enumerable: true },
          locked: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStream",
            configurable: true
          });
        }
        if (typeof SymbolPolyfill.asyncIterator === "symbol") {
          Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.asyncIterator, {
            value: ReadableStream2.prototype.values,
            writable: true,
            configurable: true
          });
        }
        function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
          const stream = Object.create(ReadableStream2.prototype);
          InitializeReadableStream(stream);
          const controller = Object.create(ReadableStreamDefaultController.prototype);
          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
          return stream;
        }
        function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {
          const stream = Object.create(ReadableStream2.prototype);
          InitializeReadableStream(stream);
          const controller = Object.create(ReadableByteStreamController.prototype);
          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, void 0);
          return stream;
        }
        function InitializeReadableStream(stream) {
          stream._state = "readable";
          stream._reader = void 0;
          stream._storedError = void 0;
          stream._disturbed = false;
        }
        function IsReadableStream(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_readableStreamController")) {
            return false;
          }
          return x2 instanceof ReadableStream2;
        }
        function IsReadableStreamLocked(stream) {
          if (stream._reader === void 0) {
            return false;
          }
          return true;
        }
        function ReadableStreamCancel(stream, reason) {
          stream._disturbed = true;
          if (stream._state === "closed") {
            return promiseResolvedWith(void 0);
          }
          if (stream._state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          ReadableStreamClose(stream);
          const reader = stream._reader;
          if (reader !== void 0 && IsReadableStreamBYOBReader(reader)) {
            reader._readIntoRequests.forEach((readIntoRequest) => {
              readIntoRequest._closeSteps(void 0);
            });
            reader._readIntoRequests = new SimpleQueue();
          }
          const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);
          return transformPromiseWith(sourceCancelPromise, noop4);
        }
        function ReadableStreamClose(stream) {
          stream._state = "closed";
          const reader = stream._reader;
          if (reader === void 0) {
            return;
          }
          defaultReaderClosedPromiseResolve(reader);
          if (IsReadableStreamDefaultReader(reader)) {
            reader._readRequests.forEach((readRequest) => {
              readRequest._closeSteps();
            });
            reader._readRequests = new SimpleQueue();
          }
        }
        function ReadableStreamError(stream, e3) {
          stream._state = "errored";
          stream._storedError = e3;
          const reader = stream._reader;
          if (reader === void 0) {
            return;
          }
          defaultReaderClosedPromiseReject(reader, e3);
          if (IsReadableStreamDefaultReader(reader)) {
            reader._readRequests.forEach((readRequest) => {
              readRequest._errorSteps(e3);
            });
            reader._readRequests = new SimpleQueue();
          } else {
            reader._readIntoRequests.forEach((readIntoRequest) => {
              readIntoRequest._errorSteps(e3);
            });
            reader._readIntoRequests = new SimpleQueue();
          }
        }
        function streamBrandCheckException$1(name) {
          return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);
        }
        function convertQueuingStrategyInit(init2, context) {
          assertDictionary(init2, context);
          const highWaterMark = init2 === null || init2 === void 0 ? void 0 : init2.highWaterMark;
          assertRequiredField(highWaterMark, "highWaterMark", "QueuingStrategyInit");
          return {
            highWaterMark: convertUnrestrictedDouble(highWaterMark)
          };
        }
        const byteLengthSizeFunction = (chunk) => {
          return chunk.byteLength;
        };
        Object.defineProperty(byteLengthSizeFunction, "name", {
          value: "size",
          configurable: true
        });
        class ByteLengthQueuingStrategy {
          constructor(options2) {
            assertRequiredArgument(options2, 1, "ByteLengthQueuingStrategy");
            options2 = convertQueuingStrategyInit(options2, "First parameter");
            this._byteLengthQueuingStrategyHighWaterMark = options2.highWaterMark;
          }
          get highWaterMark() {
            if (!IsByteLengthQueuingStrategy(this)) {
              throw byteLengthBrandCheckException("highWaterMark");
            }
            return this._byteLengthQueuingStrategyHighWaterMark;
          }
          get size() {
            if (!IsByteLengthQueuingStrategy(this)) {
              throw byteLengthBrandCheckException("size");
            }
            return byteLengthSizeFunction;
          }
        }
        Object.defineProperties(ByteLengthQueuingStrategy.prototype, {
          highWaterMark: { enumerable: true },
          size: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
            value: "ByteLengthQueuingStrategy",
            configurable: true
          });
        }
        function byteLengthBrandCheckException(name) {
          return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);
        }
        function IsByteLengthQueuingStrategy(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_byteLengthQueuingStrategyHighWaterMark")) {
            return false;
          }
          return x2 instanceof ByteLengthQueuingStrategy;
        }
        const countSizeFunction = () => {
          return 1;
        };
        Object.defineProperty(countSizeFunction, "name", {
          value: "size",
          configurable: true
        });
        class CountQueuingStrategy {
          constructor(options2) {
            assertRequiredArgument(options2, 1, "CountQueuingStrategy");
            options2 = convertQueuingStrategyInit(options2, "First parameter");
            this._countQueuingStrategyHighWaterMark = options2.highWaterMark;
          }
          get highWaterMark() {
            if (!IsCountQueuingStrategy(this)) {
              throw countBrandCheckException("highWaterMark");
            }
            return this._countQueuingStrategyHighWaterMark;
          }
          get size() {
            if (!IsCountQueuingStrategy(this)) {
              throw countBrandCheckException("size");
            }
            return countSizeFunction;
          }
        }
        Object.defineProperties(CountQueuingStrategy.prototype, {
          highWaterMark: { enumerable: true },
          size: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
            value: "CountQueuingStrategy",
            configurable: true
          });
        }
        function countBrandCheckException(name) {
          return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);
        }
        function IsCountQueuingStrategy(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_countQueuingStrategyHighWaterMark")) {
            return false;
          }
          return x2 instanceof CountQueuingStrategy;
        }
        function convertTransformer(original, context) {
          assertDictionary(original, context);
          const flush = original === null || original === void 0 ? void 0 : original.flush;
          const readableType = original === null || original === void 0 ? void 0 : original.readableType;
          const start = original === null || original === void 0 ? void 0 : original.start;
          const transform = original === null || original === void 0 ? void 0 : original.transform;
          const writableType = original === null || original === void 0 ? void 0 : original.writableType;
          return {
            flush: flush === void 0 ? void 0 : convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),
            readableType,
            start: start === void 0 ? void 0 : convertTransformerStartCallback(start, original, `${context} has member 'start' that`),
            transform: transform === void 0 ? void 0 : convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),
            writableType
          };
        }
        function convertTransformerFlushCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => promiseCall(fn, original, [controller]);
        }
        function convertTransformerStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertTransformerTransformCallback(fn, original, context) {
          assertFunction(fn, context);
          return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
        }
        class TransformStream {
          constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {
            if (rawTransformer === void 0) {
              rawTransformer = null;
            }
            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, "Second parameter");
            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, "Third parameter");
            const transformer = convertTransformer(rawTransformer, "First parameter");
            if (transformer.readableType !== void 0) {
              throw new RangeError("Invalid readableType specified");
            }
            if (transformer.writableType !== void 0) {
              throw new RangeError("Invalid writableType specified");
            }
            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);
            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);
            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);
            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);
            let startPromise_resolve;
            const startPromise = newPromise((resolve2) => {
              startPromise_resolve = resolve2;
            });
            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);
            if (transformer.start !== void 0) {
              startPromise_resolve(transformer.start(this._transformStreamController));
            } else {
              startPromise_resolve(void 0);
            }
          }
          get readable() {
            if (!IsTransformStream(this)) {
              throw streamBrandCheckException("readable");
            }
            return this._readable;
          }
          get writable() {
            if (!IsTransformStream(this)) {
              throw streamBrandCheckException("writable");
            }
            return this._writable;
          }
        }
        Object.defineProperties(TransformStream.prototype, {
          readable: { enumerable: true },
          writable: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {
            value: "TransformStream",
            configurable: true
          });
        }
        function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {
          function startAlgorithm() {
            return startPromise;
          }
          function writeAlgorithm(chunk) {
            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);
          }
          function abortAlgorithm(reason) {
            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);
          }
          function closeAlgorithm() {
            return TransformStreamDefaultSinkCloseAlgorithm(stream);
          }
          stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);
          function pullAlgorithm() {
            return TransformStreamDefaultSourcePullAlgorithm(stream);
          }
          function cancelAlgorithm(reason) {
            TransformStreamErrorWritableAndUnblockWrite(stream, reason);
            return promiseResolvedWith(void 0);
          }
          stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
          stream._backpressure = void 0;
          stream._backpressureChangePromise = void 0;
          stream._backpressureChangePromise_resolve = void 0;
          TransformStreamSetBackpressure(stream, true);
          stream._transformStreamController = void 0;
        }
        function IsTransformStream(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_transformStreamController")) {
            return false;
          }
          return x2 instanceof TransformStream;
        }
        function TransformStreamError(stream, e3) {
          ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e3);
          TransformStreamErrorWritableAndUnblockWrite(stream, e3);
        }
        function TransformStreamErrorWritableAndUnblockWrite(stream, e3) {
          TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);
          WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e3);
          if (stream._backpressure) {
            TransformStreamSetBackpressure(stream, false);
          }
        }
        function TransformStreamSetBackpressure(stream, backpressure) {
          if (stream._backpressureChangePromise !== void 0) {
            stream._backpressureChangePromise_resolve();
          }
          stream._backpressureChangePromise = newPromise((resolve2) => {
            stream._backpressureChangePromise_resolve = resolve2;
          });
          stream._backpressure = backpressure;
        }
        class TransformStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get desiredSize() {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("desiredSize");
            }
            const readableController = this._controlledTransformStream._readable._readableStreamController;
            return ReadableStreamDefaultControllerGetDesiredSize(readableController);
          }
          enqueue(chunk = void 0) {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("enqueue");
            }
            TransformStreamDefaultControllerEnqueue(this, chunk);
          }
          error(reason = void 0) {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("error");
            }
            TransformStreamDefaultControllerError(this, reason);
          }
          terminate() {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("terminate");
            }
            TransformStreamDefaultControllerTerminate(this);
          }
        }
        Object.defineProperties(TransformStreamDefaultController.prototype, {
          enqueue: { enumerable: true },
          error: { enumerable: true },
          terminate: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "TransformStreamDefaultController",
            configurable: true
          });
        }
        function IsTransformStreamDefaultController(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_controlledTransformStream")) {
            return false;
          }
          return x2 instanceof TransformStreamDefaultController;
        }
        function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {
          controller._controlledTransformStream = stream;
          stream._transformStreamController = controller;
          controller._transformAlgorithm = transformAlgorithm;
          controller._flushAlgorithm = flushAlgorithm;
        }
        function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {
          const controller = Object.create(TransformStreamDefaultController.prototype);
          let transformAlgorithm = (chunk) => {
            try {
              TransformStreamDefaultControllerEnqueue(controller, chunk);
              return promiseResolvedWith(void 0);
            } catch (transformResultE) {
              return promiseRejectedWith(transformResultE);
            }
          };
          let flushAlgorithm = () => promiseResolvedWith(void 0);
          if (transformer.transform !== void 0) {
            transformAlgorithm = (chunk) => transformer.transform(chunk, controller);
          }
          if (transformer.flush !== void 0) {
            flushAlgorithm = () => transformer.flush(controller);
          }
          SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);
        }
        function TransformStreamDefaultControllerClearAlgorithms(controller) {
          controller._transformAlgorithm = void 0;
          controller._flushAlgorithm = void 0;
        }
        function TransformStreamDefaultControllerEnqueue(controller, chunk) {
          const stream = controller._controlledTransformStream;
          const readableController = stream._readable._readableStreamController;
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {
            throw new TypeError("Readable side is not in a state that permits enqueue");
          }
          try {
            ReadableStreamDefaultControllerEnqueue(readableController, chunk);
          } catch (e3) {
            TransformStreamErrorWritableAndUnblockWrite(stream, e3);
            throw stream._readable._storedError;
          }
          const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);
          if (backpressure !== stream._backpressure) {
            TransformStreamSetBackpressure(stream, true);
          }
        }
        function TransformStreamDefaultControllerError(controller, e3) {
          TransformStreamError(controller._controlledTransformStream, e3);
        }
        function TransformStreamDefaultControllerPerformTransform(controller, chunk) {
          const transformPromise = controller._transformAlgorithm(chunk);
          return transformPromiseWith(transformPromise, void 0, (r2) => {
            TransformStreamError(controller._controlledTransformStream, r2);
            throw r2;
          });
        }
        function TransformStreamDefaultControllerTerminate(controller) {
          const stream = controller._controlledTransformStream;
          const readableController = stream._readable._readableStreamController;
          ReadableStreamDefaultControllerClose(readableController);
          const error2 = new TypeError("TransformStream terminated");
          TransformStreamErrorWritableAndUnblockWrite(stream, error2);
        }
        function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {
          const controller = stream._transformStreamController;
          if (stream._backpressure) {
            const backpressureChangePromise = stream._backpressureChangePromise;
            return transformPromiseWith(backpressureChangePromise, () => {
              const writable3 = stream._writable;
              const state = writable3._state;
              if (state === "erroring") {
                throw writable3._storedError;
              }
              return TransformStreamDefaultControllerPerformTransform(controller, chunk);
            });
          }
          return TransformStreamDefaultControllerPerformTransform(controller, chunk);
        }
        function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {
          TransformStreamError(stream, reason);
          return promiseResolvedWith(void 0);
        }
        function TransformStreamDefaultSinkCloseAlgorithm(stream) {
          const readable = stream._readable;
          const controller = stream._transformStreamController;
          const flushPromise = controller._flushAlgorithm();
          TransformStreamDefaultControllerClearAlgorithms(controller);
          return transformPromiseWith(flushPromise, () => {
            if (readable._state === "errored") {
              throw readable._storedError;
            }
            ReadableStreamDefaultControllerClose(readable._readableStreamController);
          }, (r2) => {
            TransformStreamError(stream, r2);
            throw readable._storedError;
          });
        }
        function TransformStreamDefaultSourcePullAlgorithm(stream) {
          TransformStreamSetBackpressure(stream, false);
          return stream._backpressureChangePromise;
        }
        function defaultControllerBrandCheckException(name) {
          return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);
        }
        function streamBrandCheckException(name) {
          return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);
        }
        exports3.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;
        exports3.CountQueuingStrategy = CountQueuingStrategy;
        exports3.ReadableByteStreamController = ReadableByteStreamController;
        exports3.ReadableStream = ReadableStream2;
        exports3.ReadableStreamBYOBReader = ReadableStreamBYOBReader;
        exports3.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;
        exports3.ReadableStreamDefaultController = ReadableStreamDefaultController;
        exports3.ReadableStreamDefaultReader = ReadableStreamDefaultReader;
        exports3.TransformStream = TransformStream;
        exports3.TransformStreamDefaultController = TransformStreamDefaultController;
        exports3.WritableStream = WritableStream;
        exports3.WritableStreamDefaultController = WritableStreamDefaultController;
        exports3.WritableStreamDefaultWriter = WritableStreamDefaultWriter;
        Object.defineProperty(exports3, "__esModule", { value: true });
      });
    })(ponyfill_es2018, ponyfill_es2018.exports);
    POOL_SIZE$1 = 65536;
    if (!globalThis.ReadableStream) {
      try {
        const process2 = require("node:process");
        const { emitWarning } = process2;
        try {
          process2.emitWarning = () => {
          };
          Object.assign(globalThis, require("node:stream/web"));
          process2.emitWarning = emitWarning;
        } catch (error2) {
          process2.emitWarning = emitWarning;
          throw error2;
        }
      } catch (error2) {
        Object.assign(globalThis, ponyfill_es2018.exports);
      }
    }
    try {
      const { Blob: Blob3 } = require("buffer");
      if (Blob3 && !Blob3.prototype.stream) {
        Blob3.prototype.stream = function name(params) {
          let position = 0;
          const blob = this;
          return new ReadableStream({
            type: "bytes",
            async pull(ctrl) {
              const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE$1));
              const buffer = await chunk.arrayBuffer();
              position += buffer.byteLength;
              ctrl.enqueue(new Uint8Array(buffer));
              if (position === blob.size) {
                ctrl.close();
              }
            }
          });
        };
      }
    } catch (error2) {
    }
    POOL_SIZE = 65536;
    _Blob = class Blob {
      #parts = [];
      #type = "";
      #size = 0;
      constructor(blobParts = [], options2 = {}) {
        if (typeof blobParts !== "object" || blobParts === null) {
          throw new TypeError("Failed to construct 'Blob': The provided value cannot be converted to a sequence.");
        }
        if (typeof blobParts[Symbol.iterator] !== "function") {
          throw new TypeError("Failed to construct 'Blob': The object must have a callable @@iterator property.");
        }
        if (typeof options2 !== "object" && typeof options2 !== "function") {
          throw new TypeError("Failed to construct 'Blob': parameter 2 cannot convert to dictionary.");
        }
        if (options2 === null)
          options2 = {};
        const encoder = new TextEncoder();
        for (const element of blobParts) {
          let part;
          if (ArrayBuffer.isView(element)) {
            part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength));
          } else if (element instanceof ArrayBuffer) {
            part = new Uint8Array(element.slice(0));
          } else if (element instanceof Blob) {
            part = element;
          } else {
            part = encoder.encode(element);
          }
          this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size;
          this.#parts.push(part);
        }
        const type = options2.type === void 0 ? "" : String(options2.type);
        this.#type = /^[\x20-\x7E]*$/.test(type) ? type : "";
      }
      get size() {
        return this.#size;
      }
      get type() {
        return this.#type;
      }
      async text() {
        const decoder = new TextDecoder();
        let str = "";
        for await (const part of toIterator(this.#parts, false)) {
          str += decoder.decode(part, { stream: true });
        }
        str += decoder.decode();
        return str;
      }
      async arrayBuffer() {
        const data = new Uint8Array(this.size);
        let offset = 0;
        for await (const chunk of toIterator(this.#parts, false)) {
          data.set(chunk, offset);
          offset += chunk.length;
        }
        return data.buffer;
      }
      stream() {
        const it = toIterator(this.#parts, true);
        return new globalThis.ReadableStream({
          type: "bytes",
          async pull(ctrl) {
            const chunk = await it.next();
            chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);
          },
          async cancel() {
            await it.return();
          }
        });
      }
      slice(start = 0, end = this.size, type = "") {
        const { size } = this;
        let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);
        let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);
        const span = Math.max(relativeEnd - relativeStart, 0);
        const parts = this.#parts;
        const blobParts = [];
        let added = 0;
        for (const part of parts) {
          if (added >= span) {
            break;
          }
          const size2 = ArrayBuffer.isView(part) ? part.byteLength : part.size;
          if (relativeStart && size2 <= relativeStart) {
            relativeStart -= size2;
            relativeEnd -= size2;
          } else {
            let chunk;
            if (ArrayBuffer.isView(part)) {
              chunk = part.subarray(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.byteLength;
            } else {
              chunk = part.slice(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.size;
            }
            relativeEnd -= size2;
            blobParts.push(chunk);
            relativeStart = 0;
          }
        }
        const blob = new Blob([], { type: String(type).toLowerCase() });
        blob.#size = span;
        blob.#parts = blobParts;
        return blob;
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
      static [Symbol.hasInstance](object) {
        return object && typeof object === "object" && typeof object.constructor === "function" && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && /^(Blob|File)$/.test(object[Symbol.toStringTag]);
      }
    };
    Object.defineProperties(_Blob.prototype, {
      size: { enumerable: true },
      type: { enumerable: true },
      slice: { enumerable: true }
    });
    Blob2 = _Blob;
    Blob$1 = Blob2;
    _File = class File2 extends Blob$1 {
      #lastModified = 0;
      #name = "";
      constructor(fileBits, fileName, options2 = {}) {
        if (arguments.length < 2) {
          throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);
        }
        super(fileBits, options2);
        if (options2 === null)
          options2 = {};
        const lastModified = options2.lastModified === void 0 ? Date.now() : Number(options2.lastModified);
        if (!Number.isNaN(lastModified)) {
          this.#lastModified = lastModified;
        }
        this.#name = String(fileName);
      }
      get name() {
        return this.#name;
      }
      get lastModified() {
        return this.#lastModified;
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
    };
    File = _File;
    ({ toStringTag: t, iterator: i, hasInstance: h } = Symbol);
    r = Math.random;
    m = "append,set,get,getAll,delete,keys,values,entries,forEach,constructor".split(",");
    f3 = (a2, b2, c2) => (a2 += "", /^(Blob|File)$/.test(b2 && b2[t]) ? [(c2 = c2 !== void 0 ? c2 + "" : b2[t] == "File" ? b2.name : "blob", a2), b2.name !== c2 || b2[t] == "blob" ? new File([b2], c2, b2) : b2] : [a2, b2 + ""]);
    e2 = (c2, f4) => (f4 ? c2 : c2.replace(/\r?\n|\r/g, "\r\n")).replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/"/g, "%22");
    x = (n, a2, e3) => {
      if (a2.length < e3) {
        throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e3} arguments required, but only ${a2.length} present.`);
      }
    };
    FormData = class FormData2 {
      #d = [];
      constructor(...a2) {
        if (a2.length)
          throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`);
      }
      get [t]() {
        return "FormData";
      }
      [i]() {
        return this.entries();
      }
      static [h](o) {
        return o && typeof o === "object" && o[t] === "FormData" && !m.some((m2) => typeof o[m2] != "function");
      }
      append(...a2) {
        x("append", arguments, 2);
        this.#d.push(f3(...a2));
      }
      delete(a2) {
        x("delete", arguments, 1);
        a2 += "";
        this.#d = this.#d.filter(([b2]) => b2 !== a2);
      }
      get(a2) {
        x("get", arguments, 1);
        a2 += "";
        for (var b2 = this.#d, l = b2.length, c2 = 0; c2 < l; c2++)
          if (b2[c2][0] === a2)
            return b2[c2][1];
        return null;
      }
      getAll(a2, b2) {
        x("getAll", arguments, 1);
        b2 = [];
        a2 += "";
        this.#d.forEach((c2) => c2[0] === a2 && b2.push(c2[1]));
        return b2;
      }
      has(a2) {
        x("has", arguments, 1);
        a2 += "";
        return this.#d.some((b2) => b2[0] === a2);
      }
      forEach(a2, b2) {
        x("forEach", arguments, 1);
        for (var [c2, d3] of this)
          a2.call(b2, d3, c2, this);
      }
      set(...a2) {
        x("set", arguments, 2);
        var b2 = [], c2 = true;
        a2 = f3(...a2);
        this.#d.forEach((d3) => {
          d3[0] === a2[0] ? c2 && (c2 = !b2.push(a2)) : b2.push(d3);
        });
        c2 && b2.push(a2);
        this.#d = b2;
      }
      *entries() {
        yield* this.#d;
      }
      *keys() {
        for (var [a2] of this)
          yield a2;
      }
      *values() {
        for (var [, a2] of this)
          yield a2;
      }
    };
    FetchBaseError = class extends Error {
      constructor(message, type) {
        super(message);
        Error.captureStackTrace(this, this.constructor);
        this.type = type;
      }
      get name() {
        return this.constructor.name;
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
    };
    FetchError = class extends FetchBaseError {
      constructor(message, type, systemError) {
        super(message, type);
        if (systemError) {
          this.code = this.errno = systemError.code;
          this.erroredSysCall = systemError.syscall;
        }
      }
    };
    NAME = Symbol.toStringTag;
    isURLSearchParameters = (object) => {
      return typeof object === "object" && typeof object.append === "function" && typeof object.delete === "function" && typeof object.get === "function" && typeof object.getAll === "function" && typeof object.has === "function" && typeof object.set === "function" && typeof object.sort === "function" && object[NAME] === "URLSearchParams";
    };
    isBlob = (object) => {
      return object && typeof object === "object" && typeof object.arrayBuffer === "function" && typeof object.type === "string" && typeof object.stream === "function" && typeof object.constructor === "function" && /^(Blob|File)$/.test(object[NAME]);
    };
    isAbortSignal = (object) => {
      return typeof object === "object" && (object[NAME] === "AbortSignal" || object[NAME] === "EventTarget");
    };
    INTERNALS$2 = Symbol("Body internals");
    Body = class {
      constructor(body, {
        size = 0
      } = {}) {
        let boundary = null;
        if (body === null) {
          body = null;
        } else if (isURLSearchParameters(body)) {
          body = Buffer.from(body.toString());
        } else if (isBlob(body))
          ;
        else if (Buffer.isBuffer(body))
          ;
        else if (import_node_util2.types.isAnyArrayBuffer(body)) {
          body = Buffer.from(body);
        } else if (ArrayBuffer.isView(body)) {
          body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
        } else if (body instanceof import_node_stream2.default)
          ;
        else if (body instanceof FormData) {
          body = formDataToBlob(body);
          boundary = body.type.split("=")[1];
        } else {
          body = Buffer.from(String(body));
        }
        let stream = body;
        if (Buffer.isBuffer(body)) {
          stream = import_node_stream2.default.Readable.from(body);
        } else if (isBlob(body)) {
          stream = import_node_stream2.default.Readable.from(body.stream());
        }
        this[INTERNALS$2] = {
          body,
          stream,
          boundary,
          disturbed: false,
          error: null
        };
        this.size = size;
        if (body instanceof import_node_stream2.default) {
          body.on("error", (error_) => {
            const error2 = error_ instanceof FetchBaseError ? error_ : new FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, "system", error_);
            this[INTERNALS$2].error = error2;
          });
        }
      }
      get body() {
        return this[INTERNALS$2].stream;
      }
      get bodyUsed() {
        return this[INTERNALS$2].disturbed;
      }
      async arrayBuffer() {
        const { buffer, byteOffset, byteLength } = await consumeBody(this);
        return buffer.slice(byteOffset, byteOffset + byteLength);
      }
      async formData() {
        const ct = this.headers.get("content-type");
        if (ct.startsWith("application/x-www-form-urlencoded")) {
          const formData = new FormData();
          const parameters = new URLSearchParams(await this.text());
          for (const [name, value] of parameters) {
            formData.append(name, value);
          }
          return formData;
        }
        const { toFormData: toFormData2 } = await Promise.resolve().then(() => (init_multipart_parser(), multipart_parser_exports));
        return toFormData2(this.body, ct);
      }
      async blob() {
        const ct = this.headers && this.headers.get("content-type") || this[INTERNALS$2].body && this[INTERNALS$2].body.type || "";
        const buf = await this.buffer();
        return new Blob$1([buf], {
          type: ct
        });
      }
      async json() {
        const buffer = await consumeBody(this);
        return JSON.parse(buffer.toString());
      }
      async text() {
        const buffer = await consumeBody(this);
        return buffer.toString();
      }
      buffer() {
        return consumeBody(this);
      }
    };
    Body.prototype.buffer = (0, import_node_util2.deprecate)(Body.prototype.buffer, "Please use 'response.arrayBuffer()' instead of 'response.buffer()'", "node-fetch#buffer");
    Object.defineProperties(Body.prototype, {
      body: { enumerable: true },
      bodyUsed: { enumerable: true },
      arrayBuffer: { enumerable: true },
      blob: { enumerable: true },
      json: { enumerable: true },
      text: { enumerable: true }
    });
    clone = (instance, highWaterMark) => {
      let p1;
      let p2;
      let { body } = instance[INTERNALS$2];
      if (instance.bodyUsed) {
        throw new Error("cannot clone body after it is used");
      }
      if (body instanceof import_node_stream2.default && typeof body.getBoundary !== "function") {
        p1 = new import_node_stream2.PassThrough({ highWaterMark });
        p2 = new import_node_stream2.PassThrough({ highWaterMark });
        body.pipe(p1);
        body.pipe(p2);
        instance[INTERNALS$2].stream = p1;
        body = p2;
      }
      return body;
    };
    getNonSpecFormDataBoundary = (0, import_node_util2.deprecate)((body) => body.getBoundary(), "form-data doesn't follow the spec and requires special treatment. Use alternative package", "https://github.com/node-fetch/node-fetch/issues/1167");
    extractContentType = (body, request) => {
      if (body === null) {
        return null;
      }
      if (typeof body === "string") {
        return "text/plain;charset=UTF-8";
      }
      if (isURLSearchParameters(body)) {
        return "application/x-www-form-urlencoded;charset=UTF-8";
      }
      if (isBlob(body)) {
        return body.type || null;
      }
      if (Buffer.isBuffer(body) || import_node_util2.types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {
        return null;
      }
      if (body instanceof FormData) {
        return `multipart/form-data; boundary=${request[INTERNALS$2].boundary}`;
      }
      if (body && typeof body.getBoundary === "function") {
        return `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;
      }
      if (body instanceof import_node_stream2.default) {
        return null;
      }
      return "text/plain;charset=UTF-8";
    };
    getTotalBytes = (request) => {
      const { body } = request[INTERNALS$2];
      if (body === null) {
        return 0;
      }
      if (isBlob(body)) {
        return body.size;
      }
      if (Buffer.isBuffer(body)) {
        return body.length;
      }
      if (body && typeof body.getLengthSync === "function") {
        return body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;
      }
      return null;
    };
    writeToStream = (dest, { body }) => {
      if (body === null) {
        dest.end();
      } else {
        body.pipe(dest);
      }
    };
    validateHeaderName = typeof import_node_http2.default.validateHeaderName === "function" ? import_node_http2.default.validateHeaderName : (name) => {
      if (!/^[\^`\-\w!#$%&'*+.|~]+$/.test(name)) {
        const error2 = new TypeError(`Header name must be a valid HTTP token [${name}]`);
        Object.defineProperty(error2, "code", { value: "ERR_INVALID_HTTP_TOKEN" });
        throw error2;
      }
    };
    validateHeaderValue = typeof import_node_http2.default.validateHeaderValue === "function" ? import_node_http2.default.validateHeaderValue : (name, value) => {
      if (/[^\t\u0020-\u007E\u0080-\u00FF]/.test(value)) {
        const error2 = new TypeError(`Invalid character in header content ["${name}"]`);
        Object.defineProperty(error2, "code", { value: "ERR_INVALID_CHAR" });
        throw error2;
      }
    };
    Headers = class extends URLSearchParams {
      constructor(init2) {
        let result = [];
        if (init2 instanceof Headers) {
          const raw = init2.raw();
          for (const [name, values] of Object.entries(raw)) {
            result.push(...values.map((value) => [name, value]));
          }
        } else if (init2 == null)
          ;
        else if (typeof init2 === "object" && !import_node_util2.types.isBoxedPrimitive(init2)) {
          const method = init2[Symbol.iterator];
          if (method == null) {
            result.push(...Object.entries(init2));
          } else {
            if (typeof method !== "function") {
              throw new TypeError("Header pairs must be iterable");
            }
            result = [...init2].map((pair) => {
              if (typeof pair !== "object" || import_node_util2.types.isBoxedPrimitive(pair)) {
                throw new TypeError("Each header pair must be an iterable object");
              }
              return [...pair];
            }).map((pair) => {
              if (pair.length !== 2) {
                throw new TypeError("Each header pair must be a name/value tuple");
              }
              return [...pair];
            });
          }
        } else {
          throw new TypeError("Failed to construct 'Headers': The provided value is not of type '(sequence<sequence<ByteString>> or record<ByteString, ByteString>)");
        }
        result = result.length > 0 ? result.map(([name, value]) => {
          validateHeaderName(name);
          validateHeaderValue(name, String(value));
          return [String(name).toLowerCase(), String(value)];
        }) : void 0;
        super(result);
        return new Proxy(this, {
          get(target, p, receiver) {
            switch (p) {
              case "append":
              case "set":
                return (name, value) => {
                  validateHeaderName(name);
                  validateHeaderValue(name, String(value));
                  return URLSearchParams.prototype[p].call(target, String(name).toLowerCase(), String(value));
                };
              case "delete":
              case "has":
              case "getAll":
                return (name) => {
                  validateHeaderName(name);
                  return URLSearchParams.prototype[p].call(target, String(name).toLowerCase());
                };
              case "keys":
                return () => {
                  target.sort();
                  return new Set(URLSearchParams.prototype.keys.call(target)).keys();
                };
              default:
                return Reflect.get(target, p, receiver);
            }
          }
        });
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
      toString() {
        return Object.prototype.toString.call(this);
      }
      get(name) {
        const values = this.getAll(name);
        if (values.length === 0) {
          return null;
        }
        let value = values.join(", ");
        if (/^content-encoding$/i.test(name)) {
          value = value.toLowerCase();
        }
        return value;
      }
      forEach(callback, thisArg = void 0) {
        for (const name of this.keys()) {
          Reflect.apply(callback, thisArg, [this.get(name), name, this]);
        }
      }
      *values() {
        for (const name of this.keys()) {
          yield this.get(name);
        }
      }
      *entries() {
        for (const name of this.keys()) {
          yield [name, this.get(name)];
        }
      }
      [Symbol.iterator]() {
        return this.entries();
      }
      raw() {
        return [...this.keys()].reduce((result, key) => {
          result[key] = this.getAll(key);
          return result;
        }, {});
      }
      [Symbol.for("nodejs.util.inspect.custom")]() {
        return [...this.keys()].reduce((result, key) => {
          const values = this.getAll(key);
          if (key === "host") {
            result[key] = values[0];
          } else {
            result[key] = values.length > 1 ? values : values[0];
          }
          return result;
        }, {});
      }
    };
    Object.defineProperties(Headers.prototype, ["get", "entries", "forEach", "values"].reduce((result, property) => {
      result[property] = { enumerable: true };
      return result;
    }, {}));
    redirectStatus = new Set([301, 302, 303, 307, 308]);
    isRedirect = (code) => {
      return redirectStatus.has(code);
    };
    INTERNALS$1 = Symbol("Response internals");
    Response = class extends Body {
      constructor(body = null, options2 = {}) {
        super(body, options2);
        const status = options2.status != null ? options2.status : 200;
        const headers = new Headers(options2.headers);
        if (body !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(body, this);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        this[INTERNALS$1] = {
          type: "default",
          url: options2.url,
          status,
          statusText: options2.statusText || "",
          headers,
          counter: options2.counter,
          highWaterMark: options2.highWaterMark
        };
      }
      get type() {
        return this[INTERNALS$1].type;
      }
      get url() {
        return this[INTERNALS$1].url || "";
      }
      get status() {
        return this[INTERNALS$1].status;
      }
      get ok() {
        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
      }
      get redirected() {
        return this[INTERNALS$1].counter > 0;
      }
      get statusText() {
        return this[INTERNALS$1].statusText;
      }
      get headers() {
        return this[INTERNALS$1].headers;
      }
      get highWaterMark() {
        return this[INTERNALS$1].highWaterMark;
      }
      clone() {
        return new Response(clone(this, this.highWaterMark), {
          type: this.type,
          url: this.url,
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          ok: this.ok,
          redirected: this.redirected,
          size: this.size,
          highWaterMark: this.highWaterMark
        });
      }
      static redirect(url, status = 302) {
        if (!isRedirect(status)) {
          throw new RangeError('Failed to execute "redirect" on "response": Invalid status code');
        }
        return new Response(null, {
          headers: {
            location: new URL(url).toString()
          },
          status
        });
      }
      static error() {
        const response = new Response(null, { status: 0, statusText: "" });
        response[INTERNALS$1].type = "error";
        return response;
      }
      get [Symbol.toStringTag]() {
        return "Response";
      }
    };
    Object.defineProperties(Response.prototype, {
      type: { enumerable: true },
      url: { enumerable: true },
      status: { enumerable: true },
      ok: { enumerable: true },
      redirected: { enumerable: true },
      statusText: { enumerable: true },
      headers: { enumerable: true },
      clone: { enumerable: true }
    });
    getSearch = (parsedURL) => {
      if (parsedURL.search) {
        return parsedURL.search;
      }
      const lastOffset = parsedURL.href.length - 1;
      const hash2 = parsedURL.hash || (parsedURL.href[lastOffset] === "#" ? "#" : "");
      return parsedURL.href[lastOffset - hash2.length] === "?" ? "?" : "";
    };
    ReferrerPolicy = new Set([
      "",
      "no-referrer",
      "no-referrer-when-downgrade",
      "same-origin",
      "origin",
      "strict-origin",
      "origin-when-cross-origin",
      "strict-origin-when-cross-origin",
      "unsafe-url"
    ]);
    DEFAULT_REFERRER_POLICY = "strict-origin-when-cross-origin";
    INTERNALS = Symbol("Request internals");
    isRequest = (object) => {
      return typeof object === "object" && typeof object[INTERNALS] === "object";
    };
    Request = class extends Body {
      constructor(input, init2 = {}) {
        let parsedURL;
        if (isRequest(input)) {
          parsedURL = new URL(input.url);
        } else {
          parsedURL = new URL(input);
          input = {};
        }
        if (parsedURL.username !== "" || parsedURL.password !== "") {
          throw new TypeError(`${parsedURL} is an url with embedded credentails.`);
        }
        let method = init2.method || input.method || "GET";
        method = method.toUpperCase();
        if ((init2.body != null || isRequest(input)) && input.body !== null && (method === "GET" || method === "HEAD")) {
          throw new TypeError("Request with GET/HEAD method cannot have body");
        }
        const inputBody = init2.body ? init2.body : isRequest(input) && input.body !== null ? clone(input) : null;
        super(inputBody, {
          size: init2.size || input.size || 0
        });
        const headers = new Headers(init2.headers || input.headers || {});
        if (inputBody !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(inputBody, this);
          if (contentType) {
            headers.set("Content-Type", contentType);
          }
        }
        let signal = isRequest(input) ? input.signal : null;
        if ("signal" in init2) {
          signal = init2.signal;
        }
        if (signal != null && !isAbortSignal(signal)) {
          throw new TypeError("Expected signal to be an instanceof AbortSignal or EventTarget");
        }
        let referrer = init2.referrer == null ? input.referrer : init2.referrer;
        if (referrer === "") {
          referrer = "no-referrer";
        } else if (referrer) {
          const parsedReferrer = new URL(referrer);
          referrer = /^about:(\/\/)?client$/.test(parsedReferrer) ? "client" : parsedReferrer;
        } else {
          referrer = void 0;
        }
        this[INTERNALS] = {
          method,
          redirect: init2.redirect || input.redirect || "follow",
          headers,
          parsedURL,
          signal,
          referrer
        };
        this.follow = init2.follow === void 0 ? input.follow === void 0 ? 20 : input.follow : init2.follow;
        this.compress = init2.compress === void 0 ? input.compress === void 0 ? true : input.compress : init2.compress;
        this.counter = init2.counter || input.counter || 0;
        this.agent = init2.agent || input.agent;
        this.highWaterMark = init2.highWaterMark || input.highWaterMark || 16384;
        this.insecureHTTPParser = init2.insecureHTTPParser || input.insecureHTTPParser || false;
        this.referrerPolicy = init2.referrerPolicy || input.referrerPolicy || "";
      }
      get method() {
        return this[INTERNALS].method;
      }
      get url() {
        return (0, import_node_url2.format)(this[INTERNALS].parsedURL);
      }
      get headers() {
        return this[INTERNALS].headers;
      }
      get redirect() {
        return this[INTERNALS].redirect;
      }
      get signal() {
        return this[INTERNALS].signal;
      }
      get referrer() {
        if (this[INTERNALS].referrer === "no-referrer") {
          return "";
        }
        if (this[INTERNALS].referrer === "client") {
          return "about:client";
        }
        if (this[INTERNALS].referrer) {
          return this[INTERNALS].referrer.toString();
        }
        return void 0;
      }
      get referrerPolicy() {
        return this[INTERNALS].referrerPolicy;
      }
      set referrerPolicy(referrerPolicy) {
        this[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);
      }
      clone() {
        return new Request(this);
      }
      get [Symbol.toStringTag]() {
        return "Request";
      }
    };
    Object.defineProperties(Request.prototype, {
      method: { enumerable: true },
      url: { enumerable: true },
      headers: { enumerable: true },
      redirect: { enumerable: true },
      clone: { enumerable: true },
      signal: { enumerable: true },
      referrer: { enumerable: true },
      referrerPolicy: { enumerable: true }
    });
    getNodeRequestOptions = (request) => {
      const { parsedURL } = request[INTERNALS];
      const headers = new Headers(request[INTERNALS].headers);
      if (!headers.has("Accept")) {
        headers.set("Accept", "*/*");
      }
      let contentLengthValue = null;
      if (request.body === null && /^(post|put)$/i.test(request.method)) {
        contentLengthValue = "0";
      }
      if (request.body !== null) {
        const totalBytes = getTotalBytes(request);
        if (typeof totalBytes === "number" && !Number.isNaN(totalBytes)) {
          contentLengthValue = String(totalBytes);
        }
      }
      if (contentLengthValue) {
        headers.set("Content-Length", contentLengthValue);
      }
      if (request.referrerPolicy === "") {
        request.referrerPolicy = DEFAULT_REFERRER_POLICY;
      }
      if (request.referrer && request.referrer !== "no-referrer") {
        request[INTERNALS].referrer = determineRequestsReferrer(request);
      } else {
        request[INTERNALS].referrer = "no-referrer";
      }
      if (request[INTERNALS].referrer instanceof URL) {
        headers.set("Referer", request.referrer);
      }
      if (!headers.has("User-Agent")) {
        headers.set("User-Agent", "node-fetch");
      }
      if (request.compress && !headers.has("Accept-Encoding")) {
        headers.set("Accept-Encoding", "gzip,deflate,br");
      }
      let { agent } = request;
      if (typeof agent === "function") {
        agent = agent(parsedURL);
      }
      if (!headers.has("Connection") && !agent) {
        headers.set("Connection", "close");
      }
      const search = getSearch(parsedURL);
      const options2 = {
        path: parsedURL.pathname + search,
        method: request.method,
        headers: headers[Symbol.for("nodejs.util.inspect.custom")](),
        insecureHTTPParser: request.insecureHTTPParser,
        agent
      };
      return {
        parsedURL,
        options: options2
      };
    };
    AbortError = class extends FetchBaseError {
      constructor(message, type = "aborted") {
        super(message, type);
      }
    };
    supportedSchemas = new Set(["data:", "http:", "https:"]);
  }
});

// node_modules/@sveltejs/adapter-vercel/files/shims.js
var init_shims = __esm({
  "node_modules/@sveltejs/adapter-vercel/files/shims.js"() {
    init_install_fetch();
  }
});

// node_modules/@sveltejs/kit/dist/chunks/url.js
function get_single_valued_header(headers, key) {
  const value = headers[key];
  if (Array.isArray(value)) {
    if (value.length === 0) {
      return void 0;
    }
    if (value.length > 1) {
      throw new Error(`Multiple headers provided for ${key}. Multiple may be provided only for set-cookie`);
    }
    return value[0];
  }
  return value;
}
function resolve(base2, path) {
  if (scheme.test(path))
    return path;
  const base_match = absolute.exec(base2);
  const path_match = absolute.exec(path);
  if (!base_match) {
    throw new Error(`bad base path: "${base2}"`);
  }
  const baseparts = path_match ? [] : base2.slice(base_match[0].length).split("/");
  const pathparts = path_match ? path.slice(path_match[0].length).split("/") : path.split("/");
  baseparts.pop();
  for (let i2 = 0; i2 < pathparts.length; i2 += 1) {
    const part = pathparts[i2];
    if (part === ".")
      continue;
    else if (part === "..")
      baseparts.pop();
    else
      baseparts.push(part);
  }
  const prefix = path_match && path_match[0] || base_match && base_match[0] || "";
  return `${prefix}${baseparts.join("/")}`;
}
function is_root_relative(path) {
  return path[0] === "/" && path[1] !== "/";
}
var absolute, scheme;
var init_url = __esm({
  "node_modules/@sveltejs/kit/dist/chunks/url.js"() {
    init_shims();
    absolute = /^([a-z]+:)?\/?\//;
    scheme = /^[a-z]+:/;
  }
});

// node_modules/@sveltejs/kit/dist/chunks/error.js
function coalesce_to_error(err) {
  return err instanceof Error || err && err.name && err.message ? err : new Error(JSON.stringify(err));
}
var init_error = __esm({
  "node_modules/@sveltejs/kit/dist/chunks/error.js"() {
    init_shims();
  }
});

// node_modules/@sveltejs/kit/dist/ssr.js
function lowercase_keys(obj) {
  const clone2 = {};
  for (const key in obj) {
    clone2[key.toLowerCase()] = obj[key];
  }
  return clone2;
}
function error(body) {
  return {
    status: 500,
    body,
    headers: {}
  };
}
function is_string(s3) {
  return typeof s3 === "string" || s3 instanceof String;
}
function is_content_type_textual(content_type) {
  if (!content_type)
    return true;
  const [type] = content_type.split(";");
  return type === "text/plain" || type === "application/json" || type === "application/x-www-form-urlencoded" || type === "multipart/form-data";
}
async function render_endpoint(request, route, match) {
  const mod = await route.load();
  const handler = mod[request.method.toLowerCase().replace("delete", "del")];
  if (!handler) {
    return;
  }
  const params = route.params(match);
  const response = await handler({ ...request, params });
  const preface = `Invalid response from route ${request.path}`;
  if (!response) {
    return;
  }
  if (typeof response !== "object") {
    return error(`${preface}: expected an object, got ${typeof response}`);
  }
  let { status = 200, body, headers = {} } = response;
  headers = lowercase_keys(headers);
  const type = get_single_valued_header(headers, "content-type");
  const is_type_textual = is_content_type_textual(type);
  if (!is_type_textual && !(body instanceof Uint8Array || is_string(body))) {
    return error(`${preface}: body must be an instance of string or Uint8Array if content-type is not a supported textual content-type`);
  }
  let normalized_body;
  if ((typeof body === "object" || typeof body === "undefined") && !(body instanceof Uint8Array) && (!type || type.startsWith("application/json"))) {
    headers = { ...headers, "content-type": "application/json; charset=utf-8" };
    normalized_body = JSON.stringify(typeof body === "undefined" ? {} : body);
  } else {
    normalized_body = body;
  }
  return { status, body: normalized_body, headers };
}
function devalue(value) {
  var counts = new Map();
  function walk(thing) {
    if (typeof thing === "function") {
      throw new Error("Cannot stringify a function");
    }
    if (counts.has(thing)) {
      counts.set(thing, counts.get(thing) + 1);
      return;
    }
    counts.set(thing, 1);
    if (!isPrimitive(thing)) {
      var type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
        case "Date":
        case "RegExp":
          return;
        case "Array":
          thing.forEach(walk);
          break;
        case "Set":
        case "Map":
          Array.from(thing).forEach(walk);
          break;
        default:
          var proto2 = Object.getPrototypeOf(thing);
          if (proto2 !== Object.prototype && proto2 !== null && Object.getOwnPropertyNames(proto2).sort().join("\0") !== objectProtoOwnPropertyNames) {
            throw new Error("Cannot stringify arbitrary non-POJOs");
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new Error("Cannot stringify POJOs with symbolic keys");
          }
          Object.keys(thing).forEach(function(key) {
            return walk(thing[key]);
          });
      }
    }
  }
  walk(value);
  var names = new Map();
  Array.from(counts).filter(function(entry) {
    return entry[1] > 1;
  }).sort(function(a2, b2) {
    return b2[1] - a2[1];
  }).forEach(function(entry, i2) {
    names.set(entry[0], getName(i2));
  });
  function stringify(thing) {
    if (names.has(thing)) {
      return names.get(thing);
    }
    if (isPrimitive(thing)) {
      return stringifyPrimitive(thing);
    }
    var type = getType(thing);
    switch (type) {
      case "Number":
      case "String":
      case "Boolean":
        return "Object(" + stringify(thing.valueOf()) + ")";
      case "RegExp":
        return "new RegExp(" + stringifyString(thing.source) + ', "' + thing.flags + '")';
      case "Date":
        return "new Date(" + thing.getTime() + ")";
      case "Array":
        var members = thing.map(function(v, i2) {
          return i2 in thing ? stringify(v) : "";
        });
        var tail = thing.length === 0 || thing.length - 1 in thing ? "" : ",";
        return "[" + members.join(",") + tail + "]";
      case "Set":
      case "Map":
        return "new " + type + "([" + Array.from(thing).map(stringify).join(",") + "])";
      default:
        var obj = "{" + Object.keys(thing).map(function(key) {
          return safeKey(key) + ":" + stringify(thing[key]);
        }).join(",") + "}";
        var proto2 = Object.getPrototypeOf(thing);
        if (proto2 === null) {
          return Object.keys(thing).length > 0 ? "Object.assign(Object.create(null)," + obj + ")" : "Object.create(null)";
        }
        return obj;
    }
  }
  var str = stringify(value);
  if (names.size) {
    var params_1 = [];
    var statements_1 = [];
    var values_1 = [];
    names.forEach(function(name, thing) {
      params_1.push(name);
      if (isPrimitive(thing)) {
        values_1.push(stringifyPrimitive(thing));
        return;
      }
      var type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          values_1.push("Object(" + stringify(thing.valueOf()) + ")");
          break;
        case "RegExp":
          values_1.push(thing.toString());
          break;
        case "Date":
          values_1.push("new Date(" + thing.getTime() + ")");
          break;
        case "Array":
          values_1.push("Array(" + thing.length + ")");
          thing.forEach(function(v, i2) {
            statements_1.push(name + "[" + i2 + "]=" + stringify(v));
          });
          break;
        case "Set":
          values_1.push("new Set");
          statements_1.push(name + "." + Array.from(thing).map(function(v) {
            return "add(" + stringify(v) + ")";
          }).join("."));
          break;
        case "Map":
          values_1.push("new Map");
          statements_1.push(name + "." + Array.from(thing).map(function(_a) {
            var k = _a[0], v = _a[1];
            return "set(" + stringify(k) + ", " + stringify(v) + ")";
          }).join("."));
          break;
        default:
          values_1.push(Object.getPrototypeOf(thing) === null ? "Object.create(null)" : "{}");
          Object.keys(thing).forEach(function(key) {
            statements_1.push("" + name + safeProp(key) + "=" + stringify(thing[key]));
          });
      }
    });
    statements_1.push("return " + str);
    return "(function(" + params_1.join(",") + "){" + statements_1.join(";") + "}(" + values_1.join(",") + "))";
  } else {
    return str;
  }
}
function getName(num) {
  var name = "";
  do {
    name = chars[num % chars.length] + name;
    num = ~~(num / chars.length) - 1;
  } while (num >= 0);
  return reserved.test(name) ? name + "_" : name;
}
function isPrimitive(thing) {
  return Object(thing) !== thing;
}
function stringifyPrimitive(thing) {
  if (typeof thing === "string")
    return stringifyString(thing);
  if (thing === void 0)
    return "void 0";
  if (thing === 0 && 1 / thing < 0)
    return "-0";
  var str = String(thing);
  if (typeof thing === "number")
    return str.replace(/^(-)?0\./, "$1.");
  return str;
}
function getType(thing) {
  return Object.prototype.toString.call(thing).slice(8, -1);
}
function escapeUnsafeChar(c2) {
  return escaped[c2] || c2;
}
function escapeUnsafeChars(str) {
  return str.replace(unsafeChars, escapeUnsafeChar);
}
function safeKey(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? key : escapeUnsafeChars(JSON.stringify(key));
}
function safeProp(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? "." + key : "[" + escapeUnsafeChars(JSON.stringify(key)) + "]";
}
function stringifyString(str) {
  var result = '"';
  for (var i2 = 0; i2 < str.length; i2 += 1) {
    var char = str.charAt(i2);
    var code = char.charCodeAt(0);
    if (char === '"') {
      result += '\\"';
    } else if (char in escaped) {
      result += escaped[char];
    } else if (code >= 55296 && code <= 57343) {
      var next = str.charCodeAt(i2 + 1);
      if (code <= 56319 && (next >= 56320 && next <= 57343)) {
        result += char + str[++i2];
      } else {
        result += "\\u" + code.toString(16).toUpperCase();
      }
    } else {
      result += char;
    }
  }
  result += '"';
  return result;
}
function noop2() {
}
function safe_not_equal(a2, b2) {
  return a2 != a2 ? b2 == b2 : a2 !== b2 || (a2 && typeof a2 === "object" || typeof a2 === "function");
}
function writable(value, start = noop2) {
  let stop;
  const subscribers = new Set();
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }
        if (run_queue) {
          for (let i2 = 0; i2 < subscriber_queue.length; i2 += 2) {
            subscriber_queue[i2][0](subscriber_queue[i2 + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop2) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop2;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}
function hash(value) {
  let hash2 = 5381;
  let i2 = value.length;
  if (typeof value === "string") {
    while (i2)
      hash2 = hash2 * 33 ^ value.charCodeAt(--i2);
  } else {
    while (i2)
      hash2 = hash2 * 33 ^ value[--i2];
  }
  return (hash2 >>> 0).toString(36);
}
function escape_json_string_in_html(str) {
  return escape(str, escape_json_string_in_html_dict, (code) => `\\u${code.toString(16).toUpperCase()}`);
}
function escape_html_attr(str) {
  return '"' + escape(str, escape_html_attr_dict, (code) => `&#${code};`) + '"';
}
function escape(str, dict, unicode_encoder) {
  let result = "";
  for (let i2 = 0; i2 < str.length; i2 += 1) {
    const char = str.charAt(i2);
    const code = char.charCodeAt(0);
    if (char in dict) {
      result += dict[char];
    } else if (code >= 55296 && code <= 57343) {
      const next = str.charCodeAt(i2 + 1);
      if (code <= 56319 && next >= 56320 && next <= 57343) {
        result += char + str[++i2];
      } else {
        result += unicode_encoder(code);
      }
    } else {
      result += char;
    }
  }
  return result;
}
async function render_response({
  branch,
  options: options2,
  $session,
  page_config,
  status,
  error: error2,
  page: page2
}) {
  const css11 = new Set(options2.entry.css);
  const js = new Set(options2.entry.js);
  const styles = new Set();
  const serialized_data = [];
  let rendered;
  let is_private = false;
  let maxage;
  if (error2) {
    error2.stack = options2.get_stack(error2);
  }
  if (page_config.ssr) {
    branch.forEach(({ node, loaded: loaded2, fetched, uses_credentials }) => {
      if (node.css)
        node.css.forEach((url) => css11.add(url));
      if (node.js)
        node.js.forEach((url) => js.add(url));
      if (node.styles)
        node.styles.forEach((content) => styles.add(content));
      if (fetched && page_config.hydrate)
        serialized_data.push(...fetched);
      if (uses_credentials)
        is_private = true;
      maxage = loaded2.maxage;
    });
    const session = writable($session);
    const props = {
      stores: {
        page: writable(null),
        navigating: writable(null),
        session
      },
      page: page2,
      components: branch.map(({ node }) => node.module.default)
    };
    for (let i2 = 0; i2 < branch.length; i2 += 1) {
      props[`props_${i2}`] = await branch[i2].loaded.props;
    }
    let session_tracking_active = false;
    const unsubscribe = session.subscribe(() => {
      if (session_tracking_active)
        is_private = true;
    });
    session_tracking_active = true;
    try {
      rendered = options2.root.render(props);
    } finally {
      unsubscribe();
    }
  } else {
    rendered = { head: "", html: "", css: { code: "", map: null } };
  }
  const include_js = page_config.router || page_config.hydrate;
  if (!include_js)
    js.clear();
  const links = options2.amp ? styles.size > 0 || rendered.css.code.length > 0 ? `<style amp-custom>${Array.from(styles).concat(rendered.css.code).join("\n")}</style>` : "" : [
    ...Array.from(js).map((dep) => `<link rel="modulepreload" href="${dep}">`),
    ...Array.from(css11).map((dep) => `<link rel="stylesheet" href="${dep}">`)
  ].join("\n		");
  let init2 = "";
  if (options2.amp) {
    init2 = `
		<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>
		<noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>
		<script async src="https://cdn.ampproject.org/v0.js"><\/script>`;
    init2 += options2.service_worker ? '<script async custom-element="amp-install-serviceworker" src="https://cdn.ampproject.org/v0/amp-install-serviceworker-0.1.js"><\/script>' : "";
  } else if (include_js) {
    init2 = `<script type="module">
			import { start } from ${s$1(options2.entry.file)};
			start({
				target: ${options2.target ? `document.querySelector(${s$1(options2.target)})` : "document.body"},
				paths: ${s$1(options2.paths)},
				session: ${try_serialize($session, (error3) => {
      throw new Error(`Failed to serialize session data: ${error3.message}`);
    })},
				host: ${page2 && page2.host ? s$1(page2.host) : "location.host"},
				route: ${!!page_config.router},
				spa: ${!page_config.ssr},
				trailing_slash: ${s$1(options2.trailing_slash)},
				hydrate: ${page_config.ssr && page_config.hydrate ? `{
					status: ${status},
					error: ${serialize_error(error2)},
					nodes: [
						${(branch || []).map(({ node }) => `import(${s$1(node.entry)})`).join(",\n						")}
					],
					page: {
						host: ${page2 && page2.host ? s$1(page2.host) : "location.host"}, // TODO this is redundant
						path: ${page2 && page2.path ? try_serialize(page2.path, (error3) => {
      throw new Error(`Failed to serialize page.path: ${error3.message}`);
    }) : null},
						query: new URLSearchParams(${page2 && page2.query ? s$1(page2.query.toString()) : ""}),
						params: ${page2 && page2.params ? try_serialize(page2.params, (error3) => {
      throw new Error(`Failed to serialize page.params: ${error3.message}`);
    }) : null}
					}
				}` : "null"}
			});
		<\/script>`;
  }
  if (options2.service_worker) {
    init2 += options2.amp ? `<amp-install-serviceworker src="${options2.service_worker}" layout="nodisplay"></amp-install-serviceworker>` : `<script>
			if ('serviceWorker' in navigator) {
				navigator.serviceWorker.register('${options2.service_worker}');
			}
		<\/script>`;
  }
  const head = [
    rendered.head,
    styles.size && !options2.amp ? `<style data-svelte>${Array.from(styles).join("\n")}</style>` : "",
    links,
    init2
  ].join("\n\n		");
  const body = options2.amp ? rendered.html : `${rendered.html}

			${serialized_data.map(({ url, body: body2, json }) => {
    let attributes = `type="application/json" data-type="svelte-data" data-url=${escape_html_attr(url)}`;
    if (body2)
      attributes += ` data-body="${hash(body2)}"`;
    return `<script ${attributes}>${json}<\/script>`;
  }).join("\n\n	")}
		`;
  const headers = {
    "content-type": "text/html"
  };
  if (maxage) {
    headers["cache-control"] = `${is_private ? "private" : "public"}, max-age=${maxage}`;
  }
  if (!options2.floc) {
    headers["permissions-policy"] = "interest-cohort=()";
  }
  return {
    status,
    headers,
    body: options2.template({ head, body })
  };
}
function try_serialize(data, fail) {
  try {
    return devalue(data);
  } catch (err) {
    if (fail)
      fail(coalesce_to_error(err));
    return null;
  }
}
function serialize_error(error2) {
  if (!error2)
    return null;
  let serialized = try_serialize(error2);
  if (!serialized) {
    const { name, message, stack } = error2;
    serialized = try_serialize({ ...error2, name, message, stack });
  }
  if (!serialized) {
    serialized = "{}";
  }
  return serialized;
}
function normalize(loaded2) {
  const has_error_status = loaded2.status && loaded2.status >= 400 && loaded2.status <= 599 && !loaded2.redirect;
  if (loaded2.error || has_error_status) {
    const status = loaded2.status;
    if (!loaded2.error && has_error_status) {
      return {
        status: status || 500,
        error: new Error()
      };
    }
    const error2 = typeof loaded2.error === "string" ? new Error(loaded2.error) : loaded2.error;
    if (!(error2 instanceof Error)) {
      return {
        status: 500,
        error: new Error(`"error" property returned from load() must be a string or instance of Error, received type "${typeof error2}"`)
      };
    }
    if (!status || status < 400 || status > 599) {
      console.warn('"error" returned from load() without a valid status code \u2014 defaulting to 500');
      return { status: 500, error: error2 };
    }
    return { status, error: error2 };
  }
  if (loaded2.redirect) {
    if (!loaded2.status || Math.floor(loaded2.status / 100) !== 3) {
      return {
        status: 500,
        error: new Error('"redirect" property returned from load() must be accompanied by a 3xx status code')
      };
    }
    if (typeof loaded2.redirect !== "string") {
      return {
        status: 500,
        error: new Error('"redirect" property returned from load() must be a string')
      };
    }
  }
  if (loaded2.context) {
    throw new Error('You are returning "context" from a load function. "context" was renamed to "stuff", please adjust your code accordingly.');
  }
  return loaded2;
}
async function load_node({
  request,
  options: options2,
  state,
  route,
  page: page2,
  node,
  $session,
  stuff,
  prerender_enabled,
  is_leaf,
  is_error,
  status,
  error: error2
}) {
  const { module: module2 } = node;
  let uses_credentials = false;
  const fetched = [];
  let set_cookie_headers = [];
  let loaded2;
  const page_proxy = new Proxy(page2, {
    get: (target, prop, receiver) => {
      if (prop === "query" && prerender_enabled) {
        throw new Error("Cannot access query on a page with prerendering enabled");
      }
      return Reflect.get(target, prop, receiver);
    }
  });
  if (module2.load) {
    const load_input = {
      page: page_proxy,
      get session() {
        uses_credentials = true;
        return $session;
      },
      fetch: async (resource, opts = {}) => {
        let url;
        if (typeof resource === "string") {
          url = resource;
        } else {
          url = resource.url;
          opts = {
            method: resource.method,
            headers: resource.headers,
            body: resource.body,
            mode: resource.mode,
            credentials: resource.credentials,
            cache: resource.cache,
            redirect: resource.redirect,
            referrer: resource.referrer,
            integrity: resource.integrity,
            ...opts
          };
        }
        const resolved = resolve(request.path, url.split("?")[0]);
        let response;
        const prefix = options2.paths.assets || options2.paths.base;
        const filename = (resolved.startsWith(prefix) ? resolved.slice(prefix.length) : resolved).slice(1);
        const filename_html = `${filename}/index.html`;
        const asset = options2.manifest.assets.find((d3) => d3.file === filename || d3.file === filename_html);
        if (asset) {
          response = options2.read ? new Response(options2.read(asset.file), {
            headers: asset.type ? { "content-type": asset.type } : {}
          }) : await fetch(`http://${page2.host}/${asset.file}`, opts);
        } else if (is_root_relative(resolved)) {
          const relative = resolved;
          const headers = {
            ...opts.headers
          };
          if (opts.credentials !== "omit") {
            uses_credentials = true;
            headers.cookie = request.headers.cookie;
            if (!headers.authorization) {
              headers.authorization = request.headers.authorization;
            }
          }
          if (opts.body && typeof opts.body !== "string") {
            throw new Error("Request body must be a string");
          }
          const search = url.includes("?") ? url.slice(url.indexOf("?") + 1) : "";
          const rendered = await respond({
            host: request.host,
            method: opts.method || "GET",
            headers,
            path: relative,
            rawBody: opts.body == null ? null : new TextEncoder().encode(opts.body),
            query: new URLSearchParams(search)
          }, options2, {
            fetched: url,
            initiator: route
          });
          if (rendered) {
            if (state.prerender) {
              state.prerender.dependencies.set(relative, rendered);
            }
            response = new Response(rendered.body, {
              status: rendered.status,
              headers: rendered.headers
            });
          }
        } else {
          if (resolved.startsWith("//")) {
            throw new Error(`Cannot request protocol-relative URL (${url}) in server-side fetch`);
          }
          if (typeof request.host !== "undefined") {
            const { hostname: fetch_hostname } = new URL(url);
            const [server_hostname] = request.host.split(":");
            if (`.${fetch_hostname}`.endsWith(`.${server_hostname}`) && opts.credentials !== "omit") {
              uses_credentials = true;
              opts.headers = {
                ...opts.headers,
                cookie: request.headers.cookie
              };
            }
          }
          const external_request = new Request(url, opts);
          response = await options2.hooks.externalFetch.call(null, external_request);
        }
        if (response) {
          const proxy = new Proxy(response, {
            get(response2, key, _receiver) {
              async function text() {
                const body = await response2.text();
                const headers = {};
                for (const [key2, value] of response2.headers) {
                  if (key2 === "set-cookie") {
                    set_cookie_headers = set_cookie_headers.concat(value);
                  } else if (key2 !== "etag") {
                    headers[key2] = value;
                  }
                }
                if (!opts.body || typeof opts.body === "string") {
                  fetched.push({
                    url,
                    body: opts.body,
                    json: `{"status":${response2.status},"statusText":${s2(response2.statusText)},"headers":${s2(headers)},"body":"${escape_json_string_in_html(body)}"}`
                  });
                }
                return body;
              }
              if (key === "text") {
                return text;
              }
              if (key === "json") {
                return async () => {
                  return JSON.parse(await text());
                };
              }
              return Reflect.get(response2, key, response2);
            }
          });
          return proxy;
        }
        return response || new Response("Not found", {
          status: 404
        });
      },
      stuff: { ...stuff }
    };
    if (is_error) {
      load_input.status = status;
      load_input.error = error2;
    }
    loaded2 = await module2.load.call(null, load_input);
  } else {
    loaded2 = {};
  }
  if (!loaded2 && is_leaf && !is_error)
    return;
  if (!loaded2) {
    throw new Error(`${node.entry} - load must return a value except for page fall through`);
  }
  return {
    node,
    loaded: normalize(loaded2),
    stuff: loaded2.stuff || stuff,
    fetched,
    set_cookie_headers,
    uses_credentials
  };
}
async function respond_with_error({ request, options: options2, state, $session, status, error: error2 }) {
  const default_layout = await options2.load_component(options2.manifest.layout);
  const default_error = await options2.load_component(options2.manifest.error);
  const page2 = {
    host: request.host,
    path: request.path,
    query: request.query,
    params: {}
  };
  const loaded2 = await load_node({
    request,
    options: options2,
    state,
    route: null,
    page: page2,
    node: default_layout,
    $session,
    stuff: {},
    prerender_enabled: is_prerender_enabled(options2, default_error, state),
    is_leaf: false,
    is_error: false
  });
  const branch = [
    loaded2,
    await load_node({
      request,
      options: options2,
      state,
      route: null,
      page: page2,
      node: default_error,
      $session,
      stuff: loaded2 ? loaded2.stuff : {},
      prerender_enabled: is_prerender_enabled(options2, default_error, state),
      is_leaf: false,
      is_error: true,
      status,
      error: error2
    })
  ];
  try {
    return await render_response({
      options: options2,
      $session,
      page_config: {
        hydrate: options2.hydrate,
        router: options2.router,
        ssr: options2.ssr
      },
      status,
      error: error2,
      branch,
      page: page2
    });
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options2.handle_error(error3, request);
    return {
      status: 500,
      headers: {},
      body: error3.stack
    };
  }
}
function is_prerender_enabled(options2, node, state) {
  return options2.prerender && (!!node.module.prerender || !!state.prerender && state.prerender.all);
}
async function respond$1(opts) {
  const { request, options: options2, state, $session, route } = opts;
  let nodes;
  try {
    nodes = await Promise.all(route.a.map((id) => id ? options2.load_component(id) : void 0));
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options2.handle_error(error3, request);
    return await respond_with_error({
      request,
      options: options2,
      state,
      $session,
      status: 500,
      error: error3
    });
  }
  const leaf = nodes[nodes.length - 1].module;
  let page_config = get_page_config(leaf, options2);
  if (!leaf.prerender && state.prerender && !state.prerender.all) {
    return {
      status: 204,
      headers: {}
    };
  }
  let branch = [];
  let status = 200;
  let error2;
  let set_cookie_headers = [];
  ssr:
    if (page_config.ssr) {
      let stuff = {};
      for (let i2 = 0; i2 < nodes.length; i2 += 1) {
        const node = nodes[i2];
        let loaded2;
        if (node) {
          try {
            loaded2 = await load_node({
              ...opts,
              node,
              stuff,
              prerender_enabled: is_prerender_enabled(options2, node, state),
              is_leaf: i2 === nodes.length - 1,
              is_error: false
            });
            if (!loaded2)
              return;
            set_cookie_headers = set_cookie_headers.concat(loaded2.set_cookie_headers);
            if (loaded2.loaded.redirect) {
              return with_cookies({
                status: loaded2.loaded.status,
                headers: {
                  location: encodeURI(loaded2.loaded.redirect)
                }
              }, set_cookie_headers);
            }
            if (loaded2.loaded.error) {
              ({ status, error: error2 } = loaded2.loaded);
            }
          } catch (err) {
            const e3 = coalesce_to_error(err);
            options2.handle_error(e3, request);
            status = 500;
            error2 = e3;
          }
          if (loaded2 && !error2) {
            branch.push(loaded2);
          }
          if (error2) {
            while (i2--) {
              if (route.b[i2]) {
                const error_node = await options2.load_component(route.b[i2]);
                let node_loaded;
                let j = i2;
                while (!(node_loaded = branch[j])) {
                  j -= 1;
                }
                try {
                  const error_loaded = await load_node({
                    ...opts,
                    node: error_node,
                    stuff: node_loaded.stuff,
                    prerender_enabled: is_prerender_enabled(options2, error_node, state),
                    is_leaf: false,
                    is_error: true,
                    status,
                    error: error2
                  });
                  if (error_loaded.loaded.error) {
                    continue;
                  }
                  page_config = get_page_config(error_node.module, options2);
                  branch = branch.slice(0, j + 1).concat(error_loaded);
                  break ssr;
                } catch (err) {
                  const e3 = coalesce_to_error(err);
                  options2.handle_error(e3, request);
                  continue;
                }
              }
            }
            return with_cookies(await respond_with_error({
              request,
              options: options2,
              state,
              $session,
              status,
              error: error2
            }), set_cookie_headers);
          }
        }
        if (loaded2 && loaded2.loaded.stuff) {
          stuff = {
            ...stuff,
            ...loaded2.loaded.stuff
          };
        }
      }
    }
  try {
    return with_cookies(await render_response({
      ...opts,
      page_config,
      status,
      error: error2,
      branch: branch.filter(Boolean)
    }), set_cookie_headers);
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options2.handle_error(error3, request);
    return with_cookies(await respond_with_error({
      ...opts,
      status: 500,
      error: error3
    }), set_cookie_headers);
  }
}
function get_page_config(leaf, options2) {
  return {
    ssr: "ssr" in leaf ? !!leaf.ssr : options2.ssr,
    router: "router" in leaf ? !!leaf.router : options2.router,
    hydrate: "hydrate" in leaf ? !!leaf.hydrate : options2.hydrate
  };
}
function with_cookies(response, set_cookie_headers) {
  if (set_cookie_headers.length) {
    response.headers["set-cookie"] = set_cookie_headers;
  }
  return response;
}
async function render_page(request, route, match, options2, state) {
  if (state.initiator === route) {
    return {
      status: 404,
      headers: {},
      body: `Not found: ${request.path}`
    };
  }
  const params = route.params(match);
  const page2 = {
    host: request.host,
    path: request.path,
    query: request.query,
    params
  };
  const $session = await options2.hooks.getSession(request);
  const response = await respond$1({
    request,
    options: options2,
    state,
    $session,
    route,
    page: page2
  });
  if (response) {
    return response;
  }
  if (state.fetched) {
    return {
      status: 500,
      headers: {},
      body: `Bad request in load function: failed to fetch ${state.fetched}`
    };
  }
}
function read_only_form_data() {
  const map = new Map();
  return {
    append(key, value) {
      if (map.has(key)) {
        (map.get(key) || []).push(value);
      } else {
        map.set(key, [value]);
      }
    },
    data: new ReadOnlyFormData(map)
  };
}
function parse_body(raw, headers) {
  if (!raw)
    return raw;
  const content_type = headers["content-type"];
  const [type, ...directives] = content_type ? content_type.split(/;\s*/) : [];
  const text = () => new TextDecoder(headers["content-encoding"] || "utf-8").decode(raw);
  switch (type) {
    case "text/plain":
      return text();
    case "application/json":
      return JSON.parse(text());
    case "application/x-www-form-urlencoded":
      return get_urlencoded(text());
    case "multipart/form-data": {
      const boundary = directives.find((directive) => directive.startsWith("boundary="));
      if (!boundary)
        throw new Error("Missing boundary");
      return get_multipart(text(), boundary.slice("boundary=".length));
    }
    default:
      return raw;
  }
}
function get_urlencoded(text) {
  const { data, append } = read_only_form_data();
  text.replace(/\+/g, " ").split("&").forEach((str) => {
    const [key, value] = str.split("=");
    append(decodeURIComponent(key), decodeURIComponent(value));
  });
  return data;
}
function get_multipart(text, boundary) {
  const parts = text.split(`--${boundary}`);
  if (parts[0] !== "" || parts[parts.length - 1].trim() !== "--") {
    throw new Error("Malformed form data");
  }
  const { data, append } = read_only_form_data();
  parts.slice(1, -1).forEach((part) => {
    const match = /\s*([\s\S]+?)\r\n\r\n([\s\S]*)\s*/.exec(part);
    if (!match) {
      throw new Error("Malformed form data");
    }
    const raw_headers = match[1];
    const body = match[2].trim();
    let key;
    const headers = {};
    raw_headers.split("\r\n").forEach((str) => {
      const [raw_header, ...raw_directives] = str.split("; ");
      let [name, value] = raw_header.split(": ");
      name = name.toLowerCase();
      headers[name] = value;
      const directives = {};
      raw_directives.forEach((raw_directive) => {
        const [name2, value2] = raw_directive.split("=");
        directives[name2] = JSON.parse(value2);
      });
      if (name === "content-disposition") {
        if (value !== "form-data")
          throw new Error("Malformed form data");
        if (directives.filename) {
          throw new Error("File upload is not yet implemented");
        }
        if (directives.name) {
          key = directives.name;
        }
      }
    });
    if (!key)
      throw new Error("Malformed form data");
    append(key, body);
  });
  return data;
}
async function respond(incoming, options2, state = {}) {
  if (incoming.path !== "/" && options2.trailing_slash !== "ignore") {
    const has_trailing_slash = incoming.path.endsWith("/");
    if (has_trailing_slash && options2.trailing_slash === "never" || !has_trailing_slash && options2.trailing_slash === "always" && !(incoming.path.split("/").pop() || "").includes(".")) {
      const path = has_trailing_slash ? incoming.path.slice(0, -1) : incoming.path + "/";
      const q = incoming.query.toString();
      return {
        status: 301,
        headers: {
          location: options2.paths.base + path + (q ? `?${q}` : "")
        }
      };
    }
  }
  const headers = lowercase_keys(incoming.headers);
  const request = {
    ...incoming,
    headers,
    body: parse_body(incoming.rawBody, headers),
    params: {},
    locals: {}
  };
  try {
    return await options2.hooks.handle({
      request,
      resolve: async (request2) => {
        if (state.prerender && state.prerender.fallback) {
          return await render_response({
            options: options2,
            $session: await options2.hooks.getSession(request2),
            page_config: { ssr: false, router: true, hydrate: true },
            status: 200,
            branch: []
          });
        }
        const decoded = decodeURI(request2.path);
        for (const route of options2.manifest.routes) {
          const match = route.pattern.exec(decoded);
          if (!match)
            continue;
          const response = route.type === "endpoint" ? await render_endpoint(request2, route, match) : await render_page(request2, route, match, options2, state);
          if (response) {
            if (response.status === 200) {
              const cache_control = get_single_valued_header(response.headers, "cache-control");
              if (!cache_control || !/(no-store|immutable)/.test(cache_control)) {
                let if_none_match_value = request2.headers["if-none-match"];
                if (if_none_match_value?.startsWith('W/"')) {
                  if_none_match_value = if_none_match_value.substring(2);
                }
                const etag = `"${hash(response.body || "")}"`;
                if (if_none_match_value === etag) {
                  return {
                    status: 304,
                    headers: {}
                  };
                }
                response.headers["etag"] = etag;
              }
            }
            return response;
          }
        }
        const $session = await options2.hooks.getSession(request2);
        return await respond_with_error({
          request: request2,
          options: options2,
          state,
          $session,
          status: 404,
          error: new Error(`Not found: ${request2.path}`)
        });
      }
    });
  } catch (err) {
    const e3 = coalesce_to_error(err);
    options2.handle_error(e3, request);
    return {
      status: 500,
      headers: {},
      body: options2.dev ? e3.stack : e3.message
    };
  }
}
var chars, unsafeChars, reserved, escaped, objectProtoOwnPropertyNames, subscriber_queue, escape_json_string_in_html_dict, escape_html_attr_dict, s$1, s2, ReadOnlyFormData;
var init_ssr = __esm({
  "node_modules/@sveltejs/kit/dist/ssr.js"() {
    init_shims();
    init_url();
    init_error();
    chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$";
    unsafeChars = /[<>\b\f\n\r\t\0\u2028\u2029]/g;
    reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
    escaped = {
      "<": "\\u003C",
      ">": "\\u003E",
      "/": "\\u002F",
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "	": "\\t",
      "\0": "\\0",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    objectProtoOwnPropertyNames = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
    Promise.resolve();
    subscriber_queue = [];
    escape_json_string_in_html_dict = {
      '"': '\\"',
      "<": "\\u003C",
      ">": "\\u003E",
      "/": "\\u002F",
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "	": "\\t",
      "\0": "\\0",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    escape_html_attr_dict = {
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;"
    };
    s$1 = JSON.stringify;
    s2 = JSON.stringify;
    ReadOnlyFormData = class {
      #map;
      constructor(map) {
        this.#map = map;
      }
      get(key) {
        const value = this.#map.get(key);
        return value && value[0];
      }
      getAll(key) {
        return this.#map.get(key);
      }
      has(key) {
        return this.#map.has(key);
      }
      *[Symbol.iterator]() {
        for (const [key, value] of this.#map) {
          for (let i2 = 0; i2 < value.length; i2 += 1) {
            yield [key, value[i2]];
          }
        }
      }
      *entries() {
        for (const [key, value] of this.#map) {
          for (let i2 = 0; i2 < value.length; i2 += 1) {
            yield [key, value[i2]];
          }
        }
      }
      *keys() {
        for (const [key] of this.#map)
          yield key;
      }
      *values() {
        for (const [, value] of this.#map) {
          for (let i2 = 0; i2 < value.length; i2 += 1) {
            yield value[i2];
          }
        }
      }
    };
  }
});

// node_modules/@onflow/util-invariant/dist/util-invariant.js
var require_util_invariant = __commonJS({
  "node_modules/@onflow/util-invariant/dist/util-invariant.js"(exports2) {
    init_shims();
    exports2.invariant = function(n, t2) {
      if (!n) {
        var r2, a2 = new Error("INVARIANT " + t2);
        throw a2.stack = a2.stack.split("\n").filter(function(n2) {
          return !/at invariant/.test(n2);
        }).join("\n"), (r2 = console).error.apply(r2, ["\n\n---\n\n", a2, "\n\n"].concat([].slice.call(arguments, 2), ["\n\n---\n\n"])), a2;
      }
    };
  }
});

// node_modules/queue-microtask/index.js
var require_queue_microtask = __commonJS({
  "node_modules/queue-microtask/index.js"(exports2, module2) {
    init_shims();
    var promise;
    module2.exports = typeof queueMicrotask === "function" ? queueMicrotask : (cb) => (promise || (promise = Promise.resolve())).then(cb).catch((err) => setTimeout(() => {
      throw err;
    }, 0));
  }
});

// node_modules/@onflow/util-actor/dist/actor.js
var require_actor = __commonJS({
  "node_modules/@onflow/util-actor/dist/actor.js"(exports2) {
    init_shims();
    var n;
    var e3 = (n = require_queue_microtask()) && typeof n == "object" && "default" in n ? n.default : n;
    function t2() {
      return (t2 = Object.assign || function(n2) {
        for (var e4 = 1; e4 < arguments.length; e4++) {
          var t3 = arguments[e4];
          for (var r3 in t3)
            Object.prototype.hasOwnProperty.call(t3, r3) && (n2[r3] = t3[r3]);
        }
        return n2;
      }).apply(this, arguments);
    }
    function r2(n2, e4) {
      (e4 == null || e4 > n2.length) && (e4 = n2.length);
      for (var t3 = 0, r3 = new Array(e4); t3 < e4; t3++)
        r3[t3] = n2[t3];
      return r3;
    }
    function o(n2, e4, t3) {
      if (!n2.s) {
        if (t3 instanceof i2) {
          if (!t3.s)
            return void (t3.o = o.bind(null, n2, e4));
          1 & e4 && (e4 = t3.s), t3 = t3.v;
        }
        if (t3 && t3.then)
          return void t3.then(o.bind(null, n2, e4), o.bind(null, n2, 2));
        n2.s = e4, n2.v = t3;
        var r3 = n2.o;
        r3 && r3(n2);
      }
    }
    var i2 = function() {
      function n2() {
      }
      return n2.prototype.then = function(e4, t3) {
        var r3 = new n2(), i3 = this.s;
        if (i3) {
          var u2 = 1 & i3 ? e4 : t3;
          if (u2) {
            try {
              o(r3, 1, u2(this.v));
            } catch (n3) {
              o(r3, 2, n3);
            }
            return r3;
          }
          return this;
        }
        return this.o = function(n3) {
          try {
            var i4 = n3.v;
            1 & n3.s ? o(r3, 1, e4 ? e4(i4) : i4) : t3 ? o(r3, 1, t3(i4)) : o(r3, 2, i4);
          } catch (n4) {
            o(r3, 2, n4);
          }
        }, r3;
      }, n2;
    }();
    function u(n2) {
      return n2 instanceof i2 && 1 & n2.s;
    }
    function c2(n2, e4, t3) {
      for (var r3; ; ) {
        var c3 = n2();
        if (u(c3) && (c3 = c3.v), !c3)
          return f5;
        if (c3.then) {
          r3 = 0;
          break;
        }
        var f5 = t3();
        if (f5 && f5.then) {
          if (!u(f5)) {
            r3 = 1;
            break;
          }
          f5 = f5.s;
        }
        if (e4) {
          var s4 = e4();
          if (s4 && s4.then && !u(s4)) {
            r3 = 2;
            break;
          }
        }
      }
      var a3 = new i2(), l2 = o.bind(null, a3, 2);
      return (r3 === 0 ? c3.then(h2) : r3 === 1 ? f5.then(v2) : s4.then(d3)).then(void 0, l2), a3;
      function v2(r4) {
        f5 = r4;
        do {
          if (e4 && (s4 = e4()) && s4.then && !u(s4))
            return void s4.then(d3).then(void 0, l2);
          if (!(c3 = n2()) || u(c3) && !c3.v)
            return void o(a3, 1, f5);
          if (c3.then)
            return void c3.then(h2).then(void 0, l2);
          u(f5 = t3()) && (f5 = f5.v);
        } while (!f5 || !f5.then);
        f5.then(v2).then(void 0, l2);
      }
      function h2(n3) {
        n3 ? (f5 = t3()) && f5.then ? f5.then(v2).then(void 0, l2) : v2(f5) : o(a3, 1, f5);
      }
      function d3() {
        (c3 = n2()) ? c3.then ? c3.then(h2).then(void 0, l2) : h2(c3) : o(a3, 1, f5);
      }
    }
    var f4 = typeof self == "object" && self.self === self && self || typeof global == "object" && global.global === global && global || typeof window == "object" && window.window === window && window;
    f4.FCL_REGISTRY = f4.FCL_REGISTRY == null ? {} : f4.FCL_REGISTRY;
    var s3 = 0;
    var a2 = function(n2, e4, t3, r3) {
      return r3 === void 0 && (r3 = {}), new Promise(function(o2, i3) {
        var u2 = r3.expectReply || false, c3 = r3.timeout != null ? r3.timeout : 5e3;
        u2 && c3 && setTimeout(function() {
          return i3(new Error("Timeout: " + c3 + "ms passed without a response."));
        }, c3);
        var s4 = { to: n2, from: r3.from, tag: e4, data: t3, timeout: c3, reply: o2, reject: i3 };
        try {
          f4.FCL_REGISTRY[n2].mailbox.deliver(s4), u2 || o2(true);
        } catch (n3) {
          console.error("FCL.Actor -- Could Not Deliver Message", s4, n3);
        }
      });
    };
    var l = function(n2) {
      delete f4.FCL_REGISTRY[n2];
    };
    var v = function(n2, o2) {
      if (o2 === void 0 && (o2 = null), o2 == null && (o2 = ++s3), f4.FCL_REGISTRY[o2] != null)
        return o2;
      var i3, u2;
      f4.FCL_REGISTRY[o2] = { addr: o2, mailbox: (u2 = [], { deliver: function(n3) {
        try {
          return u2.push(n3), i3 && (i3(u2.shift()), i3 = void 0), Promise.resolve();
        } catch (n4) {
          return Promise.reject(n4);
        }
      }, receive: function() {
        return new Promise(function(n3) {
          var e4 = u2.shift();
          if (e4)
            return n3(e4);
          i3 = n3;
        });
      } }), subs: new Set(), kvs: {} };
      var v2, h2 = { self: function() {
        return o2;
      }, receive: function() {
        return f4.FCL_REGISTRY[o2].mailbox.receive();
      }, send: function(n3, e4, t3, r3) {
        return r3 === void 0 && (r3 = {}), r3.from = o2, a2(n3, e4, t3, r3);
      }, sendSelf: function(n3, e4, t3) {
        f4.FCL_REGISTRY[o2] && a2(o2, n3, e4, t3);
      }, broadcast: function(n3, e4, t3) {
        t3 === void 0 && (t3 = {}), t3.from = o2;
        for (var i4, u3 = function(n4, e5) {
          var t4;
          if (typeof Symbol == "undefined" || n4[Symbol.iterator] == null) {
            if (Array.isArray(n4) || (t4 = function(n5, e6) {
              if (n5) {
                if (typeof n5 == "string")
                  return r2(n5, void 0);
                var t5 = Object.prototype.toString.call(n5).slice(8, -1);
                return t5 === "Object" && n5.constructor && (t5 = n5.constructor.name), t5 === "Map" || t5 === "Set" ? Array.from(n5) : t5 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t5) ? r2(n5, void 0) : void 0;
              }
            }(n4))) {
              t4 && (n4 = t4);
              var o3 = 0;
              return function() {
                return o3 >= n4.length ? { done: true } : { done: false, value: n4[o3++] };
              };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          return (t4 = n4[Symbol.iterator]()).next.bind(t4);
        }(f4.FCL_REGISTRY[o2].subs); !(i4 = u3()).done; )
          a2(i4.value, n3, e4, t3);
      }, subscribe: function(n3) {
        return n3 != null && f4.FCL_REGISTRY[o2].subs.add(n3);
      }, unsubscribe: function(n3) {
        return n3 != null && f4.FCL_REGISTRY[o2].subs.delete(n3);
      }, subscriberCount: function() {
        return f4.FCL_REGISTRY[o2].subs.size;
      }, hasSubs: function() {
        return !!f4.FCL_REGISTRY[o2].subs.size;
      }, put: function(n3, e4) {
        n3 != null && (f4.FCL_REGISTRY[o2].kvs[n3] = e4);
      }, get: function(n3, e4) {
        var t3 = f4.FCL_REGISTRY[o2].kvs[n3];
        return t3 == null ? e4 : t3;
      }, delete: function(n3) {
        delete f4.FCL_REGISTRY[o2].kvs[n3];
      }, update: function(n3, e4) {
        n3 != null && (f4.FCL_REGISTRY[o2].kvs[n3] = e4(f4.FCL_REGISTRY[o2].kvs[n3]));
      }, keys: function() {
        return Object.keys(f4.FCL_REGISTRY[o2].kvs);
      }, all: function() {
        return f4.FCL_REGISTRY[o2].kvs;
      }, where: function(n3) {
        return Object.keys(f4.FCL_REGISTRY[o2].kvs).reduce(function(e4, r3) {
          var i4;
          return n3.test(r3) ? t2({}, e4, ((i4 = {})[r3] = f4.FCL_REGISTRY[o2].kvs[r3], i4)) : e4;
        }, {});
      }, merge: function(n3) {
        n3 === void 0 && (n3 = {}), Object.keys(n3).forEach(function(e4) {
          return f4.FCL_REGISTRY[o2].kvs[e4] = n3[e4];
        });
      } };
      return typeof n2 == "object" && ((v2 = n2) === void 0 && (v2 = {}), n2 = function(n3) {
        try {
          var e4 = function() {
            var e5 = c2(function() {
              return 1;
            }, void 0, function() {
              return Promise.resolve(n3.receive()).then(function(e6) {
                var t4 = function(t5, r3) {
                  try {
                    var o3 = function(t6, r4) {
                      try {
                        var o4 = function() {
                          function t7() {
                            return Promise.resolve(v2[e6.tag](n3, e6, e6.data || {})).then(function() {
                            });
                          }
                          var r5 = function() {
                            if (e6.tag === "EXIT") {
                              var t8 = function() {
                                if (typeof v2.TERMINATE == "function")
                                  return Promise.resolve(v2.TERMINATE(n3, e6, e6.data || {})).then(function() {
                                  });
                              }();
                              if (t8 && t8.then)
                                return t8.then(function() {
                                });
                            }
                          }();
                          return r5 && r5.then ? r5.then(t7) : t7();
                        }();
                      } catch (n4) {
                        return r4(n4);
                      }
                      return o4 && o4.then ? o4.then(void 0, r4) : o4;
                    }(0, function(t6) {
                      console.error(n3.self() + " Error", e6, t6);
                    });
                  } catch (n4) {
                    return;
                  }
                  return o3 && o3.then ? o3.then(r3.bind(null, false), r3.bind(null, true)) : void 0;
                }(0, function(n4, e7) {
                });
                if (t4 && t4.then)
                  return t4.then(function() {
                  });
              });
            });
            return e5 && e5.then ? e5.then(function() {
            }) : void 0;
          }, t3 = function() {
            if (typeof v2.INIT == "function")
              return Promise.resolve(v2.INIT(n3)).then(function() {
              });
          }();
          return Promise.resolve(t3 && t3.then ? t3.then(e4) : e4());
        } catch (n4) {
          return Promise.reject(n4);
        }
      }), e3(function() {
        try {
          return Promise.resolve(n2(h2)).then(function() {
            l(o2);
          });
        } catch (n3) {
          return Promise.reject(n3);
        }
      }), o2;
    };
    exports2.EXIT = "EXIT", exports2.INIT = "INIT", exports2.SNAPSHOT = "SNAPSHOT", exports2.SUBSCRIBE = "SUBSCRIBE", exports2.TERMINATE = "TERMINATE", exports2.UNSUBSCRIBE = "UNSUBSCRIBE", exports2.UPDATED = "UPDATED", exports2.kill = l, exports2.send = a2, exports2.snapshoter = function(n2, e4) {
      return e4(n2), a2(n2, "SNAPSHOT", null, { expectReply: true, timeout: 0 });
    }, exports2.spawn = v, exports2.subscriber = function(n2, e4, t3) {
      e4(n2);
      var r3 = v(function(e5) {
        try {
          var r4;
          return e5.send(n2, "SUBSCRIBE"), Promise.resolve(c2(function() {
            return !r4 && 1;
          }, void 0, function() {
            return Promise.resolve(e5.receive()).then(function(o2) {
              if (o2.tag === "@EXIT")
                return e5.send(n2, "UNSUBSCRIBE"), void (r4 = 1);
              t3(o2.data);
            });
          }));
        } catch (n3) {
          return Promise.reject(n3);
        }
      });
      return function() {
        return a2(r3, "@EXIT");
      };
    };
  }
});

// node_modules/@onflow/protobuf/dist/index.js
var require_dist = __commonJS({
  "node_modules/@onflow/protobuf/dist/index.js"(exports, module) {
    init_shims();
    module.exports = function(e3) {
      var t2 = {};
      function o(r2) {
        if (t2[r2])
          return t2[r2].exports;
        var s3 = t2[r2] = { i: r2, l: false, exports: {} };
        return e3[r2].call(s3.exports, s3, s3.exports, o), s3.l = true, s3.exports;
      }
      return o.m = e3, o.c = t2, o.d = function(e4, t3, r2) {
        o.o(e4, t3) || Object.defineProperty(e4, t3, { enumerable: true, get: r2 });
      }, o.r = function(e4) {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e4, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e4, "__esModule", { value: true });
      }, o.t = function(e4, t3) {
        if (1 & t3 && (e4 = o(e4)), 8 & t3)
          return e4;
        if (4 & t3 && typeof e4 == "object" && e4 && e4.__esModule)
          return e4;
        var r2 = Object.create(null);
        if (o.r(r2), Object.defineProperty(r2, "default", { enumerable: true, value: e4 }), 2 & t3 && typeof e4 != "string")
          for (var s3 in e4)
            o.d(r2, s3, function(t4) {
              return e4[t4];
            }.bind(null, s3));
        return r2;
      }, o.n = function(e4) {
        var t3 = e4 && e4.__esModule ? function() {
          return e4.default;
        } : function() {
          return e4;
        };
        return o.d(t3, "a", t3), t3;
      }, o.o = function(e4, t3) {
        return Object.prototype.hasOwnProperty.call(e4, t3);
      }, o.p = "", o(o.s = 21);
    }([function(module, exports) {
      var $jscomp = $jscomp || {};
      $jscomp.scope = {}, $jscomp.findInternal = function(e3, t2, o) {
        e3 instanceof String && (e3 = String(e3));
        for (var r2 = e3.length, s3 = 0; s3 < r2; s3++) {
          var n = e3[s3];
          if (t2.call(o, n, s3, e3))
            return { i: s3, v: n };
        }
        return { i: -1, v: void 0 };
      }, $jscomp.ASSUME_ES5 = false, $jscomp.ASSUME_NO_NATIVE_MAP = false, $jscomp.ASSUME_NO_NATIVE_SET = false, $jscomp.SIMPLE_FROUND_POLYFILL = false, $jscomp.defineProperty = $jscomp.ASSUME_ES5 || typeof Object.defineProperties == "function" ? Object.defineProperty : function(e3, t2, o) {
        e3 != Array.prototype && e3 != Object.prototype && (e3[t2] = o.value);
      }, $jscomp.getGlobal = function(e3) {
        return typeof window != "undefined" && window === e3 ? e3 : typeof global != "undefined" && global != null ? global : e3;
      }, $jscomp.global = $jscomp.getGlobal(this), $jscomp.polyfill = function(e3, t2, o, r2) {
        if (t2) {
          for (o = $jscomp.global, e3 = e3.split("."), r2 = 0; r2 < e3.length - 1; r2++) {
            var s3 = e3[r2];
            s3 in o || (o[s3] = {}), o = o[s3];
          }
          (t2 = t2(r2 = o[e3 = e3[e3.length - 1]])) != r2 && t2 != null && $jscomp.defineProperty(o, e3, { configurable: true, writable: true, value: t2 });
        }
      }, $jscomp.polyfill("Array.prototype.findIndex", function(e3) {
        return e3 || function(e4, t2) {
          return $jscomp.findInternal(this, e4, t2).i;
        };
      }, "es6", "es3"), $jscomp.checkStringArgs = function(e3, t2, o) {
        if (e3 == null)
          throw new TypeError("The 'this' value for String.prototype." + o + " must not be null or undefined");
        if (t2 instanceof RegExp)
          throw new TypeError("First argument to String.prototype." + o + " must not be a regular expression");
        return e3 + "";
      }, $jscomp.polyfill("String.prototype.endsWith", function(e3) {
        return e3 || function(e4, t2) {
          var o = $jscomp.checkStringArgs(this, e4, "endsWith");
          e4 += "", t2 === void 0 && (t2 = o.length), t2 = Math.max(0, Math.min(0 | t2, o.length));
          for (var r2 = e4.length; 0 < r2 && 0 < t2; )
            if (o[--t2] != e4[--r2])
              return false;
          return 0 >= r2;
        };
      }, "es6", "es3"), $jscomp.polyfill("Array.prototype.find", function(e3) {
        return e3 || function(e4, t2) {
          return $jscomp.findInternal(this, e4, t2).v;
        };
      }, "es6", "es3"), $jscomp.polyfill("String.prototype.startsWith", function(e3) {
        return e3 || function(e4, t2) {
          var o = $jscomp.checkStringArgs(this, e4, "startsWith");
          e4 += "";
          var r2 = o.length, s3 = e4.length;
          t2 = Math.max(0, Math.min(0 | t2, o.length));
          for (var n = 0; n < s3 && t2 < r2; )
            if (o[t2++] != e4[n++])
              return false;
          return n >= s3;
        };
      }, "es6", "es3"), $jscomp.polyfill("String.prototype.repeat", function(e3) {
        return e3 || function(e4) {
          var t2 = $jscomp.checkStringArgs(this, null, "repeat");
          if (0 > e4 || 1342177279 < e4)
            throw new RangeError("Invalid count value");
          e4 |= 0;
          for (var o = ""; e4; )
            1 & e4 && (o += t2), (e4 >>>= 1) && (t2 += t2);
          return o;
        };
      }, "es6", "es3");
      var COMPILED = true, goog = goog || {};
      goog.global = this || self, goog.isDef = function(e3) {
        return e3 !== void 0;
      }, goog.isString = function(e3) {
        return typeof e3 == "string";
      }, goog.isBoolean = function(e3) {
        return typeof e3 == "boolean";
      }, goog.isNumber = function(e3) {
        return typeof e3 == "number";
      }, goog.exportPath_ = function(e3, t2, o) {
        e3 = e3.split("."), o = o || goog.global, e3[0] in o || o.execScript === void 0 || o.execScript("var " + e3[0]);
        for (var r2; e3.length && (r2 = e3.shift()); )
          !e3.length && goog.isDef(t2) ? o[r2] = t2 : o = o[r2] && o[r2] !== Object.prototype[r2] ? o[r2] : o[r2] = {};
      }, goog.define = function(e3, t2) {
        if (!COMPILED) {
          var o = goog.global.CLOSURE_UNCOMPILED_DEFINES, r2 = goog.global.CLOSURE_DEFINES;
          o && o.nodeType === void 0 && Object.prototype.hasOwnProperty.call(o, e3) ? t2 = o[e3] : r2 && r2.nodeType === void 0 && Object.prototype.hasOwnProperty.call(r2, e3) && (t2 = r2[e3]);
        }
        return t2;
      }, goog.FEATURESET_YEAR = 2012, goog.DEBUG = true, goog.LOCALE = "en", goog.TRUSTED_SITE = true, goog.STRICT_MODE_COMPATIBLE = false, goog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG, goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = false, goog.provide = function(e3) {
        if (goog.isInModuleLoader_())
          throw Error("goog.provide cannot be used within a module.");
        if (!COMPILED && goog.isProvided_(e3))
          throw Error('Namespace "' + e3 + '" already declared.');
        goog.constructNamespace_(e3);
      }, goog.constructNamespace_ = function(e3, t2) {
        if (!COMPILED) {
          delete goog.implicitNamespaces_[e3];
          for (var o = e3; (o = o.substring(0, o.lastIndexOf("."))) && !goog.getObjectByName(o); )
            goog.implicitNamespaces_[o] = true;
        }
        goog.exportPath_(e3, t2);
      }, goog.getScriptNonce = function(e3) {
        return e3 && e3 != goog.global ? goog.getScriptNonce_(e3.document) : (goog.cspNonce_ === null && (goog.cspNonce_ = goog.getScriptNonce_(goog.global.document)), goog.cspNonce_);
      }, goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/, goog.cspNonce_ = null, goog.getScriptNonce_ = function(e3) {
        return (e3 = e3.querySelector && e3.querySelector("script[nonce]")) && (e3 = e3.nonce || e3.getAttribute("nonce")) && goog.NONCE_PATTERN_.test(e3) ? e3 : "";
      }, goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/, goog.module = function(e3) {
        if (!goog.isString(e3) || !e3 || e3.search(goog.VALID_MODULE_RE_) == -1)
          throw Error("Invalid module identifier");
        if (!goog.isInGoogModuleLoader_())
          throw Error("Module " + e3 + " has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
        if (goog.moduleLoaderState_.moduleName)
          throw Error("goog.module may only be called once per module.");
        if (goog.moduleLoaderState_.moduleName = e3, !COMPILED) {
          if (goog.isProvided_(e3))
            throw Error('Namespace "' + e3 + '" already declared.');
          delete goog.implicitNamespaces_[e3];
        }
      }, goog.module.get = function(e3) {
        return goog.module.getInternal_(e3);
      }, goog.module.getInternal_ = function(e3) {
        if (!COMPILED) {
          if (e3 in goog.loadedModules_)
            return goog.loadedModules_[e3].exports;
          if (!goog.implicitNamespaces_[e3])
            return (e3 = goog.getObjectByName(e3)) != null ? e3 : null;
        }
        return null;
      }, goog.ModuleType = { ES6: "es6", GOOG: "goog" }, goog.moduleLoaderState_ = null, goog.isInModuleLoader_ = function() {
        return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();
      }, goog.isInGoogModuleLoader_ = function() {
        return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;
      }, goog.isInEs6ModuleLoader_ = function() {
        if (goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6)
          return true;
        var e3 = goog.global.$jscomp;
        return !!e3 && (typeof e3.getCurrentModulePath == "function" && !!e3.getCurrentModulePath());
      }, goog.module.declareLegacyNamespace = function() {
        if (!COMPILED && !goog.isInGoogModuleLoader_())
          throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");
        if (!COMPILED && !goog.moduleLoaderState_.moduleName)
          throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");
        goog.moduleLoaderState_.declareLegacyNamespace = true;
      }, goog.declareModuleId = function(e3) {
        if (!COMPILED) {
          if (!goog.isInEs6ModuleLoader_())
            throw Error("goog.declareModuleId may only be called from within an ES6 module");
          if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName)
            throw Error("goog.declareModuleId may only be called once per module.");
          if (e3 in goog.loadedModules_)
            throw Error('Module with namespace "' + e3 + '" already exists.');
        }
        if (goog.moduleLoaderState_)
          goog.moduleLoaderState_.moduleName = e3;
        else {
          var t2 = goog.global.$jscomp;
          if (!t2 || typeof t2.getCurrentModulePath != "function")
            throw Error('Module with namespace "' + e3 + '" has been loaded incorrectly.');
          t2 = t2.require(t2.getCurrentModulePath()), goog.loadedModules_[e3] = { exports: t2, type: goog.ModuleType.ES6, moduleId: e3 };
        }
      }, goog.setTestOnly = function(e3) {
        if (goog.DISALLOW_TEST_ONLY_CODE)
          throw e3 = e3 || "", Error("Importing test-only code into non-debug environment" + (e3 ? ": " + e3 : "."));
      }, goog.forwardDeclare = function(e3) {
      }, COMPILED || (goog.isProvided_ = function(e3) {
        return e3 in goog.loadedModules_ || !goog.implicitNamespaces_[e3] && goog.isDefAndNotNull(goog.getObjectByName(e3));
      }, goog.implicitNamespaces_ = { "goog.module": true }), goog.getObjectByName = function(e3, t2) {
        e3 = e3.split("."), t2 = t2 || goog.global;
        for (var o = 0; o < e3.length; o++)
          if (t2 = t2[e3[o]], !goog.isDefAndNotNull(t2))
            return null;
        return t2;
      }, goog.globalize = function(e3, t2) {
        for (var o in t2 = t2 || goog.global, e3)
          t2[o] = e3[o];
      }, goog.addDependency = function(e3, t2, o, r2) {
        !COMPILED && goog.DEPENDENCIES_ENABLED && goog.debugLoader_.addDependency(e3, t2, o, r2);
      }, goog.ENABLE_DEBUG_LOADER = true, goog.logToConsole_ = function(e3) {
        goog.global.console && goog.global.console.error(e3);
      }, goog.require = function(e3) {
        if (!COMPILED) {
          if (goog.ENABLE_DEBUG_LOADER && goog.debugLoader_.requested(e3), goog.isProvided_(e3)) {
            if (goog.isInModuleLoader_())
              return goog.module.getInternal_(e3);
          } else if (goog.ENABLE_DEBUG_LOADER) {
            var t2 = goog.moduleLoaderState_;
            goog.moduleLoaderState_ = null;
            try {
              goog.debugLoader_.load_(e3);
            } finally {
              goog.moduleLoaderState_ = t2;
            }
          }
          return null;
        }
      }, goog.requireType = function(e3) {
        return {};
      }, goog.basePath = "", goog.nullFunction = function() {
      }, goog.abstractMethod = function() {
        throw Error("unimplemented abstract method");
      }, goog.addSingletonGetter = function(e3) {
        e3.instance_ = void 0, e3.getInstance = function() {
          return e3.instance_ ? e3.instance_ : (goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = e3), e3.instance_ = new e3());
        };
      }, goog.instantiatedSingletons_ = [], goog.LOAD_MODULE_USING_EVAL = true, goog.SEAL_MODULE_EXPORTS = goog.DEBUG, goog.loadedModules_ = {}, goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER, goog.TRANSPILE = "detect", goog.ASSUME_ES_MODULES_TRANSPILED = false, goog.TRANSPILE_TO_LANGUAGE = "", goog.TRANSPILER = "transpile.js", goog.hasBadLetScoping = null, goog.useSafari10Workaround = function() {
        if (goog.hasBadLetScoping == null) {
          try {
            var a = !eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";');
          } catch (e3) {
            a = false;
          }
          goog.hasBadLetScoping = a;
        }
        return goog.hasBadLetScoping;
      }, goog.workaroundSafari10EvalBug = function(e3) {
        return "(function(){" + e3 + "\n;})();\n";
      }, goog.loadModule = function(e3) {
        var t2 = goog.moduleLoaderState_;
        try {
          if (goog.moduleLoaderState_ = { moduleName: "", declareLegacyNamespace: false, type: goog.ModuleType.GOOG }, goog.isFunction(e3))
            var o = e3.call(void 0, {});
          else {
            if (!goog.isString(e3))
              throw Error("Invalid module definition");
            goog.useSafari10Workaround() && (e3 = goog.workaroundSafari10EvalBug(e3)), o = goog.loadModuleFromSource_.call(void 0, e3);
          }
          var r2 = goog.moduleLoaderState_.moduleName;
          if (!goog.isString(r2) || !r2)
            throw Error('Invalid module name "' + r2 + '"');
          goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(r2, o) : goog.SEAL_MODULE_EXPORTS && Object.seal && typeof o == "object" && o != null && Object.seal(o), goog.loadedModules_[r2] = { exports: o, type: goog.ModuleType.GOOG, moduleId: goog.moduleLoaderState_.moduleName };
        } finally {
          goog.moduleLoaderState_ = t2;
        }
      }, goog.loadModuleFromSource_ = function(a) {
        return eval(a), {};
      }, goog.normalizePath_ = function(e3) {
        e3 = e3.split("/");
        for (var t2 = 0; t2 < e3.length; )
          e3[t2] == "." ? e3.splice(t2, 1) : t2 && e3[t2] == ".." && e3[t2 - 1] && e3[t2 - 1] != ".." ? e3.splice(--t2, 2) : t2++;
        return e3.join("/");
      }, goog.loadFileSync_ = function(e3) {
        if (goog.global.CLOSURE_LOAD_FILE_SYNC)
          return goog.global.CLOSURE_LOAD_FILE_SYNC(e3);
        try {
          var t2 = new goog.global.XMLHttpRequest();
          return t2.open("get", e3, false), t2.send(), t2.status == 0 || t2.status == 200 ? t2.responseText : null;
        } catch (e4) {
          return null;
        }
      }, goog.transpile_ = function(e3, t2, o) {
        var r2 = goog.global.$jscomp;
        r2 || (goog.global.$jscomp = r2 = {});
        var s3 = r2.transpile;
        if (!s3) {
          var n = goog.basePath + goog.TRANSPILER, i2 = goog.loadFileSync_(n);
          if (i2) {
            if (function() {
              (0, eval)(i2 + "\n//# sourceURL=" + n);
            }.call(goog.global), goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile)
              throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));
            goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile, s3 = (r2 = goog.global.$jscomp).transpile;
          }
        }
        return s3 || (s3 = r2.transpile = function(e4, t3) {
          return goog.logToConsole_(t3 + " requires transpilation but no transpiler was found."), e4;
        }), s3(e3, t2, o);
      }, goog.typeOf = function(e3) {
        var t2 = typeof e3;
        if (t2 == "object") {
          if (!e3)
            return "null";
          if (e3 instanceof Array)
            return "array";
          if (e3 instanceof Object)
            return t2;
          var o = Object.prototype.toString.call(e3);
          if (o == "[object Window]")
            return "object";
          if (o == "[object Array]" || typeof e3.length == "number" && e3.splice !== void 0 && e3.propertyIsEnumerable !== void 0 && !e3.propertyIsEnumerable("splice"))
            return "array";
          if (o == "[object Function]" || e3.call !== void 0 && e3.propertyIsEnumerable !== void 0 && !e3.propertyIsEnumerable("call"))
            return "function";
        } else if (t2 == "function" && e3.call === void 0)
          return "object";
        return t2;
      }, goog.isNull = function(e3) {
        return e3 === null;
      }, goog.isDefAndNotNull = function(e3) {
        return e3 != null;
      }, goog.isArray = function(e3) {
        return goog.typeOf(e3) == "array";
      }, goog.isArrayLike = function(e3) {
        var t2 = goog.typeOf(e3);
        return t2 == "array" || t2 == "object" && typeof e3.length == "number";
      }, goog.isDateLike = function(e3) {
        return goog.isObject(e3) && typeof e3.getFullYear == "function";
      }, goog.isFunction = function(e3) {
        return goog.typeOf(e3) == "function";
      }, goog.isObject = function(e3) {
        var t2 = typeof e3;
        return t2 == "object" && e3 != null || t2 == "function";
      }, goog.getUid = function(e3) {
        return e3[goog.UID_PROPERTY_] || (e3[goog.UID_PROPERTY_] = ++goog.uidCounter_);
      }, goog.hasUid = function(e3) {
        return !!e3[goog.UID_PROPERTY_];
      }, goog.removeUid = function(e3) {
        e3 !== null && "removeAttribute" in e3 && e3.removeAttribute(goog.UID_PROPERTY_);
        try {
          delete e3[goog.UID_PROPERTY_];
        } catch (e4) {
        }
      }, goog.UID_PROPERTY_ = "closure_uid_" + (1e9 * Math.random() >>> 0), goog.uidCounter_ = 0, goog.getHashCode = goog.getUid, goog.removeHashCode = goog.removeUid, goog.cloneObject = function(e3) {
        var t2 = goog.typeOf(e3);
        if (t2 == "object" || t2 == "array") {
          if (typeof e3.clone == "function")
            return e3.clone();
          for (var o in t2 = t2 == "array" ? [] : {}, e3)
            t2[o] = goog.cloneObject(e3[o]);
          return t2;
        }
        return e3;
      }, goog.bindNative_ = function(e3, t2, o) {
        return e3.call.apply(e3.bind, arguments);
      }, goog.bindJs_ = function(e3, t2, o) {
        if (!e3)
          throw Error();
        if (2 < arguments.length) {
          var r2 = Array.prototype.slice.call(arguments, 2);
          return function() {
            var o2 = Array.prototype.slice.call(arguments);
            return Array.prototype.unshift.apply(o2, r2), e3.apply(t2, o2);
          };
        }
        return function() {
          return e3.apply(t2, arguments);
        };
      }, goog.bind = function(e3, t2, o) {
        return Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1 ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_, goog.bind.apply(null, arguments);
      }, goog.partial = function(e3, t2) {
        var o = Array.prototype.slice.call(arguments, 1);
        return function() {
          var t3 = o.slice();
          return t3.push.apply(t3, arguments), e3.apply(this, t3);
        };
      }, goog.mixin = function(e3, t2) {
        for (var o in t2)
          e3[o] = t2[o];
      }, goog.now = goog.TRUSTED_SITE && Date.now || function() {
        return +new Date();
      }, goog.globalEval = function(e3) {
        if (goog.global.execScript)
          goog.global.execScript(e3, "JavaScript");
        else {
          if (!goog.global.eval)
            throw Error("goog.globalEval not available");
          if (goog.evalWorksForGlobals_ == null) {
            try {
              goog.global.eval("var _evalTest_ = 1;");
            } catch (e4) {
            }
            if (goog.global._evalTest_ !== void 0) {
              try {
                delete goog.global._evalTest_;
              } catch (e4) {
              }
              goog.evalWorksForGlobals_ = true;
            } else
              goog.evalWorksForGlobals_ = false;
          }
          if (goog.evalWorksForGlobals_)
            goog.global.eval(e3);
          else {
            var t2 = goog.global.document, o = t2.createElement("SCRIPT");
            o.type = "text/javascript", o.defer = false, o.appendChild(t2.createTextNode(e3)), t2.head.appendChild(o), t2.head.removeChild(o);
          }
        }
      }, goog.evalWorksForGlobals_ = null, goog.getCssName = function(e3, t2) {
        if (String(e3).charAt(0) == ".")
          throw Error('className passed in goog.getCssName must not start with ".". You passed: ' + e3);
        var o = function(e4) {
          return goog.cssNameMapping_[e4] || e4;
        }, r2 = function(e4) {
          e4 = e4.split("-");
          for (var t3 = [], r3 = 0; r3 < e4.length; r3++)
            t3.push(o(e4[r3]));
          return t3.join("-");
        };
        return r2 = goog.cssNameMapping_ ? goog.cssNameMappingStyle_ == "BY_WHOLE" ? o : r2 : function(e4) {
          return e4;
        }, e3 = t2 ? e3 + "-" + r2(t2) : r2(e3), goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(e3) : e3;
      }, goog.setCssNameMapping = function(e3, t2) {
        goog.cssNameMapping_ = e3, goog.cssNameMappingStyle_ = t2;
      }, !COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING), goog.getMsg = function(e3, t2, o) {
        return o && o.html && (e3 = e3.replace(/</g, "&lt;")), t2 && (e3 = e3.replace(/\{\$([^}]+)}/g, function(e4, o2) {
          return t2 != null && o2 in t2 ? t2[o2] : e4;
        })), e3;
      }, goog.getMsgWithFallback = function(e3, t2) {
        return e3;
      }, goog.exportSymbol = function(e3, t2, o) {
        goog.exportPath_(e3, t2, o);
      }, goog.exportProperty = function(e3, t2, o) {
        e3[t2] = o;
      }, goog.inherits = function(e3, t2) {
        function o() {
        }
        o.prototype = t2.prototype, e3.superClass_ = t2.prototype, e3.prototype = new o(), e3.prototype.constructor = e3, e3.base = function(e4, o2, r2) {
          for (var s3 = Array(arguments.length - 2), n = 2; n < arguments.length; n++)
            s3[n - 2] = arguments[n];
          return t2.prototype[o2].apply(e4, s3);
        };
      }, goog.base = function(e3, t2, o) {
        var r2 = arguments.callee.caller;
        if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !r2)
          throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");
        if (r2.superClass_ !== void 0) {
          for (var s3 = Array(arguments.length - 1), n = 1; n < arguments.length; n++)
            s3[n - 1] = arguments[n];
          return r2.superClass_.constructor.apply(e3, s3);
        }
        if (typeof t2 != "string" && typeof t2 != "symbol")
          throw Error("method names provided to goog.base must be a string or a symbol");
        for (s3 = Array(arguments.length - 2), n = 2; n < arguments.length; n++)
          s3[n - 2] = arguments[n];
        n = false;
        for (var i2 = e3.constructor.prototype; i2; i2 = Object.getPrototypeOf(i2))
          if (i2[t2] === r2)
            n = true;
          else if (n)
            return i2[t2].apply(e3, s3);
        if (e3[t2] === r2)
          return e3.constructor.prototype[t2].apply(e3, s3);
        throw Error("goog.base called from a method of one name to a method of a different name");
      }, goog.scope = function(e3) {
        if (goog.isInModuleLoader_())
          throw Error("goog.scope is not supported within a module.");
        e3.call(goog.global);
      }, COMPILED || (goog.global.COMPILED = COMPILED), goog.defineClass = function(e3, t2) {
        var o = t2.constructor, r2 = t2.statics;
        return o && o != Object.prototype.constructor || (o = function() {
          throw Error("cannot instantiate an interface (no constructor defined).");
        }), o = goog.defineClass.createSealingConstructor_(o, e3), e3 && goog.inherits(o, e3), delete t2.constructor, delete t2.statics, goog.defineClass.applyProperties_(o.prototype, t2), r2 != null && (r2 instanceof Function ? r2(o) : goog.defineClass.applyProperties_(o, r2)), o;
      }, goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG, goog.defineClass.createSealingConstructor_ = function(e3, t2) {
        if (!goog.defineClass.SEAL_CLASS_INSTANCES)
          return e3;
        var o = !goog.defineClass.isUnsealable_(t2), r2 = function() {
          var t3 = e3.apply(this, arguments) || this;
          return t3[goog.UID_PROPERTY_] = t3[goog.UID_PROPERTY_], this.constructor === r2 && o && Object.seal instanceof Function && Object.seal(t3), t3;
        };
        return r2;
      }, goog.defineClass.isUnsealable_ = function(e3) {
        return e3 && e3.prototype && e3.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
      }, goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "), goog.defineClass.applyProperties_ = function(e3, t2) {
        for (var o in t2)
          Object.prototype.hasOwnProperty.call(t2, o) && (e3[o] = t2[o]);
        for (var r2 = 0; r2 < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; r2++)
          o = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[r2], Object.prototype.hasOwnProperty.call(t2, o) && (e3[o] = t2[o]);
      }, goog.tagUnsealableClass = function(e3) {
        !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (e3.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true);
      }, goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable", !COMPILED && goog.DEPENDENCIES_ENABLED && (goog.inHtmlDocument_ = function() {
        var e3 = goog.global.document;
        return e3 != null && "write" in e3;
      }, goog.isDocumentLoading_ = function() {
        var e3 = goog.global.document;
        return e3.attachEvent ? e3.readyState != "complete" : e3.readyState == "loading";
      }, goog.findBasePath_ = function() {
        if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH))
          goog.basePath = goog.global.CLOSURE_BASE_PATH;
        else if (goog.inHtmlDocument_()) {
          var e3 = goog.global.document, t2 = e3.currentScript;
          for (t2 = (e3 = t2 ? [t2] : e3.getElementsByTagName("SCRIPT")).length - 1; 0 <= t2; --t2) {
            var o = e3[t2].src, r2 = o.lastIndexOf("?");
            if (r2 = r2 == -1 ? o.length : r2, o.substr(r2 - 7, 7) == "base.js") {
              goog.basePath = o.substr(0, r2 - 7);
              break;
            }
          }
        }
      }, goog.findBasePath_(), goog.Transpiler = function() {
        this.requiresTranspilation_ = null, this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;
      }, goog.Transpiler.prototype.createRequiresTranspilation_ = function() {
        function a(t2, o) {
          e ? d[t2] = true : o() ? (c = t2, d[t2] = false) : e = d[t2] = true;
        }
        function b(a) {
          try {
            return !!eval(a);
          } catch (e3) {
            return false;
          }
        }
        var c = "es3", d = { es3: false }, e = false, f = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
        return a("es5", function() {
          return b("[1,].length==1");
        }), a("es6", function() {
          return !f.match(/Edge\/(\d+)(\.\d)*/i) && b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()');
        }), a("es7", function() {
          return b("2 ** 2 == 4");
        }), a("es8", function() {
          return b("async () => 1, true");
        }), a("es9", function() {
          return b("({...rest} = {}), true");
        }), a("es_next", function() {
          return false;
        }), { target: c, map: d };
      }, goog.Transpiler.prototype.needsTranspile = function(e3, t2) {
        if (goog.TRANSPILE == "always")
          return true;
        if (goog.TRANSPILE == "never")
          return false;
        if (!this.requiresTranspilation_) {
          var o = this.createRequiresTranspilation_();
          this.requiresTranspilation_ = o.map, this.transpilationTarget_ = this.transpilationTarget_ || o.target;
        }
        if (e3 in this.requiresTranspilation_)
          return !!this.requiresTranspilation_[e3] || !(!goog.inHtmlDocument_() || t2 != "es6" || "noModule" in goog.global.document.createElement("script"));
        throw Error("Unknown language mode: " + e3);
      }, goog.Transpiler.prototype.transpile = function(e3, t2) {
        return goog.transpile_(e3, t2, this.transpilationTarget_);
      }, goog.transpiler_ = new goog.Transpiler(), goog.protectScriptTag_ = function(e3) {
        return e3.replace(/<\/(SCRIPT)/gi, "\\x3c/$1");
      }, goog.DebugLoader_ = function() {
        this.dependencies_ = {}, this.idToPath_ = {}, this.written_ = {}, this.loadingDeps_ = [], this.depsToLoad_ = [], this.paused_ = false, this.factory_ = new goog.DependencyFactory(goog.transpiler_), this.deferredCallbacks_ = {}, this.deferredQueue_ = [];
      }, goog.DebugLoader_.prototype.bootstrap = function(e3, t2) {
        function o() {
          r2 && (goog.global.setTimeout(r2, 0), r2 = null);
        }
        var r2 = t2;
        if (e3.length) {
          t2 = [];
          for (var s3 = 0; s3 < e3.length; s3++) {
            var n = this.getPathFromDeps_(e3[s3]);
            if (!n)
              throw Error("Unregonized namespace: " + e3[s3]);
            t2.push(this.dependencies_[n]);
          }
          n = goog.require;
          var i2 = 0;
          for (s3 = 0; s3 < e3.length; s3++)
            n(e3[s3]), t2[s3].onLoad(function() {
              ++i2 == e3.length && o();
            });
        } else
          o();
      }, goog.DebugLoader_.prototype.loadClosureDeps = function() {
        this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath + "deps.js"), "deps.js", [], [], {}, false)), this.loadDeps_();
      }, goog.DebugLoader_.prototype.requested = function(e3, t2) {
        (e3 = this.getPathFromDeps_(e3)) && (t2 || this.areDepsLoaded_(this.dependencies_[e3].requires)) && (t2 = this.deferredCallbacks_[e3]) && (delete this.deferredCallbacks_[e3], t2());
      }, goog.DebugLoader_.prototype.setDependencyFactory = function(e3) {
        this.factory_ = e3;
      }, goog.DebugLoader_.prototype.load_ = function(e3) {
        if (!this.getPathFromDeps_(e3))
          throw e3 = "goog.require could not find: " + e3, goog.logToConsole_(e3), Error(e3);
        var t2 = this, o = [], r2 = function(e4) {
          var s3 = t2.getPathFromDeps_(e4);
          if (!s3)
            throw Error("Bad dependency path or symbol: " + e4);
          if (!t2.written_[s3]) {
            for (t2.written_[s3] = true, e4 = t2.dependencies_[s3], s3 = 0; s3 < e4.requires.length; s3++)
              goog.isProvided_(e4.requires[s3]) || r2(e4.requires[s3]);
            o.push(e4);
          }
        };
        r2(e3), e3 = !!this.depsToLoad_.length, this.depsToLoad_ = this.depsToLoad_.concat(o), this.paused_ || e3 || this.loadDeps_();
      }, goog.DebugLoader_.prototype.loadDeps_ = function() {
        for (var e3 = this, t2 = this.paused_; this.depsToLoad_.length && !t2; )
          !function() {
            var o = false, r2 = e3.depsToLoad_.shift(), s3 = false;
            e3.loading_(r2);
            var n = { pause: function() {
              if (o)
                throw Error("Cannot call pause after the call to load.");
              t2 = true;
            }, resume: function() {
              o ? e3.resume_() : t2 = false;
            }, loaded: function() {
              if (s3)
                throw Error("Double call to loaded.");
              s3 = true, e3.loaded_(r2);
            }, pending: function() {
              for (var t3 = [], o2 = 0; o2 < e3.loadingDeps_.length; o2++)
                t3.push(e3.loadingDeps_[o2]);
              return t3;
            }, setModuleState: function(e4) {
              goog.moduleLoaderState_ = { type: e4, moduleName: "", declareLegacyNamespace: false };
            }, registerEs6ModuleExports: function(e4, t3, o2) {
              o2 && (goog.loadedModules_[o2] = { exports: t3, type: goog.ModuleType.ES6, moduleId: o2 || "" });
            }, registerGoogModuleExports: function(e4, t3) {
              goog.loadedModules_[e4] = { exports: t3, type: goog.ModuleType.GOOG, moduleId: e4 };
            }, clearModuleState: function() {
              goog.moduleLoaderState_ = null;
            }, defer: function(t3) {
              if (o)
                throw Error("Cannot register with defer after the call to load.");
              e3.defer_(r2, t3);
            }, areDepsLoaded: function() {
              return e3.areDepsLoaded_(r2.requires);
            } };
            try {
              r2.load(n);
            } finally {
              o = true;
            }
          }();
        t2 && this.pause_();
      }, goog.DebugLoader_.prototype.pause_ = function() {
        this.paused_ = true;
      }, goog.DebugLoader_.prototype.resume_ = function() {
        this.paused_ && (this.paused_ = false, this.loadDeps_());
      }, goog.DebugLoader_.prototype.loading_ = function(e3) {
        this.loadingDeps_.push(e3);
      }, goog.DebugLoader_.prototype.loaded_ = function(e3) {
        for (var t2 = 0; t2 < this.loadingDeps_.length; t2++)
          if (this.loadingDeps_[t2] == e3) {
            this.loadingDeps_.splice(t2, 1);
            break;
          }
        for (t2 = 0; t2 < this.deferredQueue_.length; t2++)
          if (this.deferredQueue_[t2] == e3.path) {
            this.deferredQueue_.splice(t2, 1);
            break;
          }
        if (this.loadingDeps_.length == this.deferredQueue_.length && !this.depsToLoad_.length)
          for (; this.deferredQueue_.length; )
            this.requested(this.deferredQueue_.shift(), true);
        e3.loaded();
      }, goog.DebugLoader_.prototype.areDepsLoaded_ = function(e3) {
        for (var t2 = 0; t2 < e3.length; t2++) {
          var o = this.getPathFromDeps_(e3[t2]);
          if (!o || !(o in this.deferredCallbacks_) && !goog.isProvided_(e3[t2]))
            return false;
        }
        return true;
      }, goog.DebugLoader_.prototype.getPathFromDeps_ = function(e3) {
        return e3 in this.idToPath_ ? this.idToPath_[e3] : e3 in this.dependencies_ ? e3 : null;
      }, goog.DebugLoader_.prototype.defer_ = function(e3, t2) {
        this.deferredCallbacks_[e3.path] = t2, this.deferredQueue_.push(e3.path);
      }, goog.LoadController = function() {
      }, goog.LoadController.prototype.pause = function() {
      }, goog.LoadController.prototype.resume = function() {
      }, goog.LoadController.prototype.loaded = function() {
      }, goog.LoadController.prototype.pending = function() {
      }, goog.LoadController.prototype.registerEs6ModuleExports = function(e3, t2, o) {
      }, goog.LoadController.prototype.setModuleState = function(e3) {
      }, goog.LoadController.prototype.clearModuleState = function() {
      }, goog.LoadController.prototype.defer = function(e3) {
      }, goog.LoadController.prototype.areDepsLoaded = function() {
      }, goog.Dependency = function(e3, t2, o, r2, s3) {
        this.path = e3, this.relativePath = t2, this.provides = o, this.requires = r2, this.loadFlags = s3, this.loaded_ = false, this.loadCallbacks_ = [];
      }, goog.Dependency.prototype.getPathName = function() {
        var e3 = this.path, t2 = e3.indexOf("://");
        return 0 <= t2 && (0 <= (t2 = (e3 = e3.substring(t2 + 3)).indexOf("/")) && (e3 = e3.substring(t2 + 1))), e3;
      }, goog.Dependency.prototype.onLoad = function(e3) {
        this.loaded_ ? e3() : this.loadCallbacks_.push(e3);
      }, goog.Dependency.prototype.loaded = function() {
        this.loaded_ = true;
        var e3 = this.loadCallbacks_;
        this.loadCallbacks_ = [];
        for (var t2 = 0; t2 < e3.length; t2++)
          e3[t2]();
      }, goog.Dependency.defer_ = false, goog.Dependency.callbackMap_ = {}, goog.Dependency.registerCallback_ = function(e3) {
        var t2 = Math.random().toString(32);
        return goog.Dependency.callbackMap_[t2] = e3, t2;
      }, goog.Dependency.unregisterCallback_ = function(e3) {
        delete goog.Dependency.callbackMap_[e3];
      }, goog.Dependency.callback_ = function(e3, t2) {
        if (!(e3 in goog.Dependency.callbackMap_))
          throw Error("Callback key " + e3 + " does not exist (was base.js loaded more than once?).");
        for (var o = goog.Dependency.callbackMap_[e3], r2 = [], s3 = 1; s3 < arguments.length; s3++)
          r2.push(arguments[s3]);
        o.apply(void 0, r2);
      }, goog.Dependency.prototype.load = function(e3) {
        if (goog.global.CLOSURE_IMPORT_SCRIPT)
          goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? e3.loaded() : e3.pause();
        else if (goog.inHtmlDocument_()) {
          var t2 = goog.global.document;
          if (t2.readyState == "complete" && !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            if (/\bdeps.js$/.test(this.path))
              return void e3.loaded();
            throw Error('Cannot write "' + this.path + '" after document load');
          }
          if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && goog.isDocumentLoading_()) {
            var o = goog.Dependency.registerCallback_(function(t3) {
              goog.DebugLoader_.IS_OLD_IE_ && t3.readyState != "complete" || (goog.Dependency.unregisterCallback_(o), e3.loaded());
            }), r2 = !goog.DebugLoader_.IS_OLD_IE_ && goog.getScriptNonce() ? ' nonce="' + goog.getScriptNonce() + '"' : "";
            r2 = '<script src="' + this.path + '" ' + (goog.DebugLoader_.IS_OLD_IE_ ? "onreadystatechange" : "onload") + `="goog.Dependency.callback_('` + o + `', this)" type="text/javascript" ` + (goog.Dependency.defer_ ? "defer" : "") + r2 + "><\/script>", t2.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(r2) : r2);
          } else {
            var s3 = t2.createElement("script");
            s3.defer = goog.Dependency.defer_, s3.async = false, s3.type = "text/javascript", (r2 = goog.getScriptNonce()) && s3.setAttribute("nonce", r2), goog.DebugLoader_.IS_OLD_IE_ ? (e3.pause(), s3.onreadystatechange = function() {
              s3.readyState != "loaded" && s3.readyState != "complete" || (e3.loaded(), e3.resume());
            }) : s3.onload = function() {
              s3.onload = null, e3.loaded();
            }, s3.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) : this.path, t2.head.appendChild(s3);
          }
        } else
          goog.logToConsole_("Cannot use default debug loader outside of HTML documents."), this.relativePath == "deps.js" ? (goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."), e3.loaded()) : e3.pause();
      }, goog.Es6ModuleDependency = function(e3, t2, o, r2, s3) {
        goog.Dependency.call(this, e3, t2, o, r2, s3);
      }, goog.inherits(goog.Es6ModuleDependency, goog.Dependency), goog.Es6ModuleDependency.prototype.load = function(e3) {
        if (goog.global.CLOSURE_IMPORT_SCRIPT)
          goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? e3.loaded() : e3.pause();
        else if (goog.inHtmlDocument_()) {
          var t2 = goog.global.document, o = this;
          if (goog.isDocumentLoading_()) {
            var r2 = function(e4, o2) {
              e4 = o2 ? '<script type="module" crossorigin>' + o2 + "<\/script>" : '<script type="module" crossorigin src="' + e4 + '"><\/script>', t2.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(e4) : e4);
            };
            goog.Dependency.defer_ = true;
          } else
            r2 = function(e4, o2) {
              var r3 = t2.createElement("script");
              r3.defer = true, r3.async = false, r3.type = "module", r3.setAttribute("crossorigin", true);
              var s4 = goog.getScriptNonce();
              s4 && r3.setAttribute("nonce", s4), o2 ? r3.textContent = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScript(o2) : o2 : r3.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(e4) : e4, t2.head.appendChild(r3);
            };
          var s3 = goog.Dependency.registerCallback_(function() {
            goog.Dependency.unregisterCallback_(s3), e3.setModuleState(goog.ModuleType.ES6);
          });
          r2(void 0, 'goog.Dependency.callback_("' + s3 + '")'), r2(this.path, void 0);
          var n = goog.Dependency.registerCallback_(function(t3) {
            goog.Dependency.unregisterCallback_(n), e3.registerEs6ModuleExports(o.path, t3, goog.moduleLoaderState_.moduleName);
          });
          r2(void 0, 'import * as m from "' + this.path + '"; goog.Dependency.callback_("' + n + '", m)');
          var i2 = goog.Dependency.registerCallback_(function() {
            goog.Dependency.unregisterCallback_(i2), e3.clearModuleState(), e3.loaded();
          });
          r2(void 0, 'goog.Dependency.callback_("' + i2 + '")');
        } else
          goog.logToConsole_("Cannot use default debug loader outside of HTML documents."), e3.pause();
      }, goog.TransformedDependency = function(e3, t2, o, r2, s3) {
        goog.Dependency.call(this, e3, t2, o, r2, s3), this.contents_ = null, this.lazyFetch_ = !goog.inHtmlDocument_() || !("noModule" in goog.global.document.createElement("script"));
      }, goog.inherits(goog.TransformedDependency, goog.Dependency), goog.TransformedDependency.prototype.load = function(e3) {
        function t2() {
          r2.contents_ = goog.loadFileSync_(r2.path), r2.contents_ && (r2.contents_ = r2.transform(r2.contents_), r2.contents_ && (r2.contents_ += "\n//# sourceURL=" + r2.path));
        }
        function o() {
          if (r2.lazyFetch_ && t2(), r2.contents_) {
            s3 && e3.setModuleState(goog.ModuleType.ES6);
            try {
              var o2 = r2.contents_;
              if (r2.contents_ = null, goog.globalEval(o2), s3)
                var n2 = goog.moduleLoaderState_.moduleName;
            } finally {
              s3 && e3.clearModuleState();
            }
            s3 && goog.global.$jscomp.require.ensure([r2.getPathName()], function() {
              e3.registerEs6ModuleExports(r2.path, goog.global.$jscomp.require(r2.getPathName()), n2);
            }), e3.loaded();
          }
        }
        var r2 = this;
        if (goog.global.CLOSURE_IMPORT_SCRIPT)
          t2(), this.contents_ && goog.global.CLOSURE_IMPORT_SCRIPT("", this.contents_) ? (this.contents_ = null, e3.loaded()) : e3.pause();
        else {
          var s3 = this.loadFlags.module == goog.ModuleType.ES6;
          this.lazyFetch_ || t2();
          var n = 1 < e3.pending().length, i2 = n && goog.DebugLoader_.IS_OLD_IE_;
          if (n = goog.Dependency.defer_ && (n || goog.isDocumentLoading_()), i2 || n)
            e3.defer(function() {
              o();
            });
          else {
            var a2 = goog.global.document;
            if (i2 = goog.inHtmlDocument_() && "ActiveXObject" in goog.global, s3 && goog.inHtmlDocument_() && goog.isDocumentLoading_() && !i2) {
              goog.Dependency.defer_ = true, e3.pause();
              var g = a2.onreadystatechange;
              a2.onreadystatechange = function() {
                a2.readyState == "interactive" && (a2.onreadystatechange = g, o(), e3.resume()), goog.isFunction(g) && g.apply(void 0, arguments);
              };
            } else
              !goog.DebugLoader_.IS_OLD_IE_ && goog.inHtmlDocument_() && goog.isDocumentLoading_() ? function() {
                var e4 = goog.global.document, t3 = goog.Dependency.registerCallback_(function() {
                  goog.Dependency.unregisterCallback_(t3), o();
                }), r3 = '<script type="text/javascript">' + goog.protectScriptTag_('goog.Dependency.callback_("' + t3 + '");') + "<\/script>";
                e4.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(r3) : r3);
              }() : o();
          }
        }
      }, goog.TransformedDependency.prototype.transform = function(e3) {
      }, goog.TranspiledDependency = function(e3, t2, o, r2, s3, n) {
        goog.TransformedDependency.call(this, e3, t2, o, r2, s3), this.transpiler = n;
      }, goog.inherits(goog.TranspiledDependency, goog.TransformedDependency), goog.TranspiledDependency.prototype.transform = function(e3) {
        return this.transpiler.transpile(e3, this.getPathName());
      }, goog.PreTranspiledEs6ModuleDependency = function(e3, t2, o, r2, s3) {
        goog.TransformedDependency.call(this, e3, t2, o, r2, s3);
      }, goog.inherits(goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency), goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(e3) {
        return e3;
      }, goog.GoogModuleDependency = function(e3, t2, o, r2, s3, n, i2) {
        goog.TransformedDependency.call(this, e3, t2, o, r2, s3), this.needsTranspile_ = n, this.transpiler_ = i2;
      }, goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency), goog.GoogModuleDependency.prototype.transform = function(e3) {
        return this.needsTranspile_ && (e3 = this.transpiler_.transpile(e3, this.getPathName())), goog.LOAD_MODULE_USING_EVAL && goog.isDef(goog.global.JSON) ? "goog.loadModule(" + goog.global.JSON.stringify(e3 + "\n//# sourceURL=" + this.path + "\n") + ");" : 'goog.loadModule(function(exports) {"use strict";' + e3 + "\n;return exports});\n//# sourceURL=" + this.path + "\n";
      }, goog.DebugLoader_.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.DebugLoader_.prototype.addDependency = function(e3, t2, o, r2) {
        t2 = t2 || [], e3 = e3.replace(/\\/g, "/");
        var s3 = goog.normalizePath_(goog.basePath + e3);
        for (r2 && typeof r2 != "boolean" || (r2 = r2 ? { module: goog.ModuleType.GOOG } : {}), o = this.factory_.createDependency(s3, e3, t2, o, r2, goog.transpiler_.needsTranspile(r2.lang || "es3", r2.module)), this.dependencies_[s3] = o, o = 0; o < t2.length; o++)
          this.idToPath_[t2[o]] = s3;
        this.idToPath_[e3] = s3;
      }, goog.DependencyFactory = function(e3) {
        this.transpiler = e3;
      }, goog.DependencyFactory.prototype.createDependency = function(e3, t2, o, r2, s3, n) {
        return s3.module == goog.ModuleType.GOOG ? new goog.GoogModuleDependency(e3, t2, o, r2, s3, n, this.transpiler) : n ? new goog.TranspiledDependency(e3, t2, o, r2, s3, this.transpiler) : s3.module == goog.ModuleType.ES6 ? goog.TRANSPILE == "never" && goog.ASSUME_ES_MODULES_TRANSPILED ? new goog.PreTranspiledEs6ModuleDependency(e3, t2, o, r2, s3) : new goog.Es6ModuleDependency(e3, t2, o, r2, s3) : new goog.Dependency(e3, t2, o, r2, s3);
      }, goog.debugLoader_ = new goog.DebugLoader_(), goog.loadClosureDeps = function() {
        goog.debugLoader_.loadClosureDeps();
      }, goog.setDependencyFactory = function(e3) {
        goog.debugLoader_.setDependencyFactory(e3);
      }, goog.global.CLOSURE_NO_DEPS || goog.debugLoader_.loadClosureDeps(), goog.bootstrap = function(e3, t2) {
        goog.debugLoader_.bootstrap(e3, t2);
      }), goog.TRUSTED_TYPES_POLICY_NAME = "", goog.identity_ = function(e3) {
        return e3;
      }, goog.createTrustedTypesPolicy = function(e3) {
        var t2 = null;
        if (typeof TrustedTypes == "undefined" || !TrustedTypes.createPolicy)
          return t2;
        try {
          t2 = TrustedTypes.createPolicy(e3, { createHTML: goog.identity_, createScript: goog.identity_, createScriptURL: goog.identity_, createURL: goog.identity_ });
        } catch (e4) {
          goog.logToConsole_(e4.message);
        }
        return t2;
      }, goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#base") : null;
      var jspb = { BinaryConstants: {}, ConstBinaryMessage: function() {
      }, BinaryMessage: function() {
      } };
      jspb.BinaryConstants.FieldType = { INVALID: -1, DOUBLE: 1, FLOAT: 2, INT64: 3, UINT64: 4, INT32: 5, FIXED64: 6, FIXED32: 7, BOOL: 8, STRING: 9, GROUP: 10, MESSAGE: 11, BYTES: 12, UINT32: 13, ENUM: 14, SFIXED32: 15, SFIXED64: 16, SINT32: 17, SINT64: 18, FHASH64: 30, VHASH64: 31 }, jspb.BinaryConstants.WireType = { INVALID: -1, VARINT: 0, FIXED64: 1, DELIMITED: 2, START_GROUP: 3, END_GROUP: 4, FIXED32: 5 }, jspb.BinaryConstants.FieldTypeToWireType = function(e3) {
        var t2 = jspb.BinaryConstants.FieldType, o = jspb.BinaryConstants.WireType;
        switch (e3) {
          case t2.INT32:
          case t2.INT64:
          case t2.UINT32:
          case t2.UINT64:
          case t2.SINT32:
          case t2.SINT64:
          case t2.BOOL:
          case t2.ENUM:
          case t2.VHASH64:
            return o.VARINT;
          case t2.DOUBLE:
          case t2.FIXED64:
          case t2.SFIXED64:
          case t2.FHASH64:
            return o.FIXED64;
          case t2.STRING:
          case t2.MESSAGE:
          case t2.BYTES:
            return o.DELIMITED;
          case t2.FLOAT:
          case t2.FIXED32:
          case t2.SFIXED32:
            return o.FIXED32;
          default:
            return o.INVALID;
        }
      }, jspb.BinaryConstants.INVALID_FIELD_NUMBER = -1, jspb.BinaryConstants.FLOAT32_EPS = 1401298464324817e-60, jspb.BinaryConstants.FLOAT32_MIN = 11754943508222875e-54, jspb.BinaryConstants.FLOAT32_MAX = 34028234663852886e22, jspb.BinaryConstants.FLOAT64_EPS = 5e-324, jspb.BinaryConstants.FLOAT64_MIN = 22250738585072014e-324, jspb.BinaryConstants.FLOAT64_MAX = 17976931348623157e292, jspb.BinaryConstants.TWO_TO_20 = 1048576, jspb.BinaryConstants.TWO_TO_23 = 8388608, jspb.BinaryConstants.TWO_TO_31 = 2147483648, jspb.BinaryConstants.TWO_TO_32 = 4294967296, jspb.BinaryConstants.TWO_TO_52 = 4503599627370496, jspb.BinaryConstants.TWO_TO_63 = 9223372036854776e3, jspb.BinaryConstants.TWO_TO_64 = 18446744073709552e3, jspb.BinaryConstants.ZERO_HASH = "\0\0\0\0\0\0\0\0", goog.dom = {}, goog.dom.NodeType = { ELEMENT: 1, ATTRIBUTE: 2, TEXT: 3, CDATA_SECTION: 4, ENTITY_REFERENCE: 5, ENTITY: 6, PROCESSING_INSTRUCTION: 7, COMMENT: 8, DOCUMENT: 9, DOCUMENT_TYPE: 10, DOCUMENT_FRAGMENT: 11, NOTATION: 12 }, goog.debug = {}, goog.debug.Error = function(e3) {
        if (Error.captureStackTrace)
          Error.captureStackTrace(this, goog.debug.Error);
        else {
          var t2 = Error().stack;
          t2 && (this.stack = t2);
        }
        e3 && (this.message = String(e3)), this.reportErrorToServer = true;
      }, goog.inherits(goog.debug.Error, Error), goog.debug.Error.prototype.name = "CustomError", goog.asserts = {}, goog.asserts.ENABLE_ASSERTS = goog.DEBUG, goog.asserts.AssertionError = function(e3, t2) {
        goog.debug.Error.call(this, goog.asserts.subs_(e3, t2)), this.messagePattern = e3;
      }, goog.inherits(goog.asserts.AssertionError, goog.debug.Error), goog.asserts.AssertionError.prototype.name = "AssertionError", goog.asserts.DEFAULT_ERROR_HANDLER = function(e3) {
        throw e3;
      }, goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER, goog.asserts.subs_ = function(e3, t2) {
        for (var o = "", r2 = (e3 = e3.split("%s")).length - 1, s3 = 0; s3 < r2; s3++)
          o += e3[s3] + (s3 < t2.length ? t2[s3] : "%s");
        return o + e3[r2];
      }, goog.asserts.doAssertFailure_ = function(e3, t2, o, r2) {
        var s3 = "Assertion failed";
        if (o) {
          s3 += ": " + o;
          var n = r2;
        } else
          e3 && (s3 += ": " + e3, n = t2);
        e3 = new goog.asserts.AssertionError("" + s3, n || []), goog.asserts.errorHandler_(e3);
      }, goog.asserts.setErrorHandler = function(e3) {
        goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = e3);
      }, goog.asserts.assert = function(e3, t2, o) {
        return goog.asserts.ENABLE_ASSERTS && !e3 && goog.asserts.doAssertFailure_("", null, t2, Array.prototype.slice.call(arguments, 2)), e3;
      }, goog.asserts.assertExists = function(e3, t2, o) {
        return goog.asserts.ENABLE_ASSERTS && e3 == null && goog.asserts.doAssertFailure_("Expected to exist: %s.", [e3], t2, Array.prototype.slice.call(arguments, 2)), e3;
      }, goog.asserts.fail = function(e3, t2) {
        goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (e3 ? ": " + e3 : ""), Array.prototype.slice.call(arguments, 1)));
      }, goog.asserts.assertNumber = function(e3, t2, o) {
        return goog.asserts.ENABLE_ASSERTS && !goog.isNumber(e3) && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(e3), e3], t2, Array.prototype.slice.call(arguments, 2)), e3;
      }, goog.asserts.assertString = function(e3, t2, o) {
        return goog.asserts.ENABLE_ASSERTS && !goog.isString(e3) && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(e3), e3], t2, Array.prototype.slice.call(arguments, 2)), e3;
      }, goog.asserts.assertFunction = function(e3, t2, o) {
        return goog.asserts.ENABLE_ASSERTS && !goog.isFunction(e3) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(e3), e3], t2, Array.prototype.slice.call(arguments, 2)), e3;
      }, goog.asserts.assertObject = function(e3, t2, o) {
        return goog.asserts.ENABLE_ASSERTS && !goog.isObject(e3) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(e3), e3], t2, Array.prototype.slice.call(arguments, 2)), e3;
      }, goog.asserts.assertArray = function(e3, t2, o) {
        return goog.asserts.ENABLE_ASSERTS && !goog.isArray(e3) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(e3), e3], t2, Array.prototype.slice.call(arguments, 2)), e3;
      }, goog.asserts.assertBoolean = function(e3, t2, o) {
        return goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(e3) && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(e3), e3], t2, Array.prototype.slice.call(arguments, 2)), e3;
      }, goog.asserts.assertElement = function(e3, t2, o) {
        return !goog.asserts.ENABLE_ASSERTS || goog.isObject(e3) && e3.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(e3), e3], t2, Array.prototype.slice.call(arguments, 2)), e3;
      }, goog.asserts.assertInstanceof = function(e3, t2, o, r2) {
        return !goog.asserts.ENABLE_ASSERTS || e3 instanceof t2 || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(t2), goog.asserts.getType_(e3)], o, Array.prototype.slice.call(arguments, 3)), e3;
      }, goog.asserts.assertFinite = function(e3, t2, o) {
        return !goog.asserts.ENABLE_ASSERTS || typeof e3 == "number" && isFinite(e3) || goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.", [e3], t2, Array.prototype.slice.call(arguments, 2)), e3;
      }, goog.asserts.assertObjectPrototypeIsIntact = function() {
        for (var e3 in Object.prototype)
          goog.asserts.fail(e3 + " should not be enumerable in Object.prototype.");
      }, goog.asserts.getType_ = function(e3) {
        return e3 instanceof Function ? e3.displayName || e3.name || "unknown type name" : e3 instanceof Object ? e3.constructor.displayName || e3.constructor.name || Object.prototype.toString.call(e3) : e3 === null ? "null" : typeof e3;
      }, goog.array = {}, goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE, goog.array.ASSUME_NATIVE_FUNCTIONS = 2012 < goog.FEATURESET_YEAR, goog.array.peek = function(e3) {
        return e3[e3.length - 1];
      }, goog.array.last = goog.array.peek, goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(e3, t2, o) {
        return goog.asserts.assert(e3.length != null), Array.prototype.indexOf.call(e3, t2, o);
      } : function(e3, t2, o) {
        if (o = o == null ? 0 : 0 > o ? Math.max(0, e3.length + o) : o, goog.isString(e3))
          return goog.isString(t2) && t2.length == 1 ? e3.indexOf(t2, o) : -1;
        for (; o < e3.length; o++)
          if (o in e3 && e3[o] === t2)
            return o;
        return -1;
      }, goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(e3, t2, o) {
        return goog.asserts.assert(e3.length != null), Array.prototype.lastIndexOf.call(e3, t2, o == null ? e3.length - 1 : o);
      } : function(e3, t2, o) {
        if (0 > (o = o == null ? e3.length - 1 : o) && (o = Math.max(0, e3.length + o)), goog.isString(e3))
          return goog.isString(t2) && t2.length == 1 ? e3.lastIndexOf(t2, o) : -1;
        for (; 0 <= o; o--)
          if (o in e3 && e3[o] === t2)
            return o;
        return -1;
      }, goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(e3, t2, o) {
        goog.asserts.assert(e3.length != null), Array.prototype.forEach.call(e3, t2, o);
      } : function(e3, t2, o) {
        for (var r2 = e3.length, s3 = goog.isString(e3) ? e3.split("") : e3, n = 0; n < r2; n++)
          n in s3 && t2.call(o, s3[n], n, e3);
      }, goog.array.forEachRight = function(e3, t2, o) {
        var r2 = e3.length, s3 = goog.isString(e3) ? e3.split("") : e3;
        for (--r2; 0 <= r2; --r2)
          r2 in s3 && t2.call(o, s3[r2], r2, e3);
      }, goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(e3, t2, o) {
        return goog.asserts.assert(e3.length != null), Array.prototype.filter.call(e3, t2, o);
      } : function(e3, t2, o) {
        for (var r2 = e3.length, s3 = [], n = 0, i2 = goog.isString(e3) ? e3.split("") : e3, a2 = 0; a2 < r2; a2++)
          if (a2 in i2) {
            var g = i2[a2];
            t2.call(o, g, a2, e3) && (s3[n++] = g);
          }
        return s3;
      }, goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(e3, t2, o) {
        return goog.asserts.assert(e3.length != null), Array.prototype.map.call(e3, t2, o);
      } : function(e3, t2, o) {
        for (var r2 = e3.length, s3 = Array(r2), n = goog.isString(e3) ? e3.split("") : e3, i2 = 0; i2 < r2; i2++)
          i2 in n && (s3[i2] = t2.call(o, n[i2], i2, e3));
        return s3;
      }, goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(e3, t2, o, r2) {
        return goog.asserts.assert(e3.length != null), r2 && (t2 = goog.bind(t2, r2)), Array.prototype.reduce.call(e3, t2, o);
      } : function(e3, t2, o, r2) {
        var s3 = o;
        return goog.array.forEach(e3, function(o2, n) {
          s3 = t2.call(r2, s3, o2, n, e3);
        }), s3;
      }, goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(e3, t2, o, r2) {
        return goog.asserts.assert(e3.length != null), goog.asserts.assert(t2 != null), r2 && (t2 = goog.bind(t2, r2)), Array.prototype.reduceRight.call(e3, t2, o);
      } : function(e3, t2, o, r2) {
        var s3 = o;
        return goog.array.forEachRight(e3, function(o2, n) {
          s3 = t2.call(r2, s3, o2, n, e3);
        }), s3;
      }, goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(e3, t2, o) {
        return goog.asserts.assert(e3.length != null), Array.prototype.some.call(e3, t2, o);
      } : function(e3, t2, o) {
        for (var r2 = e3.length, s3 = goog.isString(e3) ? e3.split("") : e3, n = 0; n < r2; n++)
          if (n in s3 && t2.call(o, s3[n], n, e3))
            return true;
        return false;
      }, goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(e3, t2, o) {
        return goog.asserts.assert(e3.length != null), Array.prototype.every.call(e3, t2, o);
      } : function(e3, t2, o) {
        for (var r2 = e3.length, s3 = goog.isString(e3) ? e3.split("") : e3, n = 0; n < r2; n++)
          if (n in s3 && !t2.call(o, s3[n], n, e3))
            return false;
        return true;
      }, goog.array.count = function(e3, t2, o) {
        var r2 = 0;
        return goog.array.forEach(e3, function(e4, s3, n) {
          t2.call(o, e4, s3, n) && ++r2;
        }, o), r2;
      }, goog.array.find = function(e3, t2, o) {
        return 0 > (t2 = goog.array.findIndex(e3, t2, o)) ? null : goog.isString(e3) ? e3.charAt(t2) : e3[t2];
      }, goog.array.findIndex = function(e3, t2, o) {
        for (var r2 = e3.length, s3 = goog.isString(e3) ? e3.split("") : e3, n = 0; n < r2; n++)
          if (n in s3 && t2.call(o, s3[n], n, e3))
            return n;
        return -1;
      }, goog.array.findRight = function(e3, t2, o) {
        return 0 > (t2 = goog.array.findIndexRight(e3, t2, o)) ? null : goog.isString(e3) ? e3.charAt(t2) : e3[t2];
      }, goog.array.findIndexRight = function(e3, t2, o) {
        var r2 = e3.length, s3 = goog.isString(e3) ? e3.split("") : e3;
        for (--r2; 0 <= r2; r2--)
          if (r2 in s3 && t2.call(o, s3[r2], r2, e3))
            return r2;
        return -1;
      }, goog.array.contains = function(e3, t2) {
        return 0 <= goog.array.indexOf(e3, t2);
      }, goog.array.isEmpty = function(e3) {
        return e3.length == 0;
      }, goog.array.clear = function(e3) {
        if (!goog.isArray(e3))
          for (var t2 = e3.length - 1; 0 <= t2; t2--)
            delete e3[t2];
        e3.length = 0;
      }, goog.array.insert = function(e3, t2) {
        goog.array.contains(e3, t2) || e3.push(t2);
      }, goog.array.insertAt = function(e3, t2, o) {
        goog.array.splice(e3, o, 0, t2);
      }, goog.array.insertArrayAt = function(e3, t2, o) {
        goog.partial(goog.array.splice, e3, o, 0).apply(null, t2);
      }, goog.array.insertBefore = function(e3, t2, o) {
        var r2;
        arguments.length == 2 || 0 > (r2 = goog.array.indexOf(e3, o)) ? e3.push(t2) : goog.array.insertAt(e3, t2, r2);
      }, goog.array.remove = function(e3, t2) {
        var o;
        return (o = 0 <= (t2 = goog.array.indexOf(e3, t2))) && goog.array.removeAt(e3, t2), o;
      }, goog.array.removeLast = function(e3, t2) {
        return 0 <= (t2 = goog.array.lastIndexOf(e3, t2)) && (goog.array.removeAt(e3, t2), true);
      }, goog.array.removeAt = function(e3, t2) {
        return goog.asserts.assert(e3.length != null), Array.prototype.splice.call(e3, t2, 1).length == 1;
      }, goog.array.removeIf = function(e3, t2, o) {
        return 0 <= (t2 = goog.array.findIndex(e3, t2, o)) && (goog.array.removeAt(e3, t2), true);
      }, goog.array.removeAllIf = function(e3, t2, o) {
        var r2 = 0;
        return goog.array.forEachRight(e3, function(s3, n) {
          t2.call(o, s3, n, e3) && goog.array.removeAt(e3, n) && r2++;
        }), r2;
      }, goog.array.concat = function(e3) {
        return Array.prototype.concat.apply([], arguments);
      }, goog.array.join = function(e3) {
        return Array.prototype.concat.apply([], arguments);
      }, goog.array.toArray = function(e3) {
        var t2 = e3.length;
        if (0 < t2) {
          for (var o = Array(t2), r2 = 0; r2 < t2; r2++)
            o[r2] = e3[r2];
          return o;
        }
        return [];
      }, goog.array.clone = goog.array.toArray, goog.array.extend = function(e3, t2) {
        for (var o = 1; o < arguments.length; o++) {
          var r2 = arguments[o];
          if (goog.isArrayLike(r2)) {
            var s3 = e3.length || 0, n = r2.length || 0;
            e3.length = s3 + n;
            for (var i2 = 0; i2 < n; i2++)
              e3[s3 + i2] = r2[i2];
          } else
            e3.push(r2);
        }
      }, goog.array.splice = function(e3, t2, o, r2) {
        return goog.asserts.assert(e3.length != null), Array.prototype.splice.apply(e3, goog.array.slice(arguments, 1));
      }, goog.array.slice = function(e3, t2, o) {
        return goog.asserts.assert(e3.length != null), 2 >= arguments.length ? Array.prototype.slice.call(e3, t2) : Array.prototype.slice.call(e3, t2, o);
      }, goog.array.removeDuplicates = function(e3, t2, o) {
        t2 = t2 || e3;
        var r2 = function(e4) {
          return goog.isObject(e4) ? "o" + goog.getUid(e4) : (typeof e4).charAt(0) + e4;
        };
        o = o || r2, r2 = {};
        for (var s3 = 0, n = 0; n < e3.length; ) {
          var i2 = e3[n++], a2 = o(i2);
          Object.prototype.hasOwnProperty.call(r2, a2) || (r2[a2] = true, t2[s3++] = i2);
        }
        t2.length = s3;
      }, goog.array.binarySearch = function(e3, t2, o) {
        return goog.array.binarySearch_(e3, o || goog.array.defaultCompare, false, t2);
      }, goog.array.binarySelect = function(e3, t2, o) {
        return goog.array.binarySearch_(e3, t2, true, void 0, o);
      }, goog.array.binarySearch_ = function(e3, t2, o, r2, s3) {
        for (var n, i2 = 0, a2 = e3.length; i2 < a2; ) {
          var g = i2 + a2 >> 1, l = o ? t2.call(s3, e3[g], g, e3) : t2(r2, e3[g]);
          0 < l ? i2 = g + 1 : (a2 = g, n = !l);
        }
        return n ? i2 : ~i2;
      }, goog.array.sort = function(e3, t2) {
        e3.sort(t2 || goog.array.defaultCompare);
      }, goog.array.stableSort = function(e3, t2) {
        for (var o = Array(e3.length), r2 = 0; r2 < e3.length; r2++)
          o[r2] = { index: r2, value: e3[r2] };
        var s3 = t2 || goog.array.defaultCompare;
        for (goog.array.sort(o, function(e4, t3) {
          return s3(e4.value, t3.value) || e4.index - t3.index;
        }), r2 = 0; r2 < e3.length; r2++)
          e3[r2] = o[r2].value;
      }, goog.array.sortByKey = function(e3, t2, o) {
        var r2 = o || goog.array.defaultCompare;
        goog.array.sort(e3, function(e4, o2) {
          return r2(t2(e4), t2(o2));
        });
      }, goog.array.sortObjectsByKey = function(e3, t2, o) {
        goog.array.sortByKey(e3, function(e4) {
          return e4[t2];
        }, o);
      }, goog.array.isSorted = function(e3, t2, o) {
        t2 = t2 || goog.array.defaultCompare;
        for (var r2 = 1; r2 < e3.length; r2++) {
          var s3 = t2(e3[r2 - 1], e3[r2]);
          if (0 < s3 || s3 == 0 && o)
            return false;
        }
        return true;
      }, goog.array.equals = function(e3, t2, o) {
        if (!goog.isArrayLike(e3) || !goog.isArrayLike(t2) || e3.length != t2.length)
          return false;
        var r2 = e3.length;
        o = o || goog.array.defaultCompareEquality;
        for (var s3 = 0; s3 < r2; s3++)
          if (!o(e3[s3], t2[s3]))
            return false;
        return true;
      }, goog.array.compare3 = function(e3, t2, o) {
        o = o || goog.array.defaultCompare;
        for (var r2 = Math.min(e3.length, t2.length), s3 = 0; s3 < r2; s3++) {
          var n = o(e3[s3], t2[s3]);
          if (n != 0)
            return n;
        }
        return goog.array.defaultCompare(e3.length, t2.length);
      }, goog.array.defaultCompare = function(e3, t2) {
        return e3 > t2 ? 1 : e3 < t2 ? -1 : 0;
      }, goog.array.inverseDefaultCompare = function(e3, t2) {
        return -goog.array.defaultCompare(e3, t2);
      }, goog.array.defaultCompareEquality = function(e3, t2) {
        return e3 === t2;
      }, goog.array.binaryInsert = function(e3, t2, o) {
        return 0 > (o = goog.array.binarySearch(e3, t2, o)) && (goog.array.insertAt(e3, t2, -(o + 1)), true);
      }, goog.array.binaryRemove = function(e3, t2, o) {
        return 0 <= (t2 = goog.array.binarySearch(e3, t2, o)) && goog.array.removeAt(e3, t2);
      }, goog.array.bucket = function(e3, t2, o) {
        for (var r2 = {}, s3 = 0; s3 < e3.length; s3++) {
          var n = e3[s3], i2 = t2.call(o, n, s3, e3);
          goog.isDef(i2) && (r2[i2] || (r2[i2] = [])).push(n);
        }
        return r2;
      }, goog.array.toObject = function(e3, t2, o) {
        var r2 = {};
        return goog.array.forEach(e3, function(s3, n) {
          r2[t2.call(o, s3, n, e3)] = s3;
        }), r2;
      }, goog.array.range = function(e3, t2, o) {
        var r2 = [], s3 = 0, n = e3;
        if (t2 !== void 0 && (s3 = e3, n = t2), 0 > (o = o || 1) * (n - s3))
          return [];
        if (0 < o)
          for (e3 = s3; e3 < n; e3 += o)
            r2.push(e3);
        else
          for (e3 = s3; e3 > n; e3 += o)
            r2.push(e3);
        return r2;
      }, goog.array.repeat = function(e3, t2) {
        for (var o = [], r2 = 0; r2 < t2; r2++)
          o[r2] = e3;
        return o;
      }, goog.array.flatten = function(e3) {
        for (var t2 = [], o = 0; o < arguments.length; o++) {
          var r2 = arguments[o];
          if (goog.isArray(r2))
            for (var s3 = 0; s3 < r2.length; s3 += 8192) {
              var n = goog.array.slice(r2, s3, s3 + 8192);
              n = goog.array.flatten.apply(null, n);
              for (var i2 = 0; i2 < n.length; i2++)
                t2.push(n[i2]);
            }
          else
            t2.push(r2);
        }
        return t2;
      }, goog.array.rotate = function(e3, t2) {
        return goog.asserts.assert(e3.length != null), e3.length && (0 < (t2 %= e3.length) ? Array.prototype.unshift.apply(e3, e3.splice(-t2, t2)) : 0 > t2 && Array.prototype.push.apply(e3, e3.splice(0, -t2))), e3;
      }, goog.array.moveItem = function(e3, t2, o) {
        goog.asserts.assert(0 <= t2 && t2 < e3.length), goog.asserts.assert(0 <= o && o < e3.length), t2 = Array.prototype.splice.call(e3, t2, 1), Array.prototype.splice.call(e3, o, 0, t2[0]);
      }, goog.array.zip = function(e3) {
        if (!arguments.length)
          return [];
        for (var t2 = [], o = arguments[0].length, r2 = 1; r2 < arguments.length; r2++)
          arguments[r2].length < o && (o = arguments[r2].length);
        for (r2 = 0; r2 < o; r2++) {
          for (var s3 = [], n = 0; n < arguments.length; n++)
            s3.push(arguments[n][r2]);
          t2.push(s3);
        }
        return t2;
      }, goog.array.shuffle = function(e3, t2) {
        t2 = t2 || Math.random;
        for (var o = e3.length - 1; 0 < o; o--) {
          var r2 = Math.floor(t2() * (o + 1)), s3 = e3[o];
          e3[o] = e3[r2], e3[r2] = s3;
        }
      }, goog.array.copyByIndex = function(e3, t2) {
        var o = [];
        return goog.array.forEach(t2, function(t3) {
          o.push(e3[t3]);
        }), o;
      }, goog.array.concatMap = function(e3, t2, o) {
        return goog.array.concat.apply([], goog.array.map(e3, t2, o));
      }, goog.crypt = {}, goog.crypt.stringToByteArray = function(e3) {
        for (var t2 = [], o = 0, r2 = 0; r2 < e3.length; r2++) {
          var s3 = e3.charCodeAt(r2);
          255 < s3 && (t2[o++] = 255 & s3, s3 >>= 8), t2[o++] = s3;
        }
        return t2;
      }, goog.crypt.byteArrayToString = function(e3) {
        if (8192 >= e3.length)
          return String.fromCharCode.apply(null, e3);
        for (var t2 = "", o = 0; o < e3.length; o += 8192) {
          var r2 = goog.array.slice(e3, o, o + 8192);
          t2 += String.fromCharCode.apply(null, r2);
        }
        return t2;
      }, goog.crypt.byteArrayToHex = function(e3, t2) {
        return goog.array.map(e3, function(e4) {
          return 1 < (e4 = e4.toString(16)).length ? e4 : "0" + e4;
        }).join(t2 || "");
      }, goog.crypt.hexToByteArray = function(e3) {
        goog.asserts.assert(e3.length % 2 == 0, "Key string length must be multiple of 2");
        for (var t2 = [], o = 0; o < e3.length; o += 2)
          t2.push(parseInt(e3.substring(o, o + 2), 16));
        return t2;
      }, goog.crypt.stringToUtf8ByteArray = function(e3) {
        for (var t2 = [], o = 0, r2 = 0; r2 < e3.length; r2++) {
          var s3 = e3.charCodeAt(r2);
          128 > s3 ? t2[o++] = s3 : (2048 > s3 ? t2[o++] = s3 >> 6 | 192 : ((64512 & s3) == 55296 && r2 + 1 < e3.length && (64512 & e3.charCodeAt(r2 + 1)) == 56320 ? (s3 = 65536 + ((1023 & s3) << 10) + (1023 & e3.charCodeAt(++r2)), t2[o++] = s3 >> 18 | 240, t2[o++] = s3 >> 12 & 63 | 128) : t2[o++] = s3 >> 12 | 224, t2[o++] = s3 >> 6 & 63 | 128), t2[o++] = 63 & s3 | 128);
        }
        return t2;
      }, goog.crypt.utf8ByteArrayToString = function(e3) {
        for (var t2 = [], o = 0, r2 = 0; o < e3.length; ) {
          var s3 = e3[o++];
          if (128 > s3)
            t2[r2++] = String.fromCharCode(s3);
          else if (191 < s3 && 224 > s3) {
            var n = e3[o++];
            t2[r2++] = String.fromCharCode((31 & s3) << 6 | 63 & n);
          } else if (239 < s3 && 365 > s3) {
            n = e3[o++];
            var i2 = e3[o++];
            s3 = ((7 & s3) << 18 | (63 & n) << 12 | (63 & i2) << 6 | 63 & e3[o++]) - 65536, t2[r2++] = String.fromCharCode(55296 + (s3 >> 10)), t2[r2++] = String.fromCharCode(56320 + (1023 & s3));
          } else
            n = e3[o++], i2 = e3[o++], t2[r2++] = String.fromCharCode((15 & s3) << 12 | (63 & n) << 6 | 63 & i2);
        }
        return t2.join("");
      }, goog.crypt.xorByteArray = function(e3, t2) {
        goog.asserts.assert(e3.length == t2.length, "XOR array lengths must match");
        for (var o = [], r2 = 0; r2 < e3.length; r2++)
          o.push(e3[r2] ^ t2[r2]);
        return o;
      }, goog.string = {}, goog.string.internal = {}, goog.string.internal.startsWith = function(e3, t2) {
        return e3.lastIndexOf(t2, 0) == 0;
      }, goog.string.internal.endsWith = function(e3, t2) {
        var o = e3.length - t2.length;
        return 0 <= o && e3.indexOf(t2, o) == o;
      }, goog.string.internal.caseInsensitiveStartsWith = function(e3, t2) {
        return goog.string.internal.caseInsensitiveCompare(t2, e3.substr(0, t2.length)) == 0;
      }, goog.string.internal.caseInsensitiveEndsWith = function(e3, t2) {
        return goog.string.internal.caseInsensitiveCompare(t2, e3.substr(e3.length - t2.length, t2.length)) == 0;
      }, goog.string.internal.caseInsensitiveEquals = function(e3, t2) {
        return e3.toLowerCase() == t2.toLowerCase();
      }, goog.string.internal.isEmptyOrWhitespace = function(e3) {
        return /^[\s\xa0]*$/.test(e3);
      }, goog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(e3) {
        return e3.trim();
      } : function(e3) {
        return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(e3)[1];
      }, goog.string.internal.caseInsensitiveCompare = function(e3, t2) {
        return (e3 = String(e3).toLowerCase()) < (t2 = String(t2).toLowerCase()) ? -1 : e3 == t2 ? 0 : 1;
      }, goog.string.internal.newLineToBr = function(e3, t2) {
        return e3.replace(/(\r\n|\r|\n)/g, t2 ? "<br />" : "<br>");
      }, goog.string.internal.htmlEscape = function(e3, t2) {
        if (t2)
          e3 = e3.replace(goog.string.internal.AMP_RE_, "&amp;").replace(goog.string.internal.LT_RE_, "&lt;").replace(goog.string.internal.GT_RE_, "&gt;").replace(goog.string.internal.QUOT_RE_, "&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;").replace(goog.string.internal.NULL_RE_, "&#0;");
        else {
          if (!goog.string.internal.ALL_RE_.test(e3))
            return e3;
          e3.indexOf("&") != -1 && (e3 = e3.replace(goog.string.internal.AMP_RE_, "&amp;")), e3.indexOf("<") != -1 && (e3 = e3.replace(goog.string.internal.LT_RE_, "&lt;")), e3.indexOf(">") != -1 && (e3 = e3.replace(goog.string.internal.GT_RE_, "&gt;")), e3.indexOf('"') != -1 && (e3 = e3.replace(goog.string.internal.QUOT_RE_, "&quot;")), e3.indexOf("'") != -1 && (e3 = e3.replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;")), e3.indexOf("\0") != -1 && (e3 = e3.replace(goog.string.internal.NULL_RE_, "&#0;"));
        }
        return e3;
      }, goog.string.internal.AMP_RE_ = /&/g, goog.string.internal.LT_RE_ = /</g, goog.string.internal.GT_RE_ = />/g, goog.string.internal.QUOT_RE_ = /"/g, goog.string.internal.SINGLE_QUOTE_RE_ = /'/g, goog.string.internal.NULL_RE_ = /\x00/g, goog.string.internal.ALL_RE_ = /[\x00&<>"']/, goog.string.internal.whitespaceEscape = function(e3, t2) {
        return goog.string.internal.newLineToBr(e3.replace(/  /g, " &#160;"), t2);
      }, goog.string.internal.contains = function(e3, t2) {
        return e3.indexOf(t2) != -1;
      }, goog.string.internal.caseInsensitiveContains = function(e3, t2) {
        return goog.string.internal.contains(e3.toLowerCase(), t2.toLowerCase());
      }, goog.string.internal.compareVersions = function(e3, t2) {
        var o = 0;
        e3 = goog.string.internal.trim(String(e3)).split("."), t2 = goog.string.internal.trim(String(t2)).split(".");
        for (var r2 = Math.max(e3.length, t2.length), s3 = 0; o == 0 && s3 < r2; s3++) {
          var n = e3[s3] || "", i2 = t2[s3] || "";
          do {
            if (n = /(\d*)(\D*)(.*)/.exec(n) || ["", "", "", ""], i2 = /(\d*)(\D*)(.*)/.exec(i2) || ["", "", "", ""], n[0].length == 0 && i2[0].length == 0)
              break;
            o = n[1].length == 0 ? 0 : parseInt(n[1], 10);
            var a2 = i2[1].length == 0 ? 0 : parseInt(i2[1], 10);
            o = goog.string.internal.compareElements_(o, a2) || goog.string.internal.compareElements_(n[2].length == 0, i2[2].length == 0) || goog.string.internal.compareElements_(n[2], i2[2]), n = n[3], i2 = i2[3];
          } while (o == 0);
        }
        return o;
      }, goog.string.internal.compareElements_ = function(e3, t2) {
        return e3 < t2 ? -1 : e3 > t2 ? 1 : 0;
      }, goog.string.TypedString = function() {
      }, goog.string.Const = function(e3, t2) {
        this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = e3 === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && t2 || "", this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
      }, goog.string.Const.prototype.implementsGoogStringTypedString = true, goog.string.Const.prototype.getTypedStringValue = function() {
        return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
      }, goog.string.Const.prototype.toString = function() {
        return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
      }, goog.string.Const.unwrap = function(e3) {
        return e3 instanceof goog.string.Const && e3.constructor === goog.string.Const && e3.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_ ? e3.stringConstValueWithSecurityContract__googStringSecurityPrivate_ : (goog.asserts.fail("expected object of type Const, got '" + e3 + "'"), "type_error:Const");
      }, goog.string.Const.from = function(e3) {
        return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, e3);
      }, goog.string.Const.TYPE_MARKER_ = {}, goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {}, goog.string.Const.EMPTY = goog.string.Const.from(""), goog.fs = {}, goog.fs.url = {}, goog.fs.url.createObjectUrl = function(e3) {
        return goog.fs.url.getUrlObject_().createObjectURL(e3);
      }, goog.fs.url.revokeObjectUrl = function(e3) {
        goog.fs.url.getUrlObject_().revokeObjectURL(e3);
      }, goog.fs.url.getUrlObject_ = function() {
        var e3 = goog.fs.url.findUrlObject_();
        if (e3 != null)
          return e3;
        throw Error("This browser doesn't seem to support blob URLs");
      }, goog.fs.url.findUrlObject_ = function() {
        return goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL) ? goog.global.URL : goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL) ? goog.global.webkitURL : goog.isDef(goog.global.createObjectURL) ? goog.global : null;
      }, goog.fs.url.browserSupportsObjectUrls = function() {
        return goog.fs.url.findUrlObject_() != null;
      }, goog.html = {}, goog.html.trustedtypes = {}, goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#html") : null, goog.i18n = {}, goog.i18n.bidi = {}, goog.i18n.bidi.FORCE_RTL = false, goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || 3 <= goog.LOCALE.length && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_") || 7 <= goog.LOCALE.length && (goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") && (goog.LOCALE.substring(3, 7).toLowerCase() == "adlm" || goog.LOCALE.substring(3, 7).toLowerCase() == "arab" || goog.LOCALE.substring(3, 7).toLowerCase() == "hebr" || goog.LOCALE.substring(3, 7).toLowerCase() == "nkoo" || goog.LOCALE.substring(3, 7).toLowerCase() == "rohg" || goog.LOCALE.substring(3, 7).toLowerCase() == "thaa") || 8 <= goog.LOCALE.length && (goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_") && (goog.LOCALE.substring(4, 8).toLowerCase() == "adlm" || goog.LOCALE.substring(4, 8).toLowerCase() == "arab" || goog.LOCALE.substring(4, 8).toLowerCase() == "hebr" || goog.LOCALE.substring(4, 8).toLowerCase() == "nkoo" || goog.LOCALE.substring(4, 8).toLowerCase() == "rohg" || goog.LOCALE.substring(4, 8).toLowerCase() == "thaa"), goog.i18n.bidi.Format = { LRE: "\u202A", RLE: "\u202B", PDF: "\u202C", LRM: "\u200E", RLM: "\u200F" }, goog.i18n.bidi.Dir = { LTR: 1, RTL: -1, NEUTRAL: 0 }, goog.i18n.bidi.RIGHT = "right", goog.i18n.bidi.LEFT = "left", goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT, goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, goog.i18n.bidi.toDir = function(e3, t2) {
        return typeof e3 == "number" ? 0 < e3 ? goog.i18n.bidi.Dir.LTR : 0 > e3 ? goog.i18n.bidi.Dir.RTL : t2 ? null : goog.i18n.bidi.Dir.NEUTRAL : e3 == null ? null : e3 ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
      }, goog.i18n.bidi.ltrChars_ = "A-Za-z\xC0-\xD6\xD8-\xF6\xF8-\u02B8\u0300-\u0590\u0900-\u1FFF\u200E\u2C00-\uD801\uD804-\uD839\uD83C-\uDBFF\uF900-\uFB1C\uFE00-\uFE6F\uFEFD-\uFFFF", goog.i18n.bidi.rtlChars_ = "\u0591-\u06EF\u06FA-\u08FF\u200F\uD802-\uD803\uD83A-\uD83B\uFB1D-\uFDFF\uFE70-\uFEFC", goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g, goog.i18n.bidi.stripHtmlIfNeeded_ = function(e3, t2) {
        return t2 ? e3.replace(goog.i18n.bidi.htmlSkipReg_, "") : e3;
      }, goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]"), goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]"), goog.i18n.bidi.hasAnyRtl = function(e3, t2) {
        return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e3, t2));
      }, goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl, goog.i18n.bidi.hasAnyLtr = function(e3, t2) {
        return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e3, t2));
      }, goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]"), goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]"), goog.i18n.bidi.isRtlChar = function(e3) {
        return goog.i18n.bidi.rtlRe_.test(e3);
      }, goog.i18n.bidi.isLtrChar = function(e3) {
        return goog.i18n.bidi.ltrRe_.test(e3);
      }, goog.i18n.bidi.isNeutralChar = function(e3) {
        return !goog.i18n.bidi.isLtrChar(e3) && !goog.i18n.bidi.isRtlChar(e3);
      }, goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]"), goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]"), goog.i18n.bidi.startsWithRtl = function(e3, t2) {
        return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e3, t2));
      }, goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl, goog.i18n.bidi.startsWithLtr = function(e3, t2) {
        return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e3, t2));
      }, goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr, goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/, goog.i18n.bidi.isNeutralText = function(e3, t2) {
        return e3 = goog.i18n.bidi.stripHtmlIfNeeded_(e3, t2), goog.i18n.bidi.isRequiredLtrRe_.test(e3) || !goog.i18n.bidi.hasAnyLtr(e3) && !goog.i18n.bidi.hasAnyRtl(e3);
      }, goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$"), goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$"), goog.i18n.bidi.endsWithLtr = function(e3, t2) {
        return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e3, t2));
      }, goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr, goog.i18n.bidi.endsWithRtl = function(e3, t2) {
        return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e3, t2));
      }, goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl, goog.i18n.bidi.rtlLocalesRe_ = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i, goog.i18n.bidi.isRtlLanguage = function(e3) {
        return goog.i18n.bidi.rtlLocalesRe_.test(e3);
      }, goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g, goog.i18n.bidi.guardBracketInText = function(e3, t2) {
        return t2 = (t2 === void 0 ? goog.i18n.bidi.hasAnyRtl(e3) : t2) ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM, e3.replace(goog.i18n.bidi.bracketGuardTextRe_, t2 + "$&" + t2);
      }, goog.i18n.bidi.enforceRtlInHtml = function(e3) {
        return e3.charAt(0) == "<" ? e3.replace(/<\w+/, "$& dir=rtl") : "\n<span dir=rtl>" + e3 + "</span>";
      }, goog.i18n.bidi.enforceRtlInText = function(e3) {
        return goog.i18n.bidi.Format.RLE + e3 + goog.i18n.bidi.Format.PDF;
      }, goog.i18n.bidi.enforceLtrInHtml = function(e3) {
        return e3.charAt(0) == "<" ? e3.replace(/<\w+/, "$& dir=ltr") : "\n<span dir=ltr>" + e3 + "</span>";
      }, goog.i18n.bidi.enforceLtrInText = function(e3) {
        return goog.i18n.bidi.Format.LRE + e3 + goog.i18n.bidi.Format.PDF;
      }, goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g, goog.i18n.bidi.leftRe_ = /left/gi, goog.i18n.bidi.rightRe_ = /right/gi, goog.i18n.bidi.tempRe_ = /%%%%/g, goog.i18n.bidi.mirrorCSS = function(e3) {
        return e3.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
      }, goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g, goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g, goog.i18n.bidi.normalizeHebrewQuote = function(e3) {
        return e3.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05F4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05F3");
      }, goog.i18n.bidi.wordSeparatorRe_ = /\s+/, goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/, goog.i18n.bidi.rtlDetectionThreshold_ = 0.4, goog.i18n.bidi.estimateDirection = function(e3, t2) {
        var o = 0, r2 = 0, s3 = false;
        for (e3 = goog.i18n.bidi.stripHtmlIfNeeded_(e3, t2).split(goog.i18n.bidi.wordSeparatorRe_), t2 = 0; t2 < e3.length; t2++) {
          var n = e3[t2];
          goog.i18n.bidi.startsWithRtl(n) ? (o++, r2++) : goog.i18n.bidi.isRequiredLtrRe_.test(n) ? s3 = true : goog.i18n.bidi.hasAnyLtr(n) ? r2++ : goog.i18n.bidi.hasNumeralsRe_.test(n) && (s3 = true);
        }
        return r2 == 0 ? s3 ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : o / r2 > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
      }, goog.i18n.bidi.detectRtlDirectionality = function(e3, t2) {
        return goog.i18n.bidi.estimateDirection(e3, t2) == goog.i18n.bidi.Dir.RTL;
      }, goog.i18n.bidi.setElementDirAndAlign = function(e3, t2) {
        e3 && (t2 = goog.i18n.bidi.toDir(t2)) && (e3.style.textAlign = t2 == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, e3.dir = t2 == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr");
      }, goog.i18n.bidi.setElementDirByTextDirectionality = function(e3, t2) {
        switch (goog.i18n.bidi.estimateDirection(t2)) {
          case goog.i18n.bidi.Dir.LTR:
            e3.dir = "ltr";
            break;
          case goog.i18n.bidi.Dir.RTL:
            e3.dir = "rtl";
            break;
          default:
            e3.removeAttribute("dir");
        }
      }, goog.i18n.bidi.DirectionalString = function() {
      }, goog.html.TrustedResourceUrl = function() {
        this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "", this.trustedURL_ = null, this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
      }, goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true, goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
        return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();
      }, goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true, goog.html.TrustedResourceUrl.prototype.getDirection = function() {
        return goog.i18n.bidi.Dir.LTR;
      }, goog.html.TrustedResourceUrl.prototype.cloneWithParams = function(e3, t2) {
        var o = goog.html.TrustedResourceUrl.unwrap(this), r2 = (o = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(o))[3] || "";
        return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(o[1] + goog.html.TrustedResourceUrl.stringifyParams_("?", o[2] || "", e3) + goog.html.TrustedResourceUrl.stringifyParams_("#", r2, t2));
      }, goog.DEBUG && (goog.html.TrustedResourceUrl.prototype.toString = function() {
        return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
      }), goog.html.TrustedResourceUrl.unwrap = function(e3) {
        return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(e3).toString();
      }, goog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function(e3) {
        return e3 instanceof goog.html.TrustedResourceUrl && e3.constructor === goog.html.TrustedResourceUrl && e3.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ? e3.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ : (goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + e3 + "' of type " + goog.typeOf(e3)), "type_error:TrustedResourceUrl");
      }, goog.html.TrustedResourceUrl.unwrapTrustedURL = function(e3) {
        return e3.trustedURL_ ? e3.trustedURL_ : goog.html.TrustedResourceUrl.unwrap(e3);
      }, goog.html.TrustedResourceUrl.format = function(e3, t2) {
        var o = goog.string.Const.unwrap(e3);
        if (!goog.html.TrustedResourceUrl.BASE_URL_.test(o))
          throw Error("Invalid TrustedResourceUrl format: " + o);
        return e3 = o.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(e4, r2) {
          if (!Object.prototype.hasOwnProperty.call(t2, r2))
            throw Error('Found marker, "' + r2 + '", in format string, "' + o + '", but no valid label mapping found in args: ' + JSON.stringify(t2));
          return (e4 = t2[r2]) instanceof goog.string.Const ? goog.string.Const.unwrap(e4) : encodeURIComponent(String(e4));
        }), goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(e3);
      }, goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g, goog.html.TrustedResourceUrl.BASE_URL_ = /^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i, goog.html.TrustedResourceUrl.URL_PARAM_PARSER_ = /^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/, goog.html.TrustedResourceUrl.formatWithParams = function(e3, t2, o, r2) {
        return goog.html.TrustedResourceUrl.format(e3, t2).cloneWithParams(o, r2);
      }, goog.html.TrustedResourceUrl.fromConstant = function(e3) {
        return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(e3));
      }, goog.html.TrustedResourceUrl.fromConstants = function(e3) {
        for (var t2 = "", o = 0; o < e3.length; o++)
          t2 += goog.string.Const.unwrap(e3[o]);
        return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(t2);
      }, goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {}, goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(e3) {
        var t2 = new goog.html.TrustedResourceUrl();
        return t2.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(e3) : e3, goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY && (t2.trustedURL_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(e3)), t2;
      }, goog.html.TrustedResourceUrl.stringifyParams_ = function(e3, t2, o) {
        if (o == null)
          return t2;
        if (goog.isString(o))
          return o ? e3 + encodeURIComponent(o) : "";
        for (var r2 in o) {
          var s3 = o[r2];
          s3 = goog.isArray(s3) ? s3 : [s3];
          for (var n = 0; n < s3.length; n++) {
            var i2 = s3[n];
            i2 != null && (t2 || (t2 = e3), t2 += (t2.length > e3.length ? "&" : "") + encodeURIComponent(r2) + "=" + encodeURIComponent(String(i2)));
          }
        }
        return t2;
      }, goog.html.SafeUrl = function() {
        this.privateDoNotAccessOrElseSafeUrlWrappedValue_ = "", this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
      }, goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez", goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true, goog.html.SafeUrl.prototype.getTypedStringValue = function() {
        return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
      }, goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true, goog.html.SafeUrl.prototype.getDirection = function() {
        return goog.i18n.bidi.Dir.LTR;
      }, goog.DEBUG && (goog.html.SafeUrl.prototype.toString = function() {
        return "SafeUrl{" + this.privateDoNotAccessOrElseSafeUrlWrappedValue_ + "}";
      }), goog.html.SafeUrl.unwrap = function(e3) {
        return goog.html.SafeUrl.unwrapTrustedURL(e3).toString();
      }, goog.html.SafeUrl.unwrapTrustedURL = function(e3) {
        return e3 instanceof goog.html.SafeUrl && e3.constructor === goog.html.SafeUrl && e3.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ? e3.privateDoNotAccessOrElseSafeUrlWrappedValue_ : (goog.asserts.fail("expected object of type SafeUrl, got '" + e3 + "' of type " + goog.typeOf(e3)), "type_error:SafeUrl");
      }, goog.html.SafeUrl.fromConstant = function(e3) {
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(e3));
      }, goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-wav|wav|webm)|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime))(?:;\w+=(?:\w+|"[\w;=]+"))*$/i, goog.html.SafeUrl.isSafeMimeType = function(e3) {
        return goog.html.SAFE_MIME_TYPE_PATTERN_.test(e3);
      }, goog.html.SafeUrl.fromBlob = function(e3) {
        return e3 = goog.html.SAFE_MIME_TYPE_PATTERN_.test(e3.type) ? goog.fs.url.createObjectUrl(e3) : goog.html.SafeUrl.INNOCUOUS_STRING, goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e3);
      }, goog.html.DATA_URL_PATTERN_ = /^data:([^,]*);base64,[a-z0-9+\/]+=*$/i, goog.html.SafeUrl.fromDataUrl = function(e3) {
        var t2 = (e3 = e3.replace(/(%0A|%0D)/g, "")).match(goog.html.DATA_URL_PATTERN_);
        return t2 = t2 && goog.html.SAFE_MIME_TYPE_PATTERN_.test(t2[1]), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(t2 ? e3 : goog.html.SafeUrl.INNOCUOUS_STRING);
      }, goog.html.SafeUrl.fromTelUrl = function(e3) {
        return goog.string.internal.caseInsensitiveStartsWith(e3, "tel:") || (e3 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e3);
      }, goog.html.SIP_URL_PATTERN_ = /^sip[s]?:[+a-z0-9_.!$%&'*\/=^`{|}~-]+@([a-z0-9-]+\.)+[a-z0-9]{2,63}$/i, goog.html.SafeUrl.fromSipUrl = function(e3) {
        return goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(e3)) || (e3 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e3);
      }, goog.html.SafeUrl.fromFacebookMessengerUrl = function(e3) {
        return goog.string.internal.caseInsensitiveStartsWith(e3, "fb-messenger://share") || (e3 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e3);
      }, goog.html.SafeUrl.fromWhatsAppUrl = function(e3) {
        return goog.string.internal.caseInsensitiveStartsWith(e3, "whatsapp://send") || (e3 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e3);
      }, goog.html.SafeUrl.fromSmsUrl = function(e3) {
        return goog.string.internal.caseInsensitiveStartsWith(e3, "sms:") && goog.html.SafeUrl.isSmsUrlBodyValid_(e3) || (e3 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e3);
      }, goog.html.SafeUrl.isSmsUrlBodyValid_ = function(e3) {
        var t2 = e3.indexOf("#");
        if (0 < t2 && (e3 = e3.substring(0, t2)), !(t2 = e3.match(/[?&]body=/gi)))
          return true;
        if (1 < t2.length)
          return false;
        if (!(e3 = e3.match(/[?&]body=([^&]*)/)[1]))
          return true;
        try {
          decodeURIComponent(e3);
        } catch (e4) {
          return false;
        }
        return /^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(e3);
      }, goog.html.SafeUrl.fromSshUrl = function(e3) {
        return goog.string.internal.caseInsensitiveStartsWith(e3, "ssh://") || (e3 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e3);
      }, goog.html.SafeUrl.sanitizeChromeExtensionUrl = function(e3, t2) {
        return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//, e3, t2);
      }, goog.html.SafeUrl.sanitizeFirefoxExtensionUrl = function(e3, t2) {
        return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//, e3, t2);
      }, goog.html.SafeUrl.sanitizeEdgeExtensionUrl = function(e3, t2) {
        return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//, e3, t2);
      }, goog.html.SafeUrl.sanitizeExtensionUrl_ = function(e3, t2, o) {
        return (e3 = e3.exec(t2)) ? (e3 = e3[1], (o instanceof goog.string.Const ? [goog.string.Const.unwrap(o)] : o.map(function(e4) {
          return goog.string.Const.unwrap(e4);
        })).indexOf(e3) == -1 && (t2 = goog.html.SafeUrl.INNOCUOUS_STRING)) : t2 = goog.html.SafeUrl.INNOCUOUS_STRING, goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(t2);
      }, goog.html.SafeUrl.fromTrustedResourceUrl = function(e3) {
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(e3));
      }, goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i, goog.html.SafeUrl.SAFE_URL_PATTERN = goog.html.SAFE_URL_PATTERN_, goog.html.SafeUrl.sanitize = function(e3) {
        return e3 instanceof goog.html.SafeUrl ? e3 : (e3 = typeof e3 == "object" && e3.implementsGoogStringTypedString ? e3.getTypedStringValue() : String(e3), goog.html.SAFE_URL_PATTERN_.test(e3) || (e3 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e3));
      }, goog.html.SafeUrl.sanitizeAssertUnchanged = function(e3, t2) {
        return e3 instanceof goog.html.SafeUrl ? e3 : (e3 = typeof e3 == "object" && e3.implementsGoogStringTypedString ? e3.getTypedStringValue() : String(e3), t2 && /^data:/i.test(e3) && (t2 = goog.html.SafeUrl.fromDataUrl(e3)).getTypedStringValue() == e3 ? t2 : (goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(e3), "%s does not match the safe URL pattern", e3) || (e3 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e3)));
      }, goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {}, goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(e3) {
        var t2 = new goog.html.SafeUrl();
        return t2.privateDoNotAccessOrElseSafeUrlWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(e3) : e3, t2;
      }, goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank"), goog.html.SafeStyle = function() {
        this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "", this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
      }, goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true, goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {}, goog.html.SafeStyle.fromConstant = function(e3) {
        return (e3 = goog.string.Const.unwrap(e3)).length === 0 ? goog.html.SafeStyle.EMPTY : (goog.asserts.assert(goog.string.internal.endsWith(e3, ";"), "Last character of style string is not ';': " + e3), goog.asserts.assert(goog.string.internal.contains(e3, ":"), `Style string must contain at least one ':', to specify a "name: value" pair: ` + e3), goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(e3));
      }, goog.html.SafeStyle.prototype.getTypedStringValue = function() {
        return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
      }, goog.DEBUG && (goog.html.SafeStyle.prototype.toString = function() {
        return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
      }), goog.html.SafeStyle.unwrap = function(e3) {
        return e3 instanceof goog.html.SafeStyle && e3.constructor === goog.html.SafeStyle && e3.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ? e3.privateDoNotAccessOrElseSafeStyleWrappedValue_ : (goog.asserts.fail("expected object of type SafeStyle, got '" + e3 + "' of type " + goog.typeOf(e3)), "type_error:SafeStyle");
      }, goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(e3) {
        return new goog.html.SafeStyle().initSecurityPrivateDoNotAccessOrElse_(e3);
      }, goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(e3) {
        return this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = e3, this;
      }, goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(""), goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez", goog.html.SafeStyle.create = function(e3) {
        var t2, o = "";
        for (t2 in e3) {
          if (!/^[-_a-zA-Z0-9]+$/.test(t2))
            throw Error("Name allows only [-_a-zA-Z0-9], got: " + t2);
          var r2 = e3[t2];
          r2 != null && (o += t2 + ":" + (r2 = goog.isArray(r2) ? goog.array.map(r2, goog.html.SafeStyle.sanitizePropertyValue_).join(" ") : goog.html.SafeStyle.sanitizePropertyValue_(r2)) + ";");
        }
        return o ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(o) : goog.html.SafeStyle.EMPTY;
      }, goog.html.SafeStyle.sanitizePropertyValue_ = function(e3) {
        if (e3 instanceof goog.html.SafeUrl)
          return 'url("' + goog.html.SafeUrl.unwrap(e3).replace(/</g, "%3c").replace(/[\\"]/g, "\\$&") + '")';
        if (e3 = e3 instanceof goog.string.Const ? goog.string.Const.unwrap(e3) : goog.html.SafeStyle.sanitizePropertyValueString_(String(e3)), /[{;}]/.test(e3))
          throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.", [e3]);
        return e3;
      }, goog.html.SafeStyle.sanitizePropertyValueString_ = function(e3) {
        var t2 = e3.replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.URL_RE_, "url");
        return goog.html.SafeStyle.VALUE_RE_.test(t2) ? goog.html.SafeStyle.COMMENT_RE_.test(e3) ? (goog.asserts.fail("String value disallows comments, got: " + e3), goog.html.SafeStyle.INNOCUOUS_STRING) : goog.html.SafeStyle.hasBalancedQuotes_(e3) ? goog.html.SafeStyle.hasBalancedSquareBrackets_(e3) ? goog.html.SafeStyle.sanitizeUrl_(e3) : (goog.asserts.fail("String value requires balanced square brackets and one identifier per pair of brackets, got: " + e3), goog.html.SafeStyle.INNOCUOUS_STRING) : (goog.asserts.fail("String value requires balanced quotes, got: " + e3), goog.html.SafeStyle.INNOCUOUS_STRING) : (goog.asserts.fail("String value allows only " + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + " and simple functions, got: " + e3), goog.html.SafeStyle.INNOCUOUS_STRING);
      }, goog.html.SafeStyle.hasBalancedQuotes_ = function(e3) {
        for (var t2 = true, o = true, r2 = 0; r2 < e3.length; r2++) {
          var s3 = e3.charAt(r2);
          s3 == "'" && o ? t2 = !t2 : s3 == '"' && t2 && (o = !o);
        }
        return t2 && o;
      }, goog.html.SafeStyle.hasBalancedSquareBrackets_ = function(e3) {
        for (var t2 = true, o = /^[-_a-zA-Z0-9]$/, r2 = 0; r2 < e3.length; r2++) {
          var s3 = e3.charAt(r2);
          if (s3 == "]") {
            if (t2)
              return false;
            t2 = true;
          } else if (s3 == "[") {
            if (!t2)
              return false;
            t2 = false;
          } else if (!t2 && !o.test(s3))
            return false;
        }
        return t2;
      }, goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ = `[-,."'%_!# a-zA-Z0-9\\[\\]]`, goog.html.SafeStyle.VALUE_RE_ = new RegExp("^" + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + "+$"), goog.html.SafeStyle.URL_RE_ = /\b(url\([ \t\n]*)('[ -&(-\[\]-~]*'|"[ !#-\[\]-~]*"|[!#-&*-\[\]-~]*)([ \t\n]*\))/g, goog.html.SafeStyle.FUNCTIONS_RE_ = /\b(hsl|hsla|rgb|rgba|matrix|calc|minmax|fit-content|repeat|(rotate|scale|translate)(X|Y|Z|3d)?)\([-+*/0-9a-z.%\[\], ]+\)/g, goog.html.SafeStyle.COMMENT_RE_ = /\/\*/, goog.html.SafeStyle.sanitizeUrl_ = function(e3) {
        return e3.replace(goog.html.SafeStyle.URL_RE_, function(e4, t2, o, r2) {
          var s3 = "";
          return o = o.replace(/^(['"])(.*)\1$/, function(e5, t3, o2) {
            return s3 = t3, o2;
          }), e4 = goog.html.SafeUrl.sanitize(o).getTypedStringValue(), t2 + s3 + e4 + s3 + r2;
        });
      }, goog.html.SafeStyle.concat = function(e3) {
        var t2 = "", o = function(e4) {
          goog.isArray(e4) ? goog.array.forEach(e4, o) : t2 += goog.html.SafeStyle.unwrap(e4);
        };
        return goog.array.forEach(arguments, o), t2 ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(t2) : goog.html.SafeStyle.EMPTY;
      }, goog.html.SafeScript = function() {
        this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "", this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
      }, goog.html.SafeScript.prototype.implementsGoogStringTypedString = true, goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {}, goog.html.SafeScript.fromConstant = function(e3) {
        return (e3 = goog.string.Const.unwrap(e3)).length === 0 ? goog.html.SafeScript.EMPTY : goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(e3);
      }, goog.html.SafeScript.fromConstantAndArgs = function(e3, t2) {
        for (var o = [], r2 = 1; r2 < arguments.length; r2++)
          o.push(goog.html.SafeScript.stringify_(arguments[r2]));
        return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("(" + goog.string.Const.unwrap(e3) + ")(" + o.join(", ") + ");");
      }, goog.html.SafeScript.fromJson = function(e3) {
        return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(e3));
      }, goog.html.SafeScript.prototype.getTypedStringValue = function() {
        return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
      }, goog.DEBUG && (goog.html.SafeScript.prototype.toString = function() {
        return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
      }), goog.html.SafeScript.unwrap = function(e3) {
        return goog.html.SafeScript.unwrapTrustedScript(e3).toString();
      }, goog.html.SafeScript.unwrapTrustedScript = function(e3) {
        return e3 instanceof goog.html.SafeScript && e3.constructor === goog.html.SafeScript && e3.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ? e3.privateDoNotAccessOrElseSafeScriptWrappedValue_ : (goog.asserts.fail("expected object of type SafeScript, got '" + e3 + "' of type " + goog.typeOf(e3)), "type_error:SafeScript");
      }, goog.html.SafeScript.stringify_ = function(e3) {
        return JSON.stringify(e3).replace(/</g, "\\x3c");
      }, goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(e3) {
        return new goog.html.SafeScript().initSecurityPrivateDoNotAccessOrElse_(e3);
      }, goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(e3) {
        return this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(e3) : e3, this;
      }, goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(""), goog.object = {}, goog.object.is = function(e3, t2) {
        return e3 === t2 ? e3 !== 0 || 1 / e3 == 1 / t2 : e3 != e3 && t2 != t2;
      }, goog.object.forEach = function(e3, t2, o) {
        for (var r2 in e3)
          t2.call(o, e3[r2], r2, e3);
      }, goog.object.filter = function(e3, t2, o) {
        var r2, s3 = {};
        for (r2 in e3)
          t2.call(o, e3[r2], r2, e3) && (s3[r2] = e3[r2]);
        return s3;
      }, goog.object.map = function(e3, t2, o) {
        var r2, s3 = {};
        for (r2 in e3)
          s3[r2] = t2.call(o, e3[r2], r2, e3);
        return s3;
      }, goog.object.some = function(e3, t2, o) {
        for (var r2 in e3)
          if (t2.call(o, e3[r2], r2, e3))
            return true;
        return false;
      }, goog.object.every = function(e3, t2, o) {
        for (var r2 in e3)
          if (!t2.call(o, e3[r2], r2, e3))
            return false;
        return true;
      }, goog.object.getCount = function(e3) {
        var t2, o = 0;
        for (t2 in e3)
          o++;
        return o;
      }, goog.object.getAnyKey = function(e3) {
        for (var t2 in e3)
          return t2;
      }, goog.object.getAnyValue = function(e3) {
        for (var t2 in e3)
          return e3[t2];
      }, goog.object.contains = function(e3, t2) {
        return goog.object.containsValue(e3, t2);
      }, goog.object.getValues = function(e3) {
        var t2, o = [], r2 = 0;
        for (t2 in e3)
          o[r2++] = e3[t2];
        return o;
      }, goog.object.getKeys = function(e3) {
        var t2, o = [], r2 = 0;
        for (t2 in e3)
          o[r2++] = t2;
        return o;
      }, goog.object.getValueByKeys = function(e3, t2) {
        var o = goog.isArrayLike(t2), r2 = o ? t2 : arguments;
        for (o = o ? 0 : 1; o < r2.length; o++) {
          if (e3 == null)
            return;
          e3 = e3[r2[o]];
        }
        return e3;
      }, goog.object.containsKey = function(e3, t2) {
        return e3 !== null && t2 in e3;
      }, goog.object.containsValue = function(e3, t2) {
        for (var o in e3)
          if (e3[o] == t2)
            return true;
        return false;
      }, goog.object.findKey = function(e3, t2, o) {
        for (var r2 in e3)
          if (t2.call(o, e3[r2], r2, e3))
            return r2;
      }, goog.object.findValue = function(e3, t2, o) {
        return (t2 = goog.object.findKey(e3, t2, o)) && e3[t2];
      }, goog.object.isEmpty = function(e3) {
        for (var t2 in e3)
          return false;
        return true;
      }, goog.object.clear = function(e3) {
        for (var t2 in e3)
          delete e3[t2];
      }, goog.object.remove = function(e3, t2) {
        var o;
        return (o = t2 in e3) && delete e3[t2], o;
      }, goog.object.add = function(e3, t2, o) {
        if (e3 !== null && t2 in e3)
          throw Error('The object already contains the key "' + t2 + '"');
        goog.object.set(e3, t2, o);
      }, goog.object.get = function(e3, t2, o) {
        return e3 !== null && t2 in e3 ? e3[t2] : o;
      }, goog.object.set = function(e3, t2, o) {
        e3[t2] = o;
      }, goog.object.setIfUndefined = function(e3, t2, o) {
        return t2 in e3 ? e3[t2] : e3[t2] = o;
      }, goog.object.setWithReturnValueIfNotSet = function(e3, t2, o) {
        return t2 in e3 ? e3[t2] : (o = o(), e3[t2] = o);
      }, goog.object.equals = function(e3, t2) {
        for (var o in e3)
          if (!(o in t2) || e3[o] !== t2[o])
            return false;
        for (var r2 in t2)
          if (!(r2 in e3))
            return false;
        return true;
      }, goog.object.clone = function(e3) {
        var t2, o = {};
        for (t2 in e3)
          o[t2] = e3[t2];
        return o;
      }, goog.object.unsafeClone = function(e3) {
        var t2 = goog.typeOf(e3);
        if (t2 == "object" || t2 == "array") {
          if (goog.isFunction(e3.clone))
            return e3.clone();
          for (var o in t2 = t2 == "array" ? [] : {}, e3)
            t2[o] = goog.object.unsafeClone(e3[o]);
          return t2;
        }
        return e3;
      }, goog.object.transpose = function(e3) {
        var t2, o = {};
        for (t2 in e3)
          o[e3[t2]] = t2;
        return o;
      }, goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "), goog.object.extend = function(e3, t2) {
        for (var o, r2, s3 = 1; s3 < arguments.length; s3++) {
          for (o in r2 = arguments[s3])
            e3[o] = r2[o];
          for (var n = 0; n < goog.object.PROTOTYPE_FIELDS_.length; n++)
            o = goog.object.PROTOTYPE_FIELDS_[n], Object.prototype.hasOwnProperty.call(r2, o) && (e3[o] = r2[o]);
        }
      }, goog.object.create = function(e3) {
        var t2 = arguments.length;
        if (t2 == 1 && goog.isArray(arguments[0]))
          return goog.object.create.apply(null, arguments[0]);
        if (t2 % 2)
          throw Error("Uneven number of arguments");
        for (var o = {}, r2 = 0; r2 < t2; r2 += 2)
          o[arguments[r2]] = arguments[r2 + 1];
        return o;
      }, goog.object.createSet = function(e3) {
        var t2 = arguments.length;
        if (t2 == 1 && goog.isArray(arguments[0]))
          return goog.object.createSet.apply(null, arguments[0]);
        for (var o = {}, r2 = 0; r2 < t2; r2++)
          o[arguments[r2]] = true;
        return o;
      }, goog.object.createImmutableView = function(e3) {
        var t2 = e3;
        return Object.isFrozen && !Object.isFrozen(e3) && (t2 = Object.create(e3), Object.freeze(t2)), t2;
      }, goog.object.isImmutableView = function(e3) {
        return !!Object.isFrozen && Object.isFrozen(e3);
      }, goog.object.getAllPropertyNames = function(e3, t2, o) {
        if (!e3)
          return [];
        if (!Object.getOwnPropertyNames || !Object.getPrototypeOf)
          return goog.object.getKeys(e3);
        for (var r2 = {}; e3 && (e3 !== Object.prototype || t2) && (e3 !== Function.prototype || o); ) {
          for (var s3 = Object.getOwnPropertyNames(e3), n = 0; n < s3.length; n++)
            r2[s3[n]] = true;
          e3 = Object.getPrototypeOf(e3);
        }
        return goog.object.getKeys(r2);
      }, goog.object.getSuperClass = function(e3) {
        return (e3 = Object.getPrototypeOf(e3.prototype)) && e3.constructor;
      }, goog.html.SafeStyleSheet = function() {
        this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "", this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
      }, goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true, goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {}, goog.html.SafeStyleSheet.createRule = function(e3, t2) {
        if (goog.string.internal.contains(e3, "<"))
          throw Error("Selector does not allow '<', got: " + e3);
        var o = e3.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
        if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(o))
          throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: " + e3);
        if (!goog.html.SafeStyleSheet.hasBalancedBrackets_(o))
          throw Error("() and [] in selector must be balanced, got: " + e3);
        return t2 instanceof goog.html.SafeStyle || (t2 = goog.html.SafeStyle.create(t2)), e3 = e3 + "{" + goog.html.SafeStyle.unwrap(t2).replace(/</g, "\\3C ") + "}", goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(e3);
      }, goog.html.SafeStyleSheet.hasBalancedBrackets_ = function(e3) {
        for (var t2 = { "(": ")", "[": "]" }, o = [], r2 = 0; r2 < e3.length; r2++) {
          var s3 = e3[r2];
          if (t2[s3])
            o.push(t2[s3]);
          else if (goog.object.contains(t2, s3) && o.pop() != s3)
            return false;
        }
        return o.length == 0;
      }, goog.html.SafeStyleSheet.concat = function(e3) {
        var t2 = "", o = function(e4) {
          goog.isArray(e4) ? goog.array.forEach(e4, o) : t2 += goog.html.SafeStyleSheet.unwrap(e4);
        };
        return goog.array.forEach(arguments, o), goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(t2);
      }, goog.html.SafeStyleSheet.fromConstant = function(e3) {
        return (e3 = goog.string.Const.unwrap(e3)).length === 0 ? goog.html.SafeStyleSheet.EMPTY : (goog.asserts.assert(!goog.string.internal.contains(e3, "<"), "Forbidden '<' character in style sheet string: " + e3), goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(e3));
      }, goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
        return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
      }, goog.DEBUG && (goog.html.SafeStyleSheet.prototype.toString = function() {
        return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
      }), goog.html.SafeStyleSheet.unwrap = function(e3) {
        return e3 instanceof goog.html.SafeStyleSheet && e3.constructor === goog.html.SafeStyleSheet && e3.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ? e3.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ : (goog.asserts.fail("expected object of type SafeStyleSheet, got '" + e3 + "' of type " + goog.typeOf(e3)), "type_error:SafeStyleSheet");
      }, goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(e3) {
        return new goog.html.SafeStyleSheet().initSecurityPrivateDoNotAccessOrElse_(e3);
      }, goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(e3) {
        return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = e3, this;
      }, goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(""), goog.dom.tags = {}, goog.dom.tags.VOID_TAGS_ = { area: true, base: true, br: true, col: true, command: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true }, goog.dom.tags.isVoidTag = function(e3) {
        return goog.dom.tags.VOID_TAGS_[e3] === true;
      }, goog.dom.HtmlElement = function() {
      }, goog.dom.TagName = function(e3) {
        this.tagName_ = e3;
      }, goog.dom.TagName.prototype.toString = function() {
        return this.tagName_;
      }, goog.dom.TagName.A = new goog.dom.TagName("A"), goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR"), goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM"), goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS"), goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET"), goog.dom.TagName.AREA = new goog.dom.TagName("AREA"), goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE"), goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE"), goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO"), goog.dom.TagName.B = new goog.dom.TagName("B"), goog.dom.TagName.BASE = new goog.dom.TagName("BASE"), goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT"), goog.dom.TagName.BDI = new goog.dom.TagName("BDI"), goog.dom.TagName.BDO = new goog.dom.TagName("BDO"), goog.dom.TagName.BIG = new goog.dom.TagName("BIG"), goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE"), goog.dom.TagName.BODY = new goog.dom.TagName("BODY"), goog.dom.TagName.BR = new goog.dom.TagName("BR"), goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON"), goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS"), goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION"), goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER"), goog.dom.TagName.CITE = new goog.dom.TagName("CITE"), goog.dom.TagName.CODE = new goog.dom.TagName("CODE"), goog.dom.TagName.COL = new goog.dom.TagName("COL"), goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP"), goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND"), goog.dom.TagName.DATA = new goog.dom.TagName("DATA"), goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST"), goog.dom.TagName.DD = new goog.dom.TagName("DD"), goog.dom.TagName.DEL = new goog.dom.TagName("DEL"), goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS"), goog.dom.TagName.DFN = new goog.dom.TagName("DFN"), goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG"), goog.dom.TagName.DIR = new goog.dom.TagName("DIR"), goog.dom.TagName.DIV = new goog.dom.TagName("DIV"), goog.dom.TagName.DL = new goog.dom.TagName("DL"), goog.dom.TagName.DT = new goog.dom.TagName("DT"), goog.dom.TagName.EM = new goog.dom.TagName("EM"), goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED"), goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET"), goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION"), goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE"), goog.dom.TagName.FONT = new goog.dom.TagName("FONT"), goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER"), goog.dom.TagName.FORM = new goog.dom.TagName("FORM"), goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME"), goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET"), goog.dom.TagName.H1 = new goog.dom.TagName("H1"), goog.dom.TagName.H2 = new goog.dom.TagName("H2"), goog.dom.TagName.H3 = new goog.dom.TagName("H3"), goog.dom.TagName.H4 = new goog.dom.TagName("H4"), goog.dom.TagName.H5 = new goog.dom.TagName("H5"), goog.dom.TagName.H6 = new goog.dom.TagName("H6"), goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD"), goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER"), goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP"), goog.dom.TagName.HR = new goog.dom.TagName("HR"), goog.dom.TagName.HTML = new goog.dom.TagName("HTML"), goog.dom.TagName.I = new goog.dom.TagName("I"), goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME"), goog.dom.TagName.IMG = new goog.dom.TagName("IMG"), goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT"), goog.dom.TagName.INS = new goog.dom.TagName("INS"), goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX"), goog.dom.TagName.KBD = new goog.dom.TagName("KBD"), goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN"), goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL"), goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND"), goog.dom.TagName.LI = new goog.dom.TagName("LI"), goog.dom.TagName.LINK = new goog.dom.TagName("LINK"), goog.dom.TagName.MAIN = new goog.dom.TagName("MAIN"), goog.dom.TagName.MAP = new goog.dom.TagName("MAP"), goog.dom.TagName.MARK = new goog.dom.TagName("MARK"), goog.dom.TagName.MATH = new goog.dom.TagName("MATH"), goog.dom.TagName.MENU = new goog.dom.TagName("MENU"), goog.dom.TagName.MENUITEM = new goog.dom.TagName("MENUITEM"), goog.dom.TagName.META = new goog.dom.TagName("META"), goog.dom.TagName.METER = new goog.dom.TagName("METER"), goog.dom.TagName.NAV = new goog.dom.TagName("NAV"), goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES"), goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT"), goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT"), goog.dom.TagName.OL = new goog.dom.TagName("OL"), goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP"), goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION"), goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT"), goog.dom.TagName.P = new goog.dom.TagName("P"), goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM"), goog.dom.TagName.PICTURE = new goog.dom.TagName("PICTURE"), goog.dom.TagName.PRE = new goog.dom.TagName("PRE"), goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS"), goog.dom.TagName.Q = new goog.dom.TagName("Q"), goog.dom.TagName.RP = new goog.dom.TagName("RP"), goog.dom.TagName.RT = new goog.dom.TagName("RT"), goog.dom.TagName.RTC = new goog.dom.TagName("RTC"), goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY"), goog.dom.TagName.S = new goog.dom.TagName("S"), goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP"), goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT"), goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION"), goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT"), goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL"), goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE"), goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN"), goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE"), goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG"), goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE"), goog.dom.TagName.SUB = new goog.dom.TagName("SUB"), goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY"), goog.dom.TagName.SUP = new goog.dom.TagName("SUP"), goog.dom.TagName.SVG = new goog.dom.TagName("SVG"), goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE"), goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY"), goog.dom.TagName.TD = new goog.dom.TagName("TD"), goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE"), goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA"), goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT"), goog.dom.TagName.TH = new goog.dom.TagName("TH"), goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD"), goog.dom.TagName.TIME = new goog.dom.TagName("TIME"), goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE"), goog.dom.TagName.TR = new goog.dom.TagName("TR"), goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK"), goog.dom.TagName.TT = new goog.dom.TagName("TT"), goog.dom.TagName.U = new goog.dom.TagName("U"), goog.dom.TagName.UL = new goog.dom.TagName("UL"), goog.dom.TagName.VAR = new goog.dom.TagName("VAR"), goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO"), goog.dom.TagName.WBR = new goog.dom.TagName("WBR"), goog.labs = {}, goog.labs.userAgent = {}, goog.labs.userAgent.util = {}, goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
        var e3 = goog.labs.userAgent.util.getNavigator_();
        return e3 && (e3 = e3.userAgent) ? e3 : "";
      }, goog.labs.userAgent.util.getNavigator_ = function() {
        return goog.global.navigator;
      }, goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_(), goog.labs.userAgent.util.setUserAgent = function(e3) {
        goog.labs.userAgent.util.userAgent_ = e3 || goog.labs.userAgent.util.getNativeUserAgentString_();
      }, goog.labs.userAgent.util.getUserAgent = function() {
        return goog.labs.userAgent.util.userAgent_;
      }, goog.labs.userAgent.util.matchUserAgent = function(e3) {
        var t2 = goog.labs.userAgent.util.getUserAgent();
        return goog.string.internal.contains(t2, e3);
      }, goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(e3) {
        var t2 = goog.labs.userAgent.util.getUserAgent();
        return goog.string.internal.caseInsensitiveContains(t2, e3);
      }, goog.labs.userAgent.util.extractVersionTuples = function(e3) {
        for (var t2, o = /(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g, r2 = []; t2 = o.exec(e3); )
          r2.push([t2[1], t2[2], t2[3] || void 0]);
        return r2;
      }, goog.labs.userAgent.browser = {}, goog.labs.userAgent.browser.matchOpera_ = function() {
        return goog.labs.userAgent.util.matchUserAgent("Opera");
      }, goog.labs.userAgent.browser.matchIE_ = function() {
        return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
      }, goog.labs.userAgent.browser.matchEdgeHtml_ = function() {
        return goog.labs.userAgent.util.matchUserAgent("Edge");
      }, goog.labs.userAgent.browser.matchEdgeChromium_ = function() {
        return goog.labs.userAgent.util.matchUserAgent("Edg/");
      }, goog.labs.userAgent.browser.matchOperaChromium_ = function() {
        return goog.labs.userAgent.util.matchUserAgent("OPR");
      }, goog.labs.userAgent.browser.matchFirefox_ = function() {
        return goog.labs.userAgent.util.matchUserAgent("Firefox") || goog.labs.userAgent.util.matchUserAgent("FxiOS");
      }, goog.labs.userAgent.browser.matchSafari_ = function() {
        return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdgeHtml_() || goog.labs.userAgent.browser.matchEdgeChromium_() || goog.labs.userAgent.browser.matchOperaChromium_() || goog.labs.userAgent.browser.matchFirefox_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
      }, goog.labs.userAgent.browser.matchCoast_ = function() {
        return goog.labs.userAgent.util.matchUserAgent("Coast");
      }, goog.labs.userAgent.browser.matchIosWebview_ = function() {
        return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && !goog.labs.userAgent.browser.matchFirefox_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
      }, goog.labs.userAgent.browser.matchChrome_ = function() {
        return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdgeHtml_();
      }, goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
        return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
      }, goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_, goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_, goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdgeHtml_, goog.labs.userAgent.browser.isEdgeChromium = goog.labs.userAgent.browser.matchEdgeChromium_, goog.labs.userAgent.browser.isOperaChromium = goog.labs.userAgent.browser.matchOperaChromium_, goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_, goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_, goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_, goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_, goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_, goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_, goog.labs.userAgent.browser.isSilk = function() {
        return goog.labs.userAgent.util.matchUserAgent("Silk");
      }, goog.labs.userAgent.browser.getVersion = function() {
        function e3(e4) {
          return e4 = goog.array.find(e4, r2), o[e4] || "";
        }
        var t2 = goog.labs.userAgent.util.getUserAgent();
        if (goog.labs.userAgent.browser.isIE())
          return goog.labs.userAgent.browser.getIEVersion_(t2);
        t2 = goog.labs.userAgent.util.extractVersionTuples(t2);
        var o = {};
        goog.array.forEach(t2, function(e4) {
          o[e4[0]] = e4[1];
        });
        var r2 = goog.partial(goog.object.containsKey, o);
        return goog.labs.userAgent.browser.isOpera() ? e3(["Version", "Opera"]) : goog.labs.userAgent.browser.isEdge() ? e3(["Edge"]) : goog.labs.userAgent.browser.isEdgeChromium() ? e3(["Edg"]) : goog.labs.userAgent.browser.isChrome() ? e3(["Chrome", "CriOS"]) : (t2 = t2[2]) && t2[1] || "";
      }, goog.labs.userAgent.browser.isVersionOrHigher = function(e3) {
        return 0 <= goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(), e3);
      }, goog.labs.userAgent.browser.getIEVersion_ = function(e3) {
        var t2 = /rv: *([\d\.]*)/.exec(e3);
        if (t2 && t2[1])
          return t2[1];
        t2 = "";
        var o = /MSIE +([\d\.]+)/.exec(e3);
        if (o && o[1])
          if (e3 = /Trident\/(\d.\d)/.exec(e3), o[1] == "7.0")
            if (e3 && e3[1])
              switch (e3[1]) {
                case "4.0":
                  t2 = "8.0";
                  break;
                case "5.0":
                  t2 = "9.0";
                  break;
                case "6.0":
                  t2 = "10.0";
                  break;
                case "7.0":
                  t2 = "11.0";
              }
            else
              t2 = "7.0";
          else
            t2 = o[1];
        return t2;
      }, goog.html.SafeHtml = function() {
        this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "", this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_, this.dir_ = null;
      }, goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true, goog.html.SafeHtml.prototype.getDirection = function() {
        return this.dir_;
      }, goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true, goog.html.SafeHtml.prototype.getTypedStringValue = function() {
        return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
      }, goog.DEBUG && (goog.html.SafeHtml.prototype.toString = function() {
        return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
      }), goog.html.SafeHtml.unwrap = function(e3) {
        return goog.html.SafeHtml.unwrapTrustedHTML(e3).toString();
      }, goog.html.SafeHtml.unwrapTrustedHTML = function(e3) {
        return e3 instanceof goog.html.SafeHtml && e3.constructor === goog.html.SafeHtml && e3.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ? e3.privateDoNotAccessOrElseSafeHtmlWrappedValue_ : (goog.asserts.fail("expected object of type SafeHtml, got '" + e3 + "' of type " + goog.typeOf(e3)), "type_error:SafeHtml");
      }, goog.html.SafeHtml.htmlEscape = function(e3) {
        if (e3 instanceof goog.html.SafeHtml)
          return e3;
        var t2 = typeof e3 == "object", o = null;
        return t2 && e3.implementsGoogI18nBidiDirectionalString && (o = e3.getDirection()), e3 = t2 && e3.implementsGoogStringTypedString ? e3.getTypedStringValue() : String(e3), goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(e3), o);
      }, goog.html.SafeHtml.htmlEscapePreservingNewlines = function(e3) {
        return e3 instanceof goog.html.SafeHtml ? e3 : (e3 = goog.html.SafeHtml.htmlEscape(e3), goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(e3)), e3.getDirection()));
      }, goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(e3) {
        return e3 instanceof goog.html.SafeHtml ? e3 : (e3 = goog.html.SafeHtml.htmlEscape(e3), goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(e3)), e3.getDirection()));
      }, goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape, goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/, goog.html.SafeHtml.URL_ATTRIBUTES_ = { action: true, cite: true, data: true, formaction: true, href: true, manifest: true, poster: true, src: true }, goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = { APPLET: true, BASE: true, EMBED: true, IFRAME: true, LINK: true, MATH: true, META: true, OBJECT: true, SCRIPT: true, STYLE: true, SVG: true, TEMPLATE: true }, goog.html.SafeHtml.create = function(e3, t2, o) {
        return goog.html.SafeHtml.verifyTagName(String(e3)), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(e3), t2, o);
      }, goog.html.SafeHtml.verifyTagName = function(e3) {
        if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(e3))
          throw Error("Invalid tag name <" + e3 + ">.");
        if (e3.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_)
          throw Error("Tag name <" + e3 + "> is not allowed for SafeHtml.");
      }, goog.html.SafeHtml.createIframe = function(e3, t2, o, r2) {
        e3 && goog.html.TrustedResourceUrl.unwrap(e3);
        var s3 = {};
        return s3.src = e3 || null, s3.srcdoc = t2 && goog.html.SafeHtml.unwrap(t2), e3 = goog.html.SafeHtml.combineAttributes(s3, { sandbox: "" }, o), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", e3, r2);
      }, goog.html.SafeHtml.createSandboxIframe = function(e3, t2, o, r2) {
        if (!goog.html.SafeHtml.canUseSandboxIframe())
          throw Error("The browser does not support sandboxed iframes.");
        var s3 = {};
        return s3.src = e3 ? goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(e3)) : null, s3.srcdoc = t2 || null, s3.sandbox = "", e3 = goog.html.SafeHtml.combineAttributes(s3, {}, o), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", e3, r2);
      }, goog.html.SafeHtml.canUseSandboxIframe = function() {
        return goog.global.HTMLIFrameElement && "sandbox" in goog.global.HTMLIFrameElement.prototype;
      }, goog.html.SafeHtml.createScriptSrc = function(e3, t2) {
        return goog.html.TrustedResourceUrl.unwrap(e3), e3 = goog.html.SafeHtml.combineAttributes({ src: e3 }, {}, t2), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", e3);
      }, goog.html.SafeHtml.createScript = function(e3, t2) {
        for (var o in t2) {
          var r2 = o.toLowerCase();
          if (r2 == "language" || r2 == "src" || r2 == "text" || r2 == "type")
            throw Error('Cannot set "' + r2 + '" attribute');
        }
        for (o = "", e3 = goog.array.concat(e3), r2 = 0; r2 < e3.length; r2++)
          o += goog.html.SafeScript.unwrap(e3[r2]);
        return e3 = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(o, goog.i18n.bidi.Dir.NEUTRAL), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", t2, e3);
      }, goog.html.SafeHtml.createStyle = function(e3, t2) {
        t2 = goog.html.SafeHtml.combineAttributes({ type: "text/css" }, {}, t2);
        var o = "";
        e3 = goog.array.concat(e3);
        for (var r2 = 0; r2 < e3.length; r2++)
          o += goog.html.SafeStyleSheet.unwrap(e3[r2]);
        return e3 = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(o, goog.i18n.bidi.Dir.NEUTRAL), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", t2, e3);
      }, goog.html.SafeHtml.createMetaRefresh = function(e3, t2) {
        return e3 = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(e3)), (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) && goog.string.internal.contains(e3, ";") && (e3 = "'" + e3.replace(/'/g, "%27") + "'"), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", { "http-equiv": "refresh", content: (t2 || 0) + "; url=" + e3 });
      }, goog.html.SafeHtml.getAttrNameAndValue_ = function(e3, t2, o) {
        if (o instanceof goog.string.Const)
          o = goog.string.Const.unwrap(o);
        else if (t2.toLowerCase() == "style")
          o = goog.html.SafeHtml.getStyleValue_(o);
        else {
          if (/^on/i.test(t2))
            throw Error('Attribute "' + t2 + '" requires goog.string.Const value, "' + o + '" given.');
          if (t2.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_)
            if (o instanceof goog.html.TrustedResourceUrl)
              o = goog.html.TrustedResourceUrl.unwrap(o);
            else if (o instanceof goog.html.SafeUrl)
              o = goog.html.SafeUrl.unwrap(o);
            else {
              if (!goog.isString(o))
                throw Error('Attribute "' + t2 + '" on tag "' + e3 + '" requires goog.html.SafeUrl, goog.string.Const, or string, value "' + o + '" given.');
              o = goog.html.SafeUrl.sanitize(o).getTypedStringValue();
            }
        }
        return o.implementsGoogStringTypedString && (o = o.getTypedStringValue()), goog.asserts.assert(goog.isString(o) || goog.isNumber(o), "String or number value expected, got " + typeof o + " with value: " + o), t2 + '="' + goog.string.internal.htmlEscape(String(o)) + '"';
      }, goog.html.SafeHtml.getStyleValue_ = function(e3) {
        if (!goog.isObject(e3))
          throw Error('The "style" attribute requires goog.html.SafeStyle or map of style properties, ' + typeof e3 + " given: " + e3);
        return e3 instanceof goog.html.SafeStyle || (e3 = goog.html.SafeStyle.create(e3)), goog.html.SafeStyle.unwrap(e3);
      }, goog.html.SafeHtml.createWithDir = function(e3, t2, o, r2) {
        return (t2 = goog.html.SafeHtml.create(t2, o, r2)).dir_ = e3, t2;
      }, goog.html.SafeHtml.join = function(e3, t2) {
        var o = (e3 = goog.html.SafeHtml.htmlEscape(e3)).getDirection(), r2 = [], s3 = function(e4) {
          goog.isArray(e4) ? goog.array.forEach(e4, s3) : (e4 = goog.html.SafeHtml.htmlEscape(e4), r2.push(goog.html.SafeHtml.unwrap(e4)), e4 = e4.getDirection(), o == goog.i18n.bidi.Dir.NEUTRAL ? o = e4 : e4 != goog.i18n.bidi.Dir.NEUTRAL && o != e4 && (o = null));
        };
        return goog.array.forEach(t2, s3), goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(r2.join(goog.html.SafeHtml.unwrap(e3)), o);
      }, goog.html.SafeHtml.concat = function(e3) {
        return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY, Array.prototype.slice.call(arguments));
      }, goog.html.SafeHtml.concatWithDir = function(e3, t2) {
        var o = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
        return o.dir_ = e3, o;
      }, goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {}, goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(e3, t2) {
        return new goog.html.SafeHtml().initSecurityPrivateDoNotAccessOrElse_(e3, t2);
      }, goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(e3, t2) {
        return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(e3) : e3, this.dir_ = t2, this;
      }, goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(e3, t2, o) {
        var r2 = null, s3 = "<" + e3 + goog.html.SafeHtml.stringifyAttributes(e3, t2);
        return goog.isDefAndNotNull(o) ? goog.isArray(o) || (o = [o]) : o = [], goog.dom.tags.isVoidTag(e3.toLowerCase()) ? (goog.asserts.assert(!o.length, "Void tag <" + e3 + "> does not allow content."), s3 += ">") : (r2 = goog.html.SafeHtml.concat(o), s3 += ">" + goog.html.SafeHtml.unwrap(r2) + "</" + e3 + ">", r2 = r2.getDirection()), (e3 = t2 && t2.dir) && (r2 = /^(ltr|rtl|auto)$/i.test(e3) ? goog.i18n.bidi.Dir.NEUTRAL : null), goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(s3, r2);
      }, goog.html.SafeHtml.stringifyAttributes = function(e3, t2) {
        var o = "";
        if (t2)
          for (var r2 in t2) {
            if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(r2))
              throw Error('Invalid attribute name "' + r2 + '".');
            var s3 = t2[r2];
            goog.isDefAndNotNull(s3) && (o += " " + goog.html.SafeHtml.getAttrNameAndValue_(e3, r2, s3));
          }
        return o;
      }, goog.html.SafeHtml.combineAttributes = function(e3, t2, o) {
        var r2, s3 = {};
        for (r2 in e3)
          goog.asserts.assert(r2.toLowerCase() == r2, "Must be lower case"), s3[r2] = e3[r2];
        for (r2 in t2)
          goog.asserts.assert(r2.toLowerCase() == r2, "Must be lower case"), s3[r2] = t2[r2];
        for (r2 in o) {
          var n = r2.toLowerCase();
          if (n in e3)
            throw Error('Cannot override "' + n + '" attribute, got "' + r2 + '" with value "' + o[r2] + '"');
          n in t2 && delete s3[n], s3[r2] = o[r2];
        }
        return s3;
      }, goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>", goog.i18n.bidi.Dir.NEUTRAL), goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL), goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>", goog.i18n.bidi.Dir.NEUTRAL), goog.html.uncheckedconversions = {}, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(e3, t2, o) {
        return goog.asserts.assertString(goog.string.Const.unwrap(e3), "must provide justification"), goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e3)), "must provide non-empty justification"), goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(t2, o || null);
      }, goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(e3, t2) {
        return goog.asserts.assertString(goog.string.Const.unwrap(e3), "must provide justification"), goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e3)), "must provide non-empty justification"), goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(t2);
      }, goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(e3, t2) {
        return goog.asserts.assertString(goog.string.Const.unwrap(e3), "must provide justification"), goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e3)), "must provide non-empty justification"), goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(t2);
      }, goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(e3, t2) {
        return goog.asserts.assertString(goog.string.Const.unwrap(e3), "must provide justification"), goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e3)), "must provide non-empty justification"), goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(t2);
      }, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(e3, t2) {
        return goog.asserts.assertString(goog.string.Const.unwrap(e3), "must provide justification"), goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e3)), "must provide non-empty justification"), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(t2);
      }, goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(e3, t2) {
        return goog.asserts.assertString(goog.string.Const.unwrap(e3), "must provide justification"), goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e3)), "must provide non-empty justification"), goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(t2);
      }, goog.dom.asserts = {}, goog.dom.asserts.assertIsLocation = function(e3) {
        if (goog.asserts.ENABLE_ASSERTS) {
          var t2 = goog.dom.asserts.getWindow_(e3);
          t2 && (!e3 || !(e3 instanceof t2.Location) && e3 instanceof t2.Element) && goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(e3));
        }
        return e3;
      }, goog.dom.asserts.assertIsElementType_ = function(e3, t2) {
        if (goog.asserts.ENABLE_ASSERTS) {
          var o = goog.dom.asserts.getWindow_(e3);
          o && o[t2] !== void 0 && (e3 && (e3 instanceof o[t2] || !(e3 instanceof o.Location || e3 instanceof o.Element)) || goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s", t2, goog.dom.asserts.debugStringForType_(e3)));
        }
        return e3;
      }, goog.dom.asserts.assertIsHTMLAnchorElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLAnchorElement");
      }, goog.dom.asserts.assertIsHTMLButtonElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLButtonElement");
      }, goog.dom.asserts.assertIsHTMLLinkElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLLinkElement");
      }, goog.dom.asserts.assertIsHTMLImageElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLImageElement");
      }, goog.dom.asserts.assertIsHTMLAudioElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLAudioElement");
      }, goog.dom.asserts.assertIsHTMLVideoElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLVideoElement");
      }, goog.dom.asserts.assertIsHTMLInputElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLInputElement");
      }, goog.dom.asserts.assertIsHTMLTextAreaElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLTextAreaElement");
      }, goog.dom.asserts.assertIsHTMLCanvasElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLCanvasElement");
      }, goog.dom.asserts.assertIsHTMLEmbedElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLEmbedElement");
      }, goog.dom.asserts.assertIsHTMLFormElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLFormElement");
      }, goog.dom.asserts.assertIsHTMLFrameElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLFrameElement");
      }, goog.dom.asserts.assertIsHTMLIFrameElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLIFrameElement");
      }, goog.dom.asserts.assertIsHTMLObjectElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLObjectElement");
      }, goog.dom.asserts.assertIsHTMLScriptElement = function(e3) {
        return goog.dom.asserts.assertIsElementType_(e3, "HTMLScriptElement");
      }, goog.dom.asserts.debugStringForType_ = function(e3) {
        if (!goog.isObject(e3))
          return e3 === void 0 ? "undefined" : e3 === null ? "null" : typeof e3;
        try {
          return e3.constructor.displayName || e3.constructor.name || Object.prototype.toString.call(e3);
        } catch (e4) {
          return "<object could not be stringified>";
        }
      }, goog.dom.asserts.getWindow_ = function(e3) {
        try {
          var t2 = e3 && e3.ownerDocument, o = t2 && (t2.defaultView || t2.parentWindow);
          if ((o = o || goog.global).Element && o.Location)
            return o;
        } catch (e4) {
        }
        return null;
      }, goog.functions = {}, goog.functions.constant = function(e3) {
        return function() {
          return e3;
        };
      }, goog.functions.FALSE = function() {
        return false;
      }, goog.functions.TRUE = function() {
        return true;
      }, goog.functions.NULL = function() {
        return null;
      }, goog.functions.identity = function(e3, t2) {
        return e3;
      }, goog.functions.error = function(e3) {
        return function() {
          throw Error(e3);
        };
      }, goog.functions.fail = function(e3) {
        return function() {
          throw e3;
        };
      }, goog.functions.lock = function(e3, t2) {
        return t2 = t2 || 0, function() {
          return e3.apply(this, Array.prototype.slice.call(arguments, 0, t2));
        };
      }, goog.functions.nth = function(e3) {
        return function() {
          return arguments[e3];
        };
      }, goog.functions.partialRight = function(e3, t2) {
        var o = Array.prototype.slice.call(arguments, 1);
        return function() {
          var t3 = Array.prototype.slice.call(arguments);
          return t3.push.apply(t3, o), e3.apply(this, t3);
        };
      }, goog.functions.withReturnValue = function(e3, t2) {
        return goog.functions.sequence(e3, goog.functions.constant(t2));
      }, goog.functions.equalTo = function(e3, t2) {
        return function(o) {
          return t2 ? e3 == o : e3 === o;
        };
      }, goog.functions.compose = function(e3, t2) {
        var o = arguments, r2 = o.length;
        return function() {
          var e4;
          r2 && (e4 = o[r2 - 1].apply(this, arguments));
          for (var t3 = r2 - 2; 0 <= t3; t3--)
            e4 = o[t3].call(this, e4);
          return e4;
        };
      }, goog.functions.sequence = function(e3) {
        var t2 = arguments, o = t2.length;
        return function() {
          for (var e4, r2 = 0; r2 < o; r2++)
            e4 = t2[r2].apply(this, arguments);
          return e4;
        };
      }, goog.functions.and = function(e3) {
        var t2 = arguments, o = t2.length;
        return function() {
          for (var e4 = 0; e4 < o; e4++)
            if (!t2[e4].apply(this, arguments))
              return false;
          return true;
        };
      }, goog.functions.or = function(e3) {
        var t2 = arguments, o = t2.length;
        return function() {
          for (var e4 = 0; e4 < o; e4++)
            if (t2[e4].apply(this, arguments))
              return true;
          return false;
        };
      }, goog.functions.not = function(e3) {
        return function() {
          return !e3.apply(this, arguments);
        };
      }, goog.functions.create = function(e3, t2) {
        var o = function() {
        };
        return o.prototype = e3.prototype, o = new o(), e3.apply(o, Array.prototype.slice.call(arguments, 1)), o;
      }, goog.functions.CACHE_RETURN_VALUE = true, goog.functions.cacheReturnValue = function(e3) {
        var t2, o = false;
        return function() {
          return goog.functions.CACHE_RETURN_VALUE ? (o || (t2 = e3(), o = true), t2) : e3();
        };
      }, goog.functions.once = function(e3) {
        var t2 = e3;
        return function() {
          if (t2) {
            var e4 = t2;
            t2 = null, e4();
          }
        };
      }, goog.functions.debounce = function(e3, t2, o) {
        var r2 = 0;
        return function(s3) {
          goog.global.clearTimeout(r2);
          var n = arguments;
          r2 = goog.global.setTimeout(function() {
            e3.apply(o, n);
          }, t2);
        };
      }, goog.functions.throttle = function(e3, t2, o) {
        var r2 = 0, s3 = false, n = [], i2 = function() {
          r2 = 0, s3 && (s3 = false, a2());
        }, a2 = function() {
          r2 = goog.global.setTimeout(i2, t2), e3.apply(o, n);
        };
        return function(e4) {
          n = arguments, r2 ? s3 = true : a2();
        };
      }, goog.functions.rateLimit = function(e3, t2, o) {
        var r2 = 0, s3 = function() {
          r2 = 0;
        };
        return function(n) {
          r2 || (r2 = goog.global.setTimeout(s3, t2), e3.apply(o, arguments));
        };
      }, goog.dom.safe = {}, goog.dom.safe.InsertAdjacentHtmlPosition = { AFTERBEGIN: "afterbegin", AFTEREND: "afterend", BEFOREBEGIN: "beforebegin", BEFOREEND: "beforeend" }, goog.dom.safe.insertAdjacentHtml = function(e3, t2, o) {
        e3.insertAdjacentHTML(t2, goog.html.SafeHtml.unwrapTrustedHTML(o));
      }, goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = { MATH: true, SCRIPT: true, STYLE: true, SVG: true, TEMPLATE: true }, goog.dom.safe.isInnerHtmlCleanupRecursive_ = goog.functions.cacheReturnValue(function() {
        if (goog.DEBUG && typeof document == "undefined")
          return false;
        var e3 = document.createElement("div"), t2 = document.createElement("div");
        return t2.appendChild(document.createElement("div")), e3.appendChild(t2), !(goog.DEBUG && !e3.firstChild) && (t2 = e3.firstChild.firstChild, e3.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY), !t2.parentElement);
      }), goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse = function(e3, t2) {
        if (goog.dom.safe.isInnerHtmlCleanupRecursive_())
          for (; e3.lastChild; )
            e3.removeChild(e3.lastChild);
        e3.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(t2);
      }, goog.dom.safe.setInnerHtml = function(e3, t2) {
        if (goog.asserts.ENABLE_ASSERTS) {
          var o = e3.tagName.toUpperCase();
          if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[o])
            throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + e3.tagName + ".");
        }
        goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(e3, t2);
      }, goog.dom.safe.setOuterHtml = function(e3, t2) {
        e3.outerHTML = goog.html.SafeHtml.unwrapTrustedHTML(t2);
      }, goog.dom.safe.setFormElementAction = function(e3, t2) {
        t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), goog.dom.asserts.assertIsHTMLFormElement(e3).action = goog.html.SafeUrl.unwrapTrustedURL(t2);
      }, goog.dom.safe.setButtonFormAction = function(e3, t2) {
        t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), goog.dom.asserts.assertIsHTMLButtonElement(e3).formAction = goog.html.SafeUrl.unwrapTrustedURL(t2);
      }, goog.dom.safe.setInputFormAction = function(e3, t2) {
        t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), goog.dom.asserts.assertIsHTMLInputElement(e3).formAction = goog.html.SafeUrl.unwrapTrustedURL(t2);
      }, goog.dom.safe.setStyle = function(e3, t2) {
        e3.style.cssText = goog.html.SafeStyle.unwrap(t2);
      }, goog.dom.safe.documentWrite = function(e3, t2) {
        e3.write(goog.html.SafeHtml.unwrapTrustedHTML(t2));
      }, goog.dom.safe.setAnchorHref = function(e3, t2) {
        goog.dom.asserts.assertIsHTMLAnchorElement(e3), t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), e3.href = goog.html.SafeUrl.unwrapTrustedURL(t2);
      }, goog.dom.safe.setImageSrc = function(e3, t2) {
        if (goog.dom.asserts.assertIsHTMLImageElement(e3), !(t2 instanceof goog.html.SafeUrl)) {
          var o = /^data:image\//i.test(t2);
          t2 = goog.html.SafeUrl.sanitizeAssertUnchanged(t2, o);
        }
        e3.src = goog.html.SafeUrl.unwrapTrustedURL(t2);
      }, goog.dom.safe.setAudioSrc = function(e3, t2) {
        if (goog.dom.asserts.assertIsHTMLAudioElement(e3), !(t2 instanceof goog.html.SafeUrl)) {
          var o = /^data:audio\//i.test(t2);
          t2 = goog.html.SafeUrl.sanitizeAssertUnchanged(t2, o);
        }
        e3.src = goog.html.SafeUrl.unwrapTrustedURL(t2);
      }, goog.dom.safe.setVideoSrc = function(e3, t2) {
        if (goog.dom.asserts.assertIsHTMLVideoElement(e3), !(t2 instanceof goog.html.SafeUrl)) {
          var o = /^data:video\//i.test(t2);
          t2 = goog.html.SafeUrl.sanitizeAssertUnchanged(t2, o);
        }
        e3.src = goog.html.SafeUrl.unwrapTrustedURL(t2);
      }, goog.dom.safe.setEmbedSrc = function(e3, t2) {
        goog.dom.asserts.assertIsHTMLEmbedElement(e3), e3.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(t2);
      }, goog.dom.safe.setFrameSrc = function(e3, t2) {
        goog.dom.asserts.assertIsHTMLFrameElement(e3), e3.src = goog.html.TrustedResourceUrl.unwrapTrustedURL(t2);
      }, goog.dom.safe.setIframeSrc = function(e3, t2) {
        goog.dom.asserts.assertIsHTMLIFrameElement(e3), e3.src = goog.html.TrustedResourceUrl.unwrapTrustedURL(t2);
      }, goog.dom.safe.setIframeSrcdoc = function(e3, t2) {
        goog.dom.asserts.assertIsHTMLIFrameElement(e3), e3.srcdoc = goog.html.SafeHtml.unwrapTrustedHTML(t2);
      }, goog.dom.safe.setLinkHrefAndRel = function(e3, t2, o) {
        goog.dom.asserts.assertIsHTMLLinkElement(e3), e3.rel = o, goog.string.internal.caseInsensitiveContains(o, "stylesheet") ? (goog.asserts.assert(t2 instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'), e3.href = goog.html.TrustedResourceUrl.unwrapTrustedURL(t2)) : e3.href = t2 instanceof goog.html.TrustedResourceUrl ? goog.html.TrustedResourceUrl.unwrapTrustedURL(t2) : t2 instanceof goog.html.SafeUrl ? goog.html.SafeUrl.unwrapTrustedURL(t2) : goog.html.SafeUrl.unwrapTrustedURL(goog.html.SafeUrl.sanitizeAssertUnchanged(t2));
      }, goog.dom.safe.setObjectData = function(e3, t2) {
        goog.dom.asserts.assertIsHTMLObjectElement(e3), e3.data = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(t2);
      }, goog.dom.safe.setScriptSrc = function(e3, t2) {
        goog.dom.asserts.assertIsHTMLScriptElement(e3), e3.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(t2), (t2 = goog.getScriptNonce()) && e3.setAttribute("nonce", t2);
      }, goog.dom.safe.setScriptContent = function(e3, t2) {
        goog.dom.asserts.assertIsHTMLScriptElement(e3), e3.text = goog.html.SafeScript.unwrapTrustedScript(t2), (t2 = goog.getScriptNonce()) && e3.setAttribute("nonce", t2);
      }, goog.dom.safe.setLocationHref = function(e3, t2) {
        goog.dom.asserts.assertIsLocation(e3), t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), e3.href = goog.html.SafeUrl.unwrapTrustedURL(t2);
      }, goog.dom.safe.assignLocation = function(e3, t2) {
        goog.dom.asserts.assertIsLocation(e3), t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), e3.assign(goog.html.SafeUrl.unwrapTrustedURL(t2));
      }, goog.dom.safe.replaceLocation = function(e3, t2) {
        goog.dom.asserts.assertIsLocation(e3), t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), e3.replace(goog.html.SafeUrl.unwrapTrustedURL(t2));
      }, goog.dom.safe.openInWindow = function(e3, t2, o, r2, s3) {
        return e3 = e3 instanceof goog.html.SafeUrl ? e3 : goog.html.SafeUrl.sanitizeAssertUnchanged(e3), (t2 || goog.global).open(goog.html.SafeUrl.unwrapTrustedURL(e3), o ? goog.string.Const.unwrap(o) : "", r2, s3);
      }, goog.dom.safe.parseFromStringHtml = function(e3, t2) {
        return goog.dom.safe.parseFromString(e3, t2, "text/html");
      }, goog.dom.safe.parseFromString = function(e3, t2, o) {
        return e3.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(t2), o);
      }, goog.dom.safe.createImageFromBlob = function(e3) {
        if (!/^image\/.*/g.test(e3.type))
          throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");
        var t2 = goog.global.URL.createObjectURL(e3);
        return (e3 = new goog.global.Image()).onload = function() {
          goog.global.URL.revokeObjectURL(t2);
        }, goog.dom.safe.setImageSrc(e3, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."), t2)), e3;
      }, goog.string.DETECT_DOUBLE_ESCAPING = false, goog.string.FORCE_NON_DOM_HTML_UNESCAPING = false, goog.string.Unicode = { NBSP: "\xA0" }, goog.string.startsWith = goog.string.internal.startsWith, goog.string.endsWith = goog.string.internal.endsWith, goog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith, goog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith, goog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals, goog.string.subs = function(e3, t2) {
        for (var o = e3.split("%s"), r2 = "", s3 = Array.prototype.slice.call(arguments, 1); s3.length && 1 < o.length; )
          r2 += o.shift() + s3.shift();
        return r2 + o.join("%s");
      }, goog.string.collapseWhitespace = function(e3) {
        return e3.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
      }, goog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace, goog.string.isEmptyString = function(e3) {
        return e3.length == 0;
      }, goog.string.isEmpty = goog.string.isEmptyOrWhitespace, goog.string.isEmptyOrWhitespaceSafe = function(e3) {
        return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(e3));
      }, goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe, goog.string.isBreakingWhitespace = function(e3) {
        return !/[^\t\n\r ]/.test(e3);
      }, goog.string.isAlpha = function(e3) {
        return !/[^a-zA-Z]/.test(e3);
      }, goog.string.isNumeric = function(e3) {
        return !/[^0-9]/.test(e3);
      }, goog.string.isAlphaNumeric = function(e3) {
        return !/[^a-zA-Z0-9]/.test(e3);
      }, goog.string.isSpace = function(e3) {
        return e3 == " ";
      }, goog.string.isUnicodeChar = function(e3) {
        return e3.length == 1 && " " <= e3 && "~" >= e3 || "\x80" <= e3 && "\uFFFD" >= e3;
      }, goog.string.stripNewlines = function(e3) {
        return e3.replace(/(\r\n|\r|\n)+/g, " ");
      }, goog.string.canonicalizeNewlines = function(e3) {
        return e3.replace(/(\r\n|\r|\n)/g, "\n");
      }, goog.string.normalizeWhitespace = function(e3) {
        return e3.replace(/\xa0|\s/g, " ");
      }, goog.string.normalizeSpaces = function(e3) {
        return e3.replace(/\xa0|[ \t]+/g, " ");
      }, goog.string.collapseBreakingSpaces = function(e3) {
        return e3.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
      }, goog.string.trim = goog.string.internal.trim, goog.string.trimLeft = function(e3) {
        return e3.replace(/^[\s\xa0]+/, "");
      }, goog.string.trimRight = function(e3) {
        return e3.replace(/[\s\xa0]+$/, "");
      }, goog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare, goog.string.numberAwareCompare_ = function(e3, t2, o) {
        if (e3 == t2)
          return 0;
        if (!e3)
          return -1;
        if (!t2)
          return 1;
        for (var r2 = e3.toLowerCase().match(o), s3 = t2.toLowerCase().match(o), n = Math.min(r2.length, s3.length), i2 = 0; i2 < n; i2++) {
          o = r2[i2];
          var a2 = s3[i2];
          if (o != a2)
            return e3 = parseInt(o, 10), !isNaN(e3) && (t2 = parseInt(a2, 10), !isNaN(t2) && e3 - t2) ? e3 - t2 : o < a2 ? -1 : 1;
        }
        return r2.length != s3.length ? r2.length - s3.length : e3 < t2 ? -1 : 1;
      }, goog.string.intAwareCompare = function(e3, t2) {
        return goog.string.numberAwareCompare_(e3, t2, /\d+|\D+/g);
      }, goog.string.floatAwareCompare = function(e3, t2) {
        return goog.string.numberAwareCompare_(e3, t2, /\d+|\.\d+|\D+/g);
      }, goog.string.numerateCompare = goog.string.floatAwareCompare, goog.string.urlEncode = function(e3) {
        return encodeURIComponent(String(e3));
      }, goog.string.urlDecode = function(e3) {
        return decodeURIComponent(e3.replace(/\+/g, " "));
      }, goog.string.newLineToBr = goog.string.internal.newLineToBr, goog.string.htmlEscape = function(e3, t2) {
        return e3 = goog.string.internal.htmlEscape(e3, t2), goog.string.DETECT_DOUBLE_ESCAPING && (e3 = e3.replace(goog.string.E_RE_, "&#101;")), e3;
      }, goog.string.E_RE_ = /e/g, goog.string.unescapeEntities = function(e3) {
        return goog.string.contains(e3, "&") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(e3) : goog.string.unescapePureXmlEntities_(e3) : e3;
      }, goog.string.unescapeEntitiesWithDocument = function(e3, t2) {
        return goog.string.contains(e3, "&") ? goog.string.unescapeEntitiesUsingDom_(e3, t2) : e3;
      }, goog.string.unescapeEntitiesUsingDom_ = function(e3, t2) {
        var o = { "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"' }, r2 = t2 ? t2.createElement("div") : goog.global.document.createElement("div");
        return e3.replace(goog.string.HTML_ENTITY_PATTERN_, function(e4, t3) {
          var s3 = o[e4];
          return s3 || (t3.charAt(0) == "#" && (t3 = Number("0" + t3.substr(1)), isNaN(t3) || (s3 = String.fromCharCode(t3))), s3 || (goog.dom.safe.setInnerHtml(r2, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."), e4 + " ")), s3 = r2.firstChild.nodeValue.slice(0, -1)), o[e4] = s3);
        });
      }, goog.string.unescapePureXmlEntities_ = function(e3) {
        return e3.replace(/&([^;]+);/g, function(e4, t2) {
          switch (t2) {
            case "amp":
              return "&";
            case "lt":
              return "<";
            case "gt":
              return ">";
            case "quot":
              return '"';
            default:
              return t2.charAt(0) != "#" || (t2 = Number("0" + t2.substr(1)), isNaN(t2)) ? e4 : String.fromCharCode(t2);
          }
        });
      }, goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g, goog.string.whitespaceEscape = function(e3, t2) {
        return goog.string.newLineToBr(e3.replace(/  /g, " &#160;"), t2);
      }, goog.string.preserveSpaces = function(e3) {
        return e3.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
      }, goog.string.stripQuotes = function(e3, t2) {
        for (var o = t2.length, r2 = 0; r2 < o; r2++) {
          var s3 = o == 1 ? t2 : t2.charAt(r2);
          if (e3.charAt(0) == s3 && e3.charAt(e3.length - 1) == s3)
            return e3.substring(1, e3.length - 1);
        }
        return e3;
      }, goog.string.truncate = function(e3, t2, o) {
        return o && (e3 = goog.string.unescapeEntities(e3)), e3.length > t2 && (e3 = e3.substring(0, t2 - 3) + "..."), o && (e3 = goog.string.htmlEscape(e3)), e3;
      }, goog.string.truncateMiddle = function(e3, t2, o, r2) {
        if (o && (e3 = goog.string.unescapeEntities(e3)), r2 && e3.length > t2) {
          r2 > t2 && (r2 = t2);
          var s3 = e3.length - r2;
          e3 = e3.substring(0, t2 - r2) + "..." + e3.substring(s3);
        } else
          e3.length > t2 && (r2 = Math.floor(t2 / 2), s3 = e3.length - r2, e3 = e3.substring(0, r2 + t2 % 2) + "..." + e3.substring(s3));
        return o && (e3 = goog.string.htmlEscape(e3)), e3;
      }, goog.string.specialEscapeChars_ = { "\0": "\\0", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "	": "\\t", "\v": "\\x0B", '"': '\\"', "\\": "\\\\", "<": "\\u003C" }, goog.string.jsEscapeCache_ = { "'": "\\'" }, goog.string.quote = function(e3) {
        e3 = String(e3);
        for (var t2 = ['"'], o = 0; o < e3.length; o++) {
          var r2 = e3.charAt(o), s3 = r2.charCodeAt(0);
          t2[o + 1] = goog.string.specialEscapeChars_[r2] || (31 < s3 && 127 > s3 ? r2 : goog.string.escapeChar(r2));
        }
        return t2.push('"'), t2.join("");
      }, goog.string.escapeString = function(e3) {
        for (var t2 = [], o = 0; o < e3.length; o++)
          t2[o] = goog.string.escapeChar(e3.charAt(o));
        return t2.join("");
      }, goog.string.escapeChar = function(e3) {
        if (e3 in goog.string.jsEscapeCache_)
          return goog.string.jsEscapeCache_[e3];
        if (e3 in goog.string.specialEscapeChars_)
          return goog.string.jsEscapeCache_[e3] = goog.string.specialEscapeChars_[e3];
        var t2 = e3.charCodeAt(0);
        if (31 < t2 && 127 > t2)
          var o = e3;
        else
          256 > t2 ? (o = "\\x", (16 > t2 || 256 < t2) && (o += "0")) : (o = "\\u", 4096 > t2 && (o += "0")), o += t2.toString(16).toUpperCase();
        return goog.string.jsEscapeCache_[e3] = o;
      }, goog.string.contains = goog.string.internal.contains, goog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains, goog.string.countOf = function(e3, t2) {
        return e3 && t2 ? e3.split(t2).length - 1 : 0;
      }, goog.string.removeAt = function(e3, t2, o) {
        var r2 = e3;
        return 0 <= t2 && t2 < e3.length && 0 < o && (r2 = e3.substr(0, t2) + e3.substr(t2 + o, e3.length - t2 - o)), r2;
      }, goog.string.remove = function(e3, t2) {
        return e3.replace(t2, "");
      }, goog.string.removeAll = function(e3, t2) {
        return t2 = new RegExp(goog.string.regExpEscape(t2), "g"), e3.replace(t2, "");
      }, goog.string.replaceAll = function(e3, t2, o) {
        return t2 = new RegExp(goog.string.regExpEscape(t2), "g"), e3.replace(t2, o.replace(/\$/g, "$$$$"));
      }, goog.string.regExpEscape = function(e3) {
        return String(e3).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
      }, goog.string.repeat = String.prototype.repeat ? function(e3, t2) {
        return e3.repeat(t2);
      } : function(e3, t2) {
        return Array(t2 + 1).join(e3);
      }, goog.string.padNumber = function(e3, t2, o) {
        return (o = (e3 = goog.isDef(o) ? e3.toFixed(o) : String(e3)).indexOf(".")) == -1 && (o = e3.length), goog.string.repeat("0", Math.max(0, t2 - o)) + e3;
      }, goog.string.makeSafe = function(e3) {
        return e3 == null ? "" : String(e3);
      }, goog.string.buildString = function(e3) {
        return Array.prototype.join.call(arguments, "");
      }, goog.string.getRandomString = function() {
        return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);
      }, goog.string.compareVersions = goog.string.internal.compareVersions, goog.string.hashCode = function(e3) {
        for (var t2 = 0, o = 0; o < e3.length; ++o)
          t2 = 31 * t2 + e3.charCodeAt(o) >>> 0;
        return t2;
      }, goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0, goog.string.createUniqueString = function() {
        return "goog_" + goog.string.uniqueStringCounter_++;
      }, goog.string.toNumber = function(e3) {
        var t2 = Number(e3);
        return t2 == 0 && goog.string.isEmptyOrWhitespace(e3) ? NaN : t2;
      }, goog.string.isLowerCamelCase = function(e3) {
        return /^[a-z]+([A-Z][a-z]*)*$/.test(e3);
      }, goog.string.isUpperCamelCase = function(e3) {
        return /^([A-Z][a-z]*)+$/.test(e3);
      }, goog.string.toCamelCase = function(e3) {
        return String(e3).replace(/\-([a-z])/g, function(e4, t2) {
          return t2.toUpperCase();
        });
      }, goog.string.toSelectorCase = function(e3) {
        return String(e3).replace(/([A-Z])/g, "-$1").toLowerCase();
      }, goog.string.toTitleCase = function(e3, t2) {
        return t2 = goog.isString(t2) ? goog.string.regExpEscape(t2) : "\\s", e3.replace(new RegExp("(^" + (t2 ? "|[" + t2 + "]+" : "") + ")([a-z])", "g"), function(e4, t3, o) {
          return t3 + o.toUpperCase();
        });
      }, goog.string.capitalize = function(e3) {
        return String(e3.charAt(0)).toUpperCase() + String(e3.substr(1)).toLowerCase();
      }, goog.string.parseInt = function(e3) {
        return isFinite(e3) && (e3 = String(e3)), goog.isString(e3) ? /^\s*-?0x/i.test(e3) ? parseInt(e3, 16) : parseInt(e3, 10) : NaN;
      }, goog.string.splitLimit = function(e3, t2, o) {
        e3 = e3.split(t2);
        for (var r2 = []; 0 < o && e3.length; )
          r2.push(e3.shift()), o--;
        return e3.length && r2.push(e3.join(t2)), r2;
      }, goog.string.lastComponent = function(e3, t2) {
        if (!t2)
          return e3;
        typeof t2 == "string" && (t2 = [t2]);
        for (var o = -1, r2 = 0; r2 < t2.length; r2++)
          if (t2[r2] != "") {
            var s3 = e3.lastIndexOf(t2[r2]);
            s3 > o && (o = s3);
          }
        return o == -1 ? e3 : e3.slice(o + 1);
      }, goog.string.editDistance = function(e3, t2) {
        var o = [], r2 = [];
        if (e3 == t2)
          return 0;
        if (!e3.length || !t2.length)
          return Math.max(e3.length, t2.length);
        for (var s3 = 0; s3 < t2.length + 1; s3++)
          o[s3] = s3;
        for (s3 = 0; s3 < e3.length; s3++) {
          r2[0] = s3 + 1;
          for (var n = 0; n < t2.length; n++)
            r2[n + 1] = Math.min(r2[n] + 1, o[n + 1] + 1, o[n] + Number(e3[s3] != t2[n]));
          for (n = 0; n < o.length; n++)
            o[n] = r2[n];
        }
        return r2[t2.length];
      }, goog.labs.userAgent.platform = {}, goog.labs.userAgent.platform.isAndroid = function() {
        return goog.labs.userAgent.util.matchUserAgent("Android");
      }, goog.labs.userAgent.platform.isIpod = function() {
        return goog.labs.userAgent.util.matchUserAgent("iPod");
      }, goog.labs.userAgent.platform.isIphone = function() {
        return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
      }, goog.labs.userAgent.platform.isIpad = function() {
        return goog.labs.userAgent.util.matchUserAgent("iPad");
      }, goog.labs.userAgent.platform.isIos = function() {
        return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
      }, goog.labs.userAgent.platform.isMacintosh = function() {
        return goog.labs.userAgent.util.matchUserAgent("Macintosh");
      }, goog.labs.userAgent.platform.isLinux = function() {
        return goog.labs.userAgent.util.matchUserAgent("Linux");
      }, goog.labs.userAgent.platform.isWindows = function() {
        return goog.labs.userAgent.util.matchUserAgent("Windows");
      }, goog.labs.userAgent.platform.isChromeOS = function() {
        return goog.labs.userAgent.util.matchUserAgent("CrOS");
      }, goog.labs.userAgent.platform.isChromecast = function() {
        return goog.labs.userAgent.util.matchUserAgent("CrKey");
      }, goog.labs.userAgent.platform.isKaiOS = function() {
        return goog.labs.userAgent.util.matchUserAgentIgnoreCase("KaiOS");
      }, goog.labs.userAgent.platform.isGo2Phone = function() {
        return goog.labs.userAgent.util.matchUserAgentIgnoreCase("GAFP");
      }, goog.labs.userAgent.platform.getVersion = function() {
        var e3 = goog.labs.userAgent.util.getUserAgent(), t2 = "";
        return goog.labs.userAgent.platform.isWindows() ? t2 = (e3 = (t2 = /Windows (?:NT|Phone) ([0-9.]+)/).exec(e3)) ? e3[1] : "0.0" : goog.labs.userAgent.platform.isIos() ? t2 = (e3 = (t2 = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/).exec(e3)) && e3[1].replace(/_/g, ".") : goog.labs.userAgent.platform.isMacintosh() ? t2 = (e3 = (t2 = /Mac OS X ([0-9_.]+)/).exec(e3)) ? e3[1].replace(/_/g, ".") : "10" : goog.labs.userAgent.platform.isKaiOS() ? t2 = (e3 = (t2 = /(?:KaiOS)\/(\S+)/i).exec(e3)) && e3[1] : goog.labs.userAgent.platform.isAndroid() ? t2 = (e3 = (t2 = /Android\s+([^\);]+)(\)|;)/).exec(e3)) && e3[1] : goog.labs.userAgent.platform.isChromeOS() && (t2 = (e3 = (t2 = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/).exec(e3)) && e3[1]), t2 || "";
      }, goog.labs.userAgent.platform.isVersionOrHigher = function(e3) {
        return 0 <= goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), e3);
      }, goog.reflect = {}, goog.reflect.object = function(e3, t2) {
        return t2;
      }, goog.reflect.objectProperty = function(e3, t2) {
        return e3;
      }, goog.reflect.sinkValue = function(e3) {
        return goog.reflect.sinkValue[" "](e3), e3;
      }, goog.reflect.sinkValue[" "] = goog.nullFunction, goog.reflect.canAccessProperty = function(e3, t2) {
        try {
          return goog.reflect.sinkValue(e3[t2]), true;
        } catch (e4) {
        }
        return false;
      }, goog.reflect.cache = function(e3, t2, o, r2) {
        return r2 = r2 ? r2(t2) : t2, Object.prototype.hasOwnProperty.call(e3, r2) ? e3[r2] : e3[r2] = o(t2);
      }, goog.labs.userAgent.engine = {}, goog.labs.userAgent.engine.isPresto = function() {
        return goog.labs.userAgent.util.matchUserAgent("Presto");
      }, goog.labs.userAgent.engine.isTrident = function() {
        return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
      }, goog.labs.userAgent.engine.isEdge = function() {
        return goog.labs.userAgent.util.matchUserAgent("Edge");
      }, goog.labs.userAgent.engine.isWebKit = function() {
        return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
      }, goog.labs.userAgent.engine.isGecko = function() {
        return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
      }, goog.labs.userAgent.engine.getVersion = function() {
        var e3 = goog.labs.userAgent.util.getUserAgent();
        if (e3) {
          e3 = goog.labs.userAgent.util.extractVersionTuples(e3);
          var t2, o = goog.labs.userAgent.engine.getEngineTuple_(e3);
          if (o)
            return o[0] == "Gecko" ? goog.labs.userAgent.engine.getVersionForKey_(e3, "Firefox") : o[1];
          if ((e3 = e3[0]) && (t2 = e3[2]) && (t2 = /Trident\/([^\s;]+)/.exec(t2)))
            return t2[1];
        }
        return "";
      }, goog.labs.userAgent.engine.getEngineTuple_ = function(e3) {
        if (!goog.labs.userAgent.engine.isEdge())
          return e3[1];
        for (var t2 = 0; t2 < e3.length; t2++) {
          var o = e3[t2];
          if (o[0] == "Edge")
            return o;
        }
      }, goog.labs.userAgent.engine.isVersionOrHigher = function(e3) {
        return 0 <= goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), e3);
      }, goog.labs.userAgent.engine.getVersionForKey_ = function(e3, t2) {
        return (e3 = goog.array.find(e3, function(e4) {
          return t2 == e4[0];
        })) && e3[1] || "";
      }, goog.userAgent = {}, goog.userAgent.ASSUME_IE = false, goog.userAgent.ASSUME_EDGE = false, goog.userAgent.ASSUME_GECKO = false, goog.userAgent.ASSUME_WEBKIT = false, goog.userAgent.ASSUME_MOBILE_WEBKIT = false, goog.userAgent.ASSUME_OPERA = false, goog.userAgent.ASSUME_ANY_VERSION = false, goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA, goog.userAgent.getUserAgentString = function() {
        return goog.labs.userAgent.util.getUserAgent();
      }, goog.userAgent.getNavigatorTyped = function() {
        return goog.global.navigator || null;
      }, goog.userAgent.getNavigator = function() {
        return goog.userAgent.getNavigatorTyped();
      }, goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera(), goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE(), goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge(), goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE, goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
      goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit(), goog.userAgent.isMobile_ = function() {
        return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
      }, goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_(), goog.userAgent.SAFARI = goog.userAgent.WEBKIT, goog.userAgent.determinePlatform_ = function() {
        var e3 = goog.userAgent.getNavigatorTyped();
        return e3 && e3.platform || "";
      }, goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_(), goog.userAgent.ASSUME_MAC = false, goog.userAgent.ASSUME_WINDOWS = false, goog.userAgent.ASSUME_LINUX = false, goog.userAgent.ASSUME_X11 = false, goog.userAgent.ASSUME_ANDROID = false, goog.userAgent.ASSUME_IPHONE = false, goog.userAgent.ASSUME_IPAD = false, goog.userAgent.ASSUME_IPOD = false, goog.userAgent.ASSUME_KAIOS = false, goog.userAgent.ASSUME_GO2PHONE = false, goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD, goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh(), goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows(), goog.userAgent.isLegacyLinux_ = function() {
        return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
      }, goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_(), goog.userAgent.isX11_ = function() {
        var e3 = goog.userAgent.getNavigatorTyped();
        return !!e3 && goog.string.contains(e3.appVersion || "", "X11");
      }, goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_(), goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid(), goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone(), goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad(), goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod(), goog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIos(), goog.userAgent.KAIOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_KAIOS : goog.labs.userAgent.platform.isKaiOS(), goog.userAgent.GO2PHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_GO2PHONE : goog.labs.userAgent.platform.isGo2Phone(), goog.userAgent.determineVersion_ = function() {
        var e3 = "", t2 = goog.userAgent.getVersionRegexResult_();
        return t2 && (e3 = t2 ? t2[1] : ""), goog.userAgent.IE && ((t2 = goog.userAgent.getDocumentMode_()) != null && t2 > parseFloat(e3)) ? String(t2) : e3;
      }, goog.userAgent.getVersionRegexResult_ = function() {
        var e3 = goog.userAgent.getUserAgentString();
        return goog.userAgent.GECKO ? /rv:([^\);]+)(\)|;)/.exec(e3) : goog.userAgent.EDGE ? /Edge\/([\d\.]+)/.exec(e3) : goog.userAgent.IE ? /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(e3) : goog.userAgent.WEBKIT ? /WebKit\/(\S+)/.exec(e3) : goog.userAgent.OPERA ? /(?:Version)[ \/]?(\S+)/.exec(e3) : void 0;
      }, goog.userAgent.getDocumentMode_ = function() {
        var e3 = goog.global.document;
        return e3 ? e3.documentMode : void 0;
      }, goog.userAgent.VERSION = goog.userAgent.determineVersion_(), goog.userAgent.compare = function(e3, t2) {
        return goog.string.compareVersions(e3, t2);
      }, goog.userAgent.isVersionOrHigherCache_ = {}, goog.userAgent.isVersionOrHigher = function(e3) {
        return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, e3, function() {
          return 0 <= goog.string.compareVersions(goog.userAgent.VERSION, e3);
        });
      }, goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher, goog.userAgent.isDocumentModeOrHigher = function(e3) {
        return Number(goog.userAgent.DOCUMENT_MODE) >= e3;
      }, goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher, goog.userAgent.DOCUMENT_MODE = function() {
        if (goog.global.document && goog.userAgent.IE)
          return goog.userAgent.getDocumentMode_();
      }(), goog.userAgent.product = {}, goog.userAgent.product.ASSUME_FIREFOX = false, goog.userAgent.product.ASSUME_IPHONE = false, goog.userAgent.product.ASSUME_IPAD = false, goog.userAgent.product.ASSUME_ANDROID = false, goog.userAgent.product.ASSUME_CHROME = false, goog.userAgent.product.ASSUME_SAFARI = false, goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI, goog.userAgent.product.OPERA = goog.userAgent.OPERA, goog.userAgent.product.IE = goog.userAgent.IE, goog.userAgent.product.EDGE = goog.userAgent.EDGE, goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox(), goog.userAgent.product.isIphoneOrIpod_ = function() {
        return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();
      }, goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_(), goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad(), goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser(), goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome(), goog.userAgent.product.isSafariDesktop_ = function() {
        return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();
      }, goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_(), goog.crypt.base64 = {}, goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ + "+/=", goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ + "-_.", goog.crypt.base64.Alphabet = { DEFAULT: 0, NO_PADDING: 1, WEBSAFE: 2, WEBSAFE_DOT_PADDING: 3, WEBSAFE_NO_PADDING: 4 }, goog.crypt.base64.paddingChars_ = "=.", goog.crypt.base64.isPadding_ = function(e3) {
        return goog.string.contains(goog.crypt.base64.paddingChars_, e3);
      }, goog.crypt.base64.byteToCharMaps_ = {}, goog.crypt.base64.charToByteMap_ = null, goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI || goog.userAgent.OPERA, goog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || typeof goog.global.btoa == "function", goog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && typeof goog.global.atob == "function", goog.crypt.base64.encodeByteArray = function(e3, t2) {
        goog.asserts.assert(goog.isArrayLike(e3), "encodeByteArray takes an array as a parameter"), t2 === void 0 && (t2 = goog.crypt.base64.Alphabet.DEFAULT), goog.crypt.base64.init_(), t2 = goog.crypt.base64.byteToCharMaps_[t2];
        for (var o = [], r2 = 0; r2 < e3.length; r2 += 3) {
          var s3 = e3[r2], n = r2 + 1 < e3.length, i2 = n ? e3[r2 + 1] : 0, a2 = r2 + 2 < e3.length, g = a2 ? e3[r2 + 2] : 0, l = s3 >> 2;
          s3 = (3 & s3) << 4 | i2 >> 4, i2 = (15 & i2) << 2 | g >> 6, g &= 63, a2 || (g = 64, n || (i2 = 64)), o.push(t2[l], t2[s3], t2[i2] || "", t2[g] || "");
        }
        return o.join("");
      }, goog.crypt.base64.encodeString = function(e3, t2) {
        return goog.crypt.base64.HAS_NATIVE_ENCODE_ && !t2 ? goog.global.btoa(e3) : goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(e3), t2);
      }, goog.crypt.base64.decodeString = function(e3, t2) {
        if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !t2)
          return goog.global.atob(e3);
        var o = "";
        return goog.crypt.base64.decodeStringInternal_(e3, function(e4) {
          o += String.fromCharCode(e4);
        }), o;
      }, goog.crypt.base64.decodeStringToByteArray = function(e3, t2) {
        var o = [];
        return goog.crypt.base64.decodeStringInternal_(e3, function(e4) {
          o.push(e4);
        }), o;
      }, goog.crypt.base64.decodeStringToUint8Array = function(e3) {
        goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher("10"), "Browser does not support typed arrays");
        var t2 = e3.length, o = 3 * t2 / 4;
        o % 3 ? o = Math.floor(o) : goog.crypt.base64.isPadding_(e3[t2 - 1]) && (o = goog.crypt.base64.isPadding_(e3[t2 - 2]) ? o - 2 : o - 1);
        var r2 = new Uint8Array(o), s3 = 0;
        return goog.crypt.base64.decodeStringInternal_(e3, function(e4) {
          r2[s3++] = e4;
        }), r2.subarray(0, s3);
      }, goog.crypt.base64.decodeStringInternal_ = function(e3, t2) {
        function o(t3) {
          for (; r2 < e3.length; ) {
            var o2 = e3.charAt(r2++), s4 = goog.crypt.base64.charToByteMap_[o2];
            if (s4 != null)
              return s4;
            if (!goog.string.isEmptyOrWhitespace(o2))
              throw Error("Unknown base64 encoding at char: " + o2);
          }
          return t3;
        }
        goog.crypt.base64.init_();
        for (var r2 = 0; ; ) {
          var s3 = o(-1), n = o(0), i2 = o(64), a2 = o(64);
          if (a2 === 64 && s3 === -1)
            break;
          t2(s3 << 2 | n >> 4), i2 != 64 && (t2(n << 4 & 240 | i2 >> 2), a2 != 64 && t2(i2 << 6 & 192 | a2));
        }
      }, goog.crypt.base64.init_ = function() {
        if (!goog.crypt.base64.charToByteMap_) {
          goog.crypt.base64.charToByteMap_ = {};
          for (var e3 = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_.split(""), t2 = ["+/=", "+/", "-_=", "-_.", "-_"], o = 0; 5 > o; o++) {
            var r2 = e3.concat(t2[o].split(""));
            goog.crypt.base64.byteToCharMaps_[o] = r2;
            for (var s3 = 0; s3 < r2.length; s3++) {
              var n = r2[s3], i2 = goog.crypt.base64.charToByteMap_[n];
              i2 === void 0 ? goog.crypt.base64.charToByteMap_[n] = s3 : goog.asserts.assert(i2 === s3);
            }
          }
        }
      }, jspb.utils = {}, jspb.utils.split64Low = 0, jspb.utils.split64High = 0, jspb.utils.splitUint64 = function(e3) {
        var t2 = e3 >>> 0;
        e3 = Math.floor((e3 - t2) / jspb.BinaryConstants.TWO_TO_32) >>> 0, jspb.utils.split64Low = t2, jspb.utils.split64High = e3;
      }, jspb.utils.splitInt64 = function(e3) {
        var t2 = 0 > e3, o = (e3 = Math.abs(e3)) >>> 0;
        e3 = Math.floor((e3 - o) / jspb.BinaryConstants.TWO_TO_32), e3 >>>= 0, t2 && (e3 = ~e3 >>> 0, 4294967295 < (o = 1 + (~o >>> 0)) && (o = 0, 4294967295 < ++e3 && (e3 = 0))), jspb.utils.split64Low = o, jspb.utils.split64High = e3;
      }, jspb.utils.splitZigzag64 = function(e3) {
        var t2 = 0 > e3;
        e3 = 2 * Math.abs(e3), jspb.utils.splitUint64(e3), e3 = jspb.utils.split64Low;
        var o = jspb.utils.split64High;
        t2 && (e3 == 0 ? o == 0 ? o = e3 = 4294967295 : (o--, e3 = 4294967295) : e3--), jspb.utils.split64Low = e3, jspb.utils.split64High = o;
      }, jspb.utils.splitFloat32 = function(e3) {
        var t2 = 0 > e3 ? 1 : 0;
        if ((e3 = t2 ? -e3 : e3) === 0)
          0 < 1 / e3 ? (jspb.utils.split64High = 0, jspb.utils.split64Low = 0) : (jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483648);
        else if (isNaN(e3))
          jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483647;
        else if (e3 > jspb.BinaryConstants.FLOAT32_MAX)
          jspb.utils.split64High = 0, jspb.utils.split64Low = (t2 << 31 | 2139095040) >>> 0;
        else if (e3 < jspb.BinaryConstants.FLOAT32_MIN)
          e3 = Math.round(e3 / Math.pow(2, -149)), jspb.utils.split64High = 0, jspb.utils.split64Low = (t2 << 31 | e3) >>> 0;
        else {
          var o = Math.floor(Math.log(e3) / Math.LN2);
          e3 *= Math.pow(2, -o), e3 = 8388607 & Math.round(e3 * jspb.BinaryConstants.TWO_TO_23), jspb.utils.split64High = 0, jspb.utils.split64Low = (t2 << 31 | o + 127 << 23 | e3) >>> 0;
        }
      }, jspb.utils.splitFloat64 = function(e3) {
        var t2 = 0 > e3 ? 1 : 0;
        if ((e3 = t2 ? -e3 : e3) === 0)
          jspb.utils.split64High = 0 < 1 / e3 ? 0 : 2147483648, jspb.utils.split64Low = 0;
        else if (isNaN(e3))
          jspb.utils.split64High = 2147483647, jspb.utils.split64Low = 4294967295;
        else if (e3 > jspb.BinaryConstants.FLOAT64_MAX)
          jspb.utils.split64High = (t2 << 31 | 2146435072) >>> 0, jspb.utils.split64Low = 0;
        else if (e3 < jspb.BinaryConstants.FLOAT64_MIN) {
          var o = e3 / Math.pow(2, -1074);
          e3 = o / jspb.BinaryConstants.TWO_TO_32, jspb.utils.split64High = (t2 << 31 | e3) >>> 0, jspb.utils.split64Low = o >>> 0;
        } else {
          var r2 = 0;
          if (2 <= (o = e3))
            for (; 2 <= o && 1023 > r2; )
              r2++, o /= 2;
          else
            for (; 1 > o && -1022 < r2; )
              o *= 2, r2--;
          e3 = (o = e3 * Math.pow(2, -r2)) * jspb.BinaryConstants.TWO_TO_20 & 1048575, o = o * jspb.BinaryConstants.TWO_TO_52 >>> 0, jspb.utils.split64High = (t2 << 31 | r2 + 1023 << 20 | e3) >>> 0, jspb.utils.split64Low = o;
        }
      }, jspb.utils.splitHash64 = function(e3) {
        var t2 = e3.charCodeAt(0), o = e3.charCodeAt(1), r2 = e3.charCodeAt(2), s3 = e3.charCodeAt(3), n = e3.charCodeAt(4), i2 = e3.charCodeAt(5), a2 = e3.charCodeAt(6);
        e3 = e3.charCodeAt(7), jspb.utils.split64Low = t2 + (o << 8) + (r2 << 16) + (s3 << 24) >>> 0, jspb.utils.split64High = n + (i2 << 8) + (a2 << 16) + (e3 << 24) >>> 0;
      }, jspb.utils.joinUint64 = function(e3, t2) {
        return t2 * jspb.BinaryConstants.TWO_TO_32 + (e3 >>> 0);
      }, jspb.utils.joinInt64 = function(e3, t2) {
        var o = 2147483648 & t2;
        return o && (t2 = ~t2 >>> 0, (e3 = 1 + ~e3 >>> 0) == 0 && (t2 = t2 + 1 >>> 0)), e3 = jspb.utils.joinUint64(e3, t2), o ? -e3 : e3;
      }, jspb.utils.toZigzag64 = function(e3, t2, o) {
        var r2 = t2 >> 31;
        return o(e3 << 1 ^ r2, (t2 << 1 | e3 >>> 31) ^ r2);
      }, jspb.utils.joinZigzag64 = function(e3, t2) {
        return jspb.utils.fromZigzag64(e3, t2, jspb.utils.joinInt64);
      }, jspb.utils.fromZigzag64 = function(e3, t2, o) {
        var r2 = -(1 & e3);
        return o((e3 >>> 1 | t2 << 31) ^ r2, t2 >>> 1 ^ r2);
      }, jspb.utils.joinFloat32 = function(e3, t2) {
        t2 = 2 * (e3 >> 31) + 1;
        var o = e3 >>> 23 & 255;
        return e3 &= 8388607, o == 255 ? e3 ? NaN : 1 / 0 * t2 : o == 0 ? t2 * Math.pow(2, -149) * e3 : t2 * Math.pow(2, o - 150) * (e3 + Math.pow(2, 23));
      }, jspb.utils.joinFloat64 = function(e3, t2) {
        var o = 2 * (t2 >> 31) + 1, r2 = t2 >>> 20 & 2047;
        return e3 = jspb.BinaryConstants.TWO_TO_32 * (1048575 & t2) + e3, r2 == 2047 ? e3 ? NaN : 1 / 0 * o : r2 == 0 ? o * Math.pow(2, -1074) * e3 : o * Math.pow(2, r2 - 1075) * (e3 + jspb.BinaryConstants.TWO_TO_52);
      }, jspb.utils.joinHash64 = function(e3, t2) {
        return String.fromCharCode(e3 >>> 0 & 255, e3 >>> 8 & 255, e3 >>> 16 & 255, e3 >>> 24 & 255, t2 >>> 0 & 255, t2 >>> 8 & 255, t2 >>> 16 & 255, t2 >>> 24 & 255);
      }, jspb.utils.DIGITS = "0123456789abcdef".split(""), jspb.utils.ZERO_CHAR_CODE_ = 48, jspb.utils.A_CHAR_CODE_ = 97, jspb.utils.joinUnsignedDecimalString = function(e3, t2) {
        function o(e4, t3) {
          return e4 = e4 ? String(e4) : "", t3 ? "0000000".slice(e4.length) + e4 : e4;
        }
        if (2097151 >= t2)
          return "" + (jspb.BinaryConstants.TWO_TO_32 * t2 + e3);
        var r2 = (e3 >>> 24 | t2 << 8) >>> 0 & 16777215;
        return e3 = (16777215 & e3) + 6777216 * r2 + 6710656 * (t2 = t2 >> 16 & 65535), r2 += 8147497 * t2, t2 *= 2, 1e7 <= e3 && (r2 += Math.floor(e3 / 1e7), e3 %= 1e7), 1e7 <= r2 && (t2 += Math.floor(r2 / 1e7), r2 %= 1e7), o(t2, 0) + o(r2, t2) + o(e3, 1);
      }, jspb.utils.joinSignedDecimalString = function(e3, t2) {
        var o = 2147483648 & t2;
        return o && (t2 = ~t2 + ((e3 = 1 + ~e3 >>> 0) == 0 ? 1 : 0) >>> 0), e3 = jspb.utils.joinUnsignedDecimalString(e3, t2), o ? "-" + e3 : e3;
      }, jspb.utils.hash64ToDecimalString = function(e3, t2) {
        jspb.utils.splitHash64(e3), e3 = jspb.utils.split64Low;
        var o = jspb.utils.split64High;
        return t2 ? jspb.utils.joinSignedDecimalString(e3, o) : jspb.utils.joinUnsignedDecimalString(e3, o);
      }, jspb.utils.hash64ArrayToDecimalStrings = function(e3, t2) {
        for (var o = Array(e3.length), r2 = 0; r2 < e3.length; r2++)
          o[r2] = jspb.utils.hash64ToDecimalString(e3[r2], t2);
        return o;
      }, jspb.utils.decimalStringToHash64 = function(e3) {
        function t2(e4, t3) {
          for (var o2 = 0; 8 > o2 && (e4 !== 1 || 0 < t3); o2++)
            t3 = e4 * r2[o2] + t3, r2[o2] = 255 & t3, t3 >>>= 8;
        }
        goog.asserts.assert(0 < e3.length);
        var o = false;
        e3[0] === "-" && (o = true, e3 = e3.slice(1));
        for (var r2 = [0, 0, 0, 0, 0, 0, 0, 0], s3 = 0; s3 < e3.length; s3++)
          t2(10, e3.charCodeAt(s3) - jspb.utils.ZERO_CHAR_CODE_);
        return o && (function() {
          for (var e4 = 0; 8 > e4; e4++)
            r2[e4] = 255 & ~r2[e4];
        }(), t2(1, 1)), goog.crypt.byteArrayToString(r2);
      }, jspb.utils.splitDecimalString = function(e3) {
        jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(e3));
      }, jspb.utils.toHexDigit_ = function(e3) {
        return String.fromCharCode(10 > e3 ? jspb.utils.ZERO_CHAR_CODE_ + e3 : jspb.utils.A_CHAR_CODE_ - 10 + e3);
      }, jspb.utils.fromHexCharCode_ = function(e3) {
        return e3 >= jspb.utils.A_CHAR_CODE_ ? e3 - jspb.utils.A_CHAR_CODE_ + 10 : e3 - jspb.utils.ZERO_CHAR_CODE_;
      }, jspb.utils.hash64ToHexString = function(e3) {
        var t2 = Array(18);
        t2[0] = "0", t2[1] = "x";
        for (var o = 0; 8 > o; o++) {
          var r2 = e3.charCodeAt(7 - o);
          t2[2 * o + 2] = jspb.utils.toHexDigit_(r2 >> 4), t2[2 * o + 3] = jspb.utils.toHexDigit_(15 & r2);
        }
        return t2.join("");
      }, jspb.utils.hexStringToHash64 = function(e3) {
        e3 = e3.toLowerCase(), goog.asserts.assert(e3.length == 18), goog.asserts.assert(e3[0] == "0"), goog.asserts.assert(e3[1] == "x");
        for (var t2 = "", o = 0; 8 > o; o++) {
          var r2 = jspb.utils.fromHexCharCode_(e3.charCodeAt(2 * o + 2)), s3 = jspb.utils.fromHexCharCode_(e3.charCodeAt(2 * o + 3));
          t2 = String.fromCharCode(16 * r2 + s3) + t2;
        }
        return t2;
      }, jspb.utils.hash64ToNumber = function(e3, t2) {
        jspb.utils.splitHash64(e3), e3 = jspb.utils.split64Low;
        var o = jspb.utils.split64High;
        return t2 ? jspb.utils.joinInt64(e3, o) : jspb.utils.joinUint64(e3, o);
      }, jspb.utils.numberToHash64 = function(e3) {
        return jspb.utils.splitInt64(e3), jspb.utils.joinHash64(jspb.utils.split64Low, jspb.utils.split64High);
      }, jspb.utils.countVarints = function(e3, t2, o) {
        for (var r2 = 0, s3 = t2; s3 < o; s3++)
          r2 += e3[s3] >> 7;
        return o - t2 - r2;
      }, jspb.utils.countVarintFields = function(e3, t2, o, r2) {
        var s3 = 0;
        if (128 > (r2 = 8 * r2 + jspb.BinaryConstants.WireType.VARINT))
          for (; t2 < o && e3[t2++] == r2; )
            for (s3++; ; ) {
              var n = e3[t2++];
              if ((128 & n) == 0)
                break;
            }
        else
          for (; t2 < o; ) {
            for (n = r2; 128 < n; ) {
              if (e3[t2] != (127 & n | 128))
                return s3;
              t2++, n >>= 7;
            }
            if (e3[t2++] != n)
              break;
            for (s3++; (128 & (n = e3[t2++])) != 0; )
              ;
          }
        return s3;
      }, jspb.utils.countFixedFields_ = function(e3, t2, o, r2, s3) {
        var n = 0;
        if (128 > r2)
          for (; t2 < o && e3[t2++] == r2; )
            n++, t2 += s3;
        else
          for (; t2 < o; ) {
            for (var i2 = r2; 128 < i2; ) {
              if (e3[t2++] != (127 & i2 | 128))
                return n;
              i2 >>= 7;
            }
            if (e3[t2++] != i2)
              break;
            n++, t2 += s3;
          }
        return n;
      }, jspb.utils.countFixed32Fields = function(e3, t2, o, r2) {
        return jspb.utils.countFixedFields_(e3, t2, o, 8 * r2 + jspb.BinaryConstants.WireType.FIXED32, 4);
      }, jspb.utils.countFixed64Fields = function(e3, t2, o, r2) {
        return jspb.utils.countFixedFields_(e3, t2, o, 8 * r2 + jspb.BinaryConstants.WireType.FIXED64, 8);
      }, jspb.utils.countDelimitedFields = function(e3, t2, o, r2) {
        var s3 = 0;
        for (r2 = 8 * r2 + jspb.BinaryConstants.WireType.DELIMITED; t2 < o; ) {
          for (var n = r2; 128 < n; ) {
            if (e3[t2++] != (127 & n | 128))
              return s3;
            n >>= 7;
          }
          if (e3[t2++] != n)
            break;
          s3++;
          for (var i2 = 0, a2 = 1; i2 += (127 & (n = e3[t2++])) * a2, a2 *= 128, (128 & n) != 0; )
            ;
          t2 += i2;
        }
        return s3;
      }, jspb.utils.debugBytesToTextFormat = function(e3) {
        var t2 = '"';
        if (e3) {
          e3 = jspb.utils.byteSourceToUint8Array(e3);
          for (var o = 0; o < e3.length; o++)
            t2 += "\\x", 16 > e3[o] && (t2 += "0"), t2 += e3[o].toString(16);
        }
        return t2 + '"';
      }, jspb.utils.debugScalarToTextFormat = function(e3) {
        return typeof e3 == "string" ? goog.string.quote(e3) : e3.toString();
      }, jspb.utils.stringToByteArray = function(e3) {
        for (var t2 = new Uint8Array(e3.length), o = 0; o < e3.length; o++) {
          var r2 = e3.charCodeAt(o);
          if (255 < r2)
            throw Error("Conversion error: string contains codepoint outside of byte range");
          t2[o] = r2;
        }
        return t2;
      }, jspb.utils.byteSourceToUint8Array = function(e3) {
        return e3.constructor === Uint8Array ? e3 : e3.constructor === ArrayBuffer || typeof Buffer != "undefined" && e3.constructor === Buffer || e3.constructor === Array ? new Uint8Array(e3) : e3.constructor === String ? goog.crypt.base64.decodeStringToUint8Array(e3) : (goog.asserts.fail("Type not convertible to Uint8Array."), new Uint8Array(0));
      }, jspb.BinaryDecoder = function(e3, t2, o) {
        this.bytes_ = null, this.cursor_ = this.end_ = this.start_ = 0, this.error_ = false, e3 && this.setBlock(e3, t2, o);
      }, jspb.BinaryDecoder.instanceCache_ = [], jspb.BinaryDecoder.alloc = function(e3, t2, o) {
        if (jspb.BinaryDecoder.instanceCache_.length) {
          var r2 = jspb.BinaryDecoder.instanceCache_.pop();
          return e3 && r2.setBlock(e3, t2, o), r2;
        }
        return new jspb.BinaryDecoder(e3, t2, o);
      }, jspb.BinaryDecoder.prototype.free = function() {
        this.clear(), 100 > jspb.BinaryDecoder.instanceCache_.length && jspb.BinaryDecoder.instanceCache_.push(this);
      }, jspb.BinaryDecoder.prototype.clone = function() {
        return jspb.BinaryDecoder.alloc(this.bytes_, this.start_, this.end_ - this.start_);
      }, jspb.BinaryDecoder.prototype.clear = function() {
        this.bytes_ = null, this.cursor_ = this.end_ = this.start_ = 0, this.error_ = false;
      }, jspb.BinaryDecoder.prototype.getBuffer = function() {
        return this.bytes_;
      }, jspb.BinaryDecoder.prototype.setBlock = function(e3, t2, o) {
        this.bytes_ = jspb.utils.byteSourceToUint8Array(e3), this.start_ = t2 !== void 0 ? t2 : 0, this.end_ = o !== void 0 ? this.start_ + o : this.bytes_.length, this.cursor_ = this.start_;
      }, jspb.BinaryDecoder.prototype.getEnd = function() {
        return this.end_;
      }, jspb.BinaryDecoder.prototype.setEnd = function(e3) {
        this.end_ = e3;
      }, jspb.BinaryDecoder.prototype.reset = function() {
        this.cursor_ = this.start_;
      }, jspb.BinaryDecoder.prototype.getCursor = function() {
        return this.cursor_;
      }, jspb.BinaryDecoder.prototype.setCursor = function(e3) {
        this.cursor_ = e3;
      }, jspb.BinaryDecoder.prototype.advance = function(e3) {
        this.cursor_ += e3, goog.asserts.assert(this.cursor_ <= this.end_);
      }, jspb.BinaryDecoder.prototype.atEnd = function() {
        return this.cursor_ == this.end_;
      }, jspb.BinaryDecoder.prototype.pastEnd = function() {
        return this.cursor_ > this.end_;
      }, jspb.BinaryDecoder.prototype.getError = function() {
        return this.error_ || 0 > this.cursor_ || this.cursor_ > this.end_;
      }, jspb.BinaryDecoder.prototype.readSplitVarint64 = function(e3) {
        for (var t2 = 128, o = 0, r2 = 0, s3 = 0; 4 > s3 && 128 <= t2; s3++)
          o |= (127 & (t2 = this.bytes_[this.cursor_++])) << 7 * s3;
        if (128 <= t2 && (o |= (127 & (t2 = this.bytes_[this.cursor_++])) << 28, r2 |= (127 & t2) >> 4), 128 <= t2)
          for (s3 = 0; 5 > s3 && 128 <= t2; s3++)
            r2 |= (127 & (t2 = this.bytes_[this.cursor_++])) << 7 * s3 + 3;
        if (128 > t2)
          return e3(o >>> 0, r2 >>> 0);
        goog.asserts.fail("Failed to read varint, encoding is invalid."), this.error_ = true;
      }, jspb.BinaryDecoder.prototype.readSplitZigzagVarint64 = function(e3) {
        return this.readSplitVarint64(function(t2, o) {
          return jspb.utils.fromZigzag64(t2, o, e3);
        });
      }, jspb.BinaryDecoder.prototype.readSplitFixed64 = function(e3) {
        var t2 = this.bytes_, o = this.cursor_;
        this.cursor_ += 8;
        for (var r2 = 0, s3 = 0, n = o + 7; n >= o; n--)
          r2 = r2 << 8 | t2[n], s3 = s3 << 8 | t2[n + 4];
        return e3(r2, s3);
      }, jspb.BinaryDecoder.prototype.skipVarint = function() {
        for (; 128 & this.bytes_[this.cursor_]; )
          this.cursor_++;
        this.cursor_++;
      }, jspb.BinaryDecoder.prototype.unskipVarint = function(e3) {
        for (; 128 < e3; )
          this.cursor_--, e3 >>>= 7;
        this.cursor_--;
      }, jspb.BinaryDecoder.prototype.readUnsignedVarint32 = function() {
        var e3 = this.bytes_, t2 = e3[this.cursor_ + 0], o = 127 & t2;
        return 128 > t2 ? (this.cursor_ += 1, goog.asserts.assert(this.cursor_ <= this.end_), o) : (o |= (127 & (t2 = e3[this.cursor_ + 1])) << 7, 128 > t2 ? (this.cursor_ += 2, goog.asserts.assert(this.cursor_ <= this.end_), o) : (o |= (127 & (t2 = e3[this.cursor_ + 2])) << 14, 128 > t2 ? (this.cursor_ += 3, goog.asserts.assert(this.cursor_ <= this.end_), o) : (o |= (127 & (t2 = e3[this.cursor_ + 3])) << 21, 128 > t2 ? (this.cursor_ += 4, goog.asserts.assert(this.cursor_ <= this.end_), o) : (o |= (15 & (t2 = e3[this.cursor_ + 4])) << 28, 128 > t2 ? (this.cursor_ += 5, goog.asserts.assert(this.cursor_ <= this.end_), o >>> 0) : (this.cursor_ += 5, 128 <= e3[this.cursor_++] && 128 <= e3[this.cursor_++] && 128 <= e3[this.cursor_++] && 128 <= e3[this.cursor_++] && 128 <= e3[this.cursor_++] && goog.asserts.assert(false), goog.asserts.assert(this.cursor_ <= this.end_), o)))));
      }, jspb.BinaryDecoder.prototype.readSignedVarint32 = jspb.BinaryDecoder.prototype.readUnsignedVarint32, jspb.BinaryDecoder.prototype.readUnsignedVarint32String = function() {
        return this.readUnsignedVarint32().toString();
      }, jspb.BinaryDecoder.prototype.readSignedVarint32String = function() {
        return this.readSignedVarint32().toString();
      }, jspb.BinaryDecoder.prototype.readZigzagVarint32 = function() {
        var e3 = this.readUnsignedVarint32();
        return e3 >>> 1 ^ -(1 & e3);
      }, jspb.BinaryDecoder.prototype.readUnsignedVarint64 = function() {
        return this.readSplitVarint64(jspb.utils.joinUint64);
      }, jspb.BinaryDecoder.prototype.readUnsignedVarint64String = function() {
        return this.readSplitVarint64(jspb.utils.joinUnsignedDecimalString);
      }, jspb.BinaryDecoder.prototype.readSignedVarint64 = function() {
        return this.readSplitVarint64(jspb.utils.joinInt64);
      }, jspb.BinaryDecoder.prototype.readSignedVarint64String = function() {
        return this.readSplitVarint64(jspb.utils.joinSignedDecimalString);
      }, jspb.BinaryDecoder.prototype.readZigzagVarint64 = function() {
        return this.readSplitVarint64(jspb.utils.joinZigzag64);
      }, jspb.BinaryDecoder.prototype.readZigzagVarintHash64 = function() {
        return this.readSplitZigzagVarint64(jspb.utils.joinHash64);
      }, jspb.BinaryDecoder.prototype.readZigzagVarint64String = function() {
        return this.readSplitZigzagVarint64(jspb.utils.joinSignedDecimalString);
      }, jspb.BinaryDecoder.prototype.readUint8 = function() {
        var e3 = this.bytes_[this.cursor_ + 0];
        return this.cursor_ += 1, goog.asserts.assert(this.cursor_ <= this.end_), e3;
      }, jspb.BinaryDecoder.prototype.readUint16 = function() {
        var e3 = this.bytes_[this.cursor_ + 0], t2 = this.bytes_[this.cursor_ + 1];
        return this.cursor_ += 2, goog.asserts.assert(this.cursor_ <= this.end_), e3 << 0 | t2 << 8;
      }, jspb.BinaryDecoder.prototype.readUint32 = function() {
        var e3 = this.bytes_[this.cursor_ + 0], t2 = this.bytes_[this.cursor_ + 1], o = this.bytes_[this.cursor_ + 2], r2 = this.bytes_[this.cursor_ + 3];
        return this.cursor_ += 4, goog.asserts.assert(this.cursor_ <= this.end_), (e3 << 0 | t2 << 8 | o << 16 | r2 << 24) >>> 0;
      }, jspb.BinaryDecoder.prototype.readUint64 = function() {
        var e3 = this.readUint32(), t2 = this.readUint32();
        return jspb.utils.joinUint64(e3, t2);
      }, jspb.BinaryDecoder.prototype.readUint64String = function() {
        var e3 = this.readUint32(), t2 = this.readUint32();
        return jspb.utils.joinUnsignedDecimalString(e3, t2);
      }, jspb.BinaryDecoder.prototype.readInt8 = function() {
        var e3 = this.bytes_[this.cursor_ + 0];
        return this.cursor_ += 1, goog.asserts.assert(this.cursor_ <= this.end_), e3 << 24 >> 24;
      }, jspb.BinaryDecoder.prototype.readInt16 = function() {
        var e3 = this.bytes_[this.cursor_ + 0], t2 = this.bytes_[this.cursor_ + 1];
        return this.cursor_ += 2, goog.asserts.assert(this.cursor_ <= this.end_), (e3 << 0 | t2 << 8) << 16 >> 16;
      }, jspb.BinaryDecoder.prototype.readInt32 = function() {
        var e3 = this.bytes_[this.cursor_ + 0], t2 = this.bytes_[this.cursor_ + 1], o = this.bytes_[this.cursor_ + 2], r2 = this.bytes_[this.cursor_ + 3];
        return this.cursor_ += 4, goog.asserts.assert(this.cursor_ <= this.end_), e3 << 0 | t2 << 8 | o << 16 | r2 << 24;
      }, jspb.BinaryDecoder.prototype.readInt64 = function() {
        var e3 = this.readUint32(), t2 = this.readUint32();
        return jspb.utils.joinInt64(e3, t2);
      }, jspb.BinaryDecoder.prototype.readInt64String = function() {
        var e3 = this.readUint32(), t2 = this.readUint32();
        return jspb.utils.joinSignedDecimalString(e3, t2);
      }, jspb.BinaryDecoder.prototype.readFloat = function() {
        var e3 = this.readUint32();
        return jspb.utils.joinFloat32(e3, 0);
      }, jspb.BinaryDecoder.prototype.readDouble = function() {
        var e3 = this.readUint32(), t2 = this.readUint32();
        return jspb.utils.joinFloat64(e3, t2);
      }, jspb.BinaryDecoder.prototype.readBool = function() {
        return !!this.bytes_[this.cursor_++];
      }, jspb.BinaryDecoder.prototype.readEnum = function() {
        return this.readSignedVarint32();
      }, jspb.BinaryDecoder.prototype.readString = function(e3) {
        var t2 = this.bytes_, o = this.cursor_;
        e3 = o + e3;
        for (var r2 = [], s3 = ""; o < e3; ) {
          var n = t2[o++];
          if (128 > n)
            r2.push(n);
          else {
            if (192 > n)
              continue;
            if (224 > n) {
              var i2 = t2[o++];
              r2.push((31 & n) << 6 | 63 & i2);
            } else if (240 > n) {
              i2 = t2[o++];
              var a2 = t2[o++];
              r2.push((15 & n) << 12 | (63 & i2) << 6 | 63 & a2);
            } else if (248 > n) {
              n = (7 & n) << 18 | (63 & (i2 = t2[o++])) << 12 | (63 & (a2 = t2[o++])) << 6 | 63 & t2[o++], n -= 65536, r2.push(55296 + (n >> 10 & 1023), 56320 + (1023 & n));
            }
          }
          8192 <= r2.length && (s3 += String.fromCharCode.apply(null, r2), r2.length = 0);
        }
        return s3 += goog.crypt.byteArrayToString(r2), this.cursor_ = o, s3;
      }, jspb.BinaryDecoder.prototype.readStringWithLength = function() {
        var e3 = this.readUnsignedVarint32();
        return this.readString(e3);
      }, jspb.BinaryDecoder.prototype.readBytes = function(e3) {
        if (0 > e3 || this.cursor_ + e3 > this.bytes_.length)
          return this.error_ = true, goog.asserts.fail("Invalid byte length!"), new Uint8Array(0);
        var t2 = this.bytes_.subarray(this.cursor_, this.cursor_ + e3);
        return this.cursor_ += e3, goog.asserts.assert(this.cursor_ <= this.end_), t2;
      }, jspb.BinaryDecoder.prototype.readVarintHash64 = function() {
        return this.readSplitVarint64(jspb.utils.joinHash64);
      }, jspb.BinaryDecoder.prototype.readFixedHash64 = function() {
        var e3 = this.bytes_, t2 = this.cursor_, o = e3[t2 + 0], r2 = e3[t2 + 1], s3 = e3[t2 + 2], n = e3[t2 + 3], i2 = e3[t2 + 4], a2 = e3[t2 + 5], g = e3[t2 + 6];
        return e3 = e3[t2 + 7], this.cursor_ += 8, String.fromCharCode(o, r2, s3, n, i2, a2, g, e3);
      }, jspb.BinaryReader = function(e3, t2, o) {
        this.decoder_ = jspb.BinaryDecoder.alloc(e3, t2, o), this.fieldCursor_ = this.decoder_.getCursor(), this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER, this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID, this.error_ = false, this.readCallbacks_ = null;
      }, jspb.BinaryReader.instanceCache_ = [], jspb.BinaryReader.alloc = function(e3, t2, o) {
        if (jspb.BinaryReader.instanceCache_.length) {
          var r2 = jspb.BinaryReader.instanceCache_.pop();
          return e3 && r2.decoder_.setBlock(e3, t2, o), r2;
        }
        return new jspb.BinaryReader(e3, t2, o);
      }, jspb.BinaryReader.prototype.alloc = jspb.BinaryReader.alloc, jspb.BinaryReader.prototype.free = function() {
        this.decoder_.clear(), this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER, this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID, this.error_ = false, this.readCallbacks_ = null, 100 > jspb.BinaryReader.instanceCache_.length && jspb.BinaryReader.instanceCache_.push(this);
      }, jspb.BinaryReader.prototype.getFieldCursor = function() {
        return this.fieldCursor_;
      }, jspb.BinaryReader.prototype.getCursor = function() {
        return this.decoder_.getCursor();
      }, jspb.BinaryReader.prototype.getBuffer = function() {
        return this.decoder_.getBuffer();
      }, jspb.BinaryReader.prototype.getFieldNumber = function() {
        return this.nextField_;
      }, jspb.BinaryReader.prototype.getWireType = function() {
        return this.nextWireType_;
      }, jspb.BinaryReader.prototype.isEndGroup = function() {
        return this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP;
      }, jspb.BinaryReader.prototype.getError = function() {
        return this.error_ || this.decoder_.getError();
      }, jspb.BinaryReader.prototype.setBlock = function(e3, t2, o) {
        this.decoder_.setBlock(e3, t2, o), this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER, this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;
      }, jspb.BinaryReader.prototype.reset = function() {
        this.decoder_.reset(), this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER, this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;
      }, jspb.BinaryReader.prototype.advance = function(e3) {
        this.decoder_.advance(e3);
      }, jspb.BinaryReader.prototype.nextField = function() {
        if (this.decoder_.atEnd())
          return false;
        if (this.getError())
          return goog.asserts.fail("Decoder hit an error"), false;
        this.fieldCursor_ = this.decoder_.getCursor();
        var e3 = this.decoder_.readUnsignedVarint32(), t2 = e3 >>> 3;
        return (e3 &= 7) != jspb.BinaryConstants.WireType.VARINT && e3 != jspb.BinaryConstants.WireType.FIXED32 && e3 != jspb.BinaryConstants.WireType.FIXED64 && e3 != jspb.BinaryConstants.WireType.DELIMITED && e3 != jspb.BinaryConstants.WireType.START_GROUP && e3 != jspb.BinaryConstants.WireType.END_GROUP ? (goog.asserts.fail("Invalid wire type: %s (at position %s)", e3, this.fieldCursor_), this.error_ = true, false) : (this.nextField_ = t2, this.nextWireType_ = e3, true);
      }, jspb.BinaryReader.prototype.unskipHeader = function() {
        this.decoder_.unskipVarint(this.nextField_ << 3 | this.nextWireType_);
      }, jspb.BinaryReader.prototype.skipMatchingFields = function() {
        var e3 = this.nextField_;
        for (this.unskipHeader(); this.nextField() && this.getFieldNumber() == e3; )
          this.skipField();
        this.decoder_.atEnd() || this.unskipHeader();
      }, jspb.BinaryReader.prototype.skipVarintField = function() {
        this.nextWireType_ != jspb.BinaryConstants.WireType.VARINT ? (goog.asserts.fail("Invalid wire type for skipVarintField"), this.skipField()) : this.decoder_.skipVarint();
      }, jspb.BinaryReader.prototype.skipDelimitedField = function() {
        if (this.nextWireType_ != jspb.BinaryConstants.WireType.DELIMITED)
          goog.asserts.fail("Invalid wire type for skipDelimitedField"), this.skipField();
        else {
          var e3 = this.decoder_.readUnsignedVarint32();
          this.decoder_.advance(e3);
        }
      }, jspb.BinaryReader.prototype.skipFixed32Field = function() {
        this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED32 ? (goog.asserts.fail("Invalid wire type for skipFixed32Field"), this.skipField()) : this.decoder_.advance(4);
      }, jspb.BinaryReader.prototype.skipFixed64Field = function() {
        this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED64 ? (goog.asserts.fail("Invalid wire type for skipFixed64Field"), this.skipField()) : this.decoder_.advance(8);
      }, jspb.BinaryReader.prototype.skipGroup = function() {
        for (var e3 = this.nextField_; ; ) {
          if (!this.nextField()) {
            goog.asserts.fail("Unmatched start-group tag: stream EOF"), this.error_ = true;
            break;
          }
          if (this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP) {
            this.nextField_ != e3 && (goog.asserts.fail("Unmatched end-group tag"), this.error_ = true);
            break;
          }
          this.skipField();
        }
      }, jspb.BinaryReader.prototype.skipField = function() {
        switch (this.nextWireType_) {
          case jspb.BinaryConstants.WireType.VARINT:
            this.skipVarintField();
            break;
          case jspb.BinaryConstants.WireType.FIXED64:
            this.skipFixed64Field();
            break;
          case jspb.BinaryConstants.WireType.DELIMITED:
            this.skipDelimitedField();
            break;
          case jspb.BinaryConstants.WireType.FIXED32:
            this.skipFixed32Field();
            break;
          case jspb.BinaryConstants.WireType.START_GROUP:
            this.skipGroup();
            break;
          default:
            goog.asserts.fail("Invalid wire encoding for field.");
        }
      }, jspb.BinaryReader.prototype.registerReadCallback = function(e3, t2) {
        this.readCallbacks_ === null && (this.readCallbacks_ = {}), goog.asserts.assert(!this.readCallbacks_[e3]), this.readCallbacks_[e3] = t2;
      }, jspb.BinaryReader.prototype.runReadCallback = function(e3) {
        return goog.asserts.assert(this.readCallbacks_ !== null), e3 = this.readCallbacks_[e3], goog.asserts.assert(e3), e3(this);
      }, jspb.BinaryReader.prototype.readAny = function(e3) {
        this.nextWireType_ = jspb.BinaryConstants.FieldTypeToWireType(e3);
        var t2 = jspb.BinaryConstants.FieldType;
        switch (e3) {
          case t2.DOUBLE:
            return this.readDouble();
          case t2.FLOAT:
            return this.readFloat();
          case t2.INT64:
            return this.readInt64();
          case t2.UINT64:
            return this.readUint64();
          case t2.INT32:
            return this.readInt32();
          case t2.FIXED64:
            return this.readFixed64();
          case t2.FIXED32:
            return this.readFixed32();
          case t2.BOOL:
            return this.readBool();
          case t2.STRING:
            return this.readString();
          case t2.GROUP:
            goog.asserts.fail("Group field type not supported in readAny()");
          case t2.MESSAGE:
            goog.asserts.fail("Message field type not supported in readAny()");
          case t2.BYTES:
            return this.readBytes();
          case t2.UINT32:
            return this.readUint32();
          case t2.ENUM:
            return this.readEnum();
          case t2.SFIXED32:
            return this.readSfixed32();
          case t2.SFIXED64:
            return this.readSfixed64();
          case t2.SINT32:
            return this.readSint32();
          case t2.SINT64:
            return this.readSint64();
          case t2.FHASH64:
            return this.readFixedHash64();
          case t2.VHASH64:
            return this.readVarintHash64();
          default:
            goog.asserts.fail("Invalid field type in readAny()");
        }
        return 0;
      }, jspb.BinaryReader.prototype.readMessage = function(e3, t2) {
        goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
        var o = this.decoder_.getEnd(), r2 = this.decoder_.readUnsignedVarint32();
        r2 = this.decoder_.getCursor() + r2, this.decoder_.setEnd(r2), t2(e3, this), this.decoder_.setCursor(r2), this.decoder_.setEnd(o);
      }, jspb.BinaryReader.prototype.readGroup = function(e3, t2, o) {
        goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.START_GROUP), goog.asserts.assert(this.nextField_ == e3), o(t2, this), this.error_ || this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP || (goog.asserts.fail("Group submessage did not end with an END_GROUP tag"), this.error_ = true);
      }, jspb.BinaryReader.prototype.getFieldDecoder = function() {
        goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
        var e3 = this.decoder_.readUnsignedVarint32(), t2 = this.decoder_.getCursor(), o = t2 + e3;
        return e3 = jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(), t2, e3), this.decoder_.setCursor(o), e3;
      }, jspb.BinaryReader.prototype.readInt32 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSignedVarint32();
      }, jspb.BinaryReader.prototype.readInt32String = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSignedVarint32String();
      }, jspb.BinaryReader.prototype.readInt64 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSignedVarint64();
      }, jspb.BinaryReader.prototype.readInt64String = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSignedVarint64String();
      }, jspb.BinaryReader.prototype.readUint32 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readUnsignedVarint32();
      }, jspb.BinaryReader.prototype.readUint32String = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readUnsignedVarint32String();
      }, jspb.BinaryReader.prototype.readUint64 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readUnsignedVarint64();
      }, jspb.BinaryReader.prototype.readUint64String = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readUnsignedVarint64String();
      }, jspb.BinaryReader.prototype.readSint32 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readZigzagVarint32();
      }, jspb.BinaryReader.prototype.readSint64 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readZigzagVarint64();
      }, jspb.BinaryReader.prototype.readSint64String = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readZigzagVarint64String();
      }, jspb.BinaryReader.prototype.readFixed32 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32), this.decoder_.readUint32();
      }, jspb.BinaryReader.prototype.readFixed64 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readUint64();
      }, jspb.BinaryReader.prototype.readFixed64String = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readUint64String();
      }, jspb.BinaryReader.prototype.readSfixed32 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32), this.decoder_.readInt32();
      }, jspb.BinaryReader.prototype.readSfixed32String = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32), this.decoder_.readInt32().toString();
      }, jspb.BinaryReader.prototype.readSfixed64 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readInt64();
      }, jspb.BinaryReader.prototype.readSfixed64String = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readInt64String();
      }, jspb.BinaryReader.prototype.readFloat = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32), this.decoder_.readFloat();
      }, jspb.BinaryReader.prototype.readDouble = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readDouble();
      }, jspb.BinaryReader.prototype.readBool = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), !!this.decoder_.readUnsignedVarint32();
      }, jspb.BinaryReader.prototype.readEnum = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSignedVarint64();
      }, jspb.BinaryReader.prototype.readString = function() {
        goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
        var e3 = this.decoder_.readUnsignedVarint32();
        return this.decoder_.readString(e3);
      }, jspb.BinaryReader.prototype.readBytes = function() {
        goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
        var e3 = this.decoder_.readUnsignedVarint32();
        return this.decoder_.readBytes(e3);
      }, jspb.BinaryReader.prototype.readVarintHash64 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readVarintHash64();
      }, jspb.BinaryReader.prototype.readSintHash64 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readZigzagVarintHash64();
      }, jspb.BinaryReader.prototype.readSplitVarint64 = function(e3) {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSplitVarint64(e3);
      }, jspb.BinaryReader.prototype.readSplitZigzagVarint64 = function(e3) {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSplitVarint64(function(t2, o) {
          return jspb.utils.fromZigzag64(t2, o, e3);
        });
      }, jspb.BinaryReader.prototype.readFixedHash64 = function() {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readFixedHash64();
      }, jspb.BinaryReader.prototype.readSplitFixed64 = function(e3) {
        return goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readSplitFixed64(e3);
      }, jspb.BinaryReader.prototype.readPackedField_ = function(e3) {
        goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
        var t2 = this.decoder_.readUnsignedVarint32();
        t2 = this.decoder_.getCursor() + t2;
        for (var o = []; this.decoder_.getCursor() < t2; )
          o.push(e3.call(this.decoder_));
        return o;
      }, jspb.BinaryReader.prototype.readPackedInt32 = function() {
        return this.readPackedField_(this.decoder_.readSignedVarint32);
      }, jspb.BinaryReader.prototype.readPackedInt32String = function() {
        return this.readPackedField_(this.decoder_.readSignedVarint32String);
      }, jspb.BinaryReader.prototype.readPackedInt64 = function() {
        return this.readPackedField_(this.decoder_.readSignedVarint64);
      }, jspb.BinaryReader.prototype.readPackedInt64String = function() {
        return this.readPackedField_(this.decoder_.readSignedVarint64String);
      }, jspb.BinaryReader.prototype.readPackedUint32 = function() {
        return this.readPackedField_(this.decoder_.readUnsignedVarint32);
      }, jspb.BinaryReader.prototype.readPackedUint32String = function() {
        return this.readPackedField_(this.decoder_.readUnsignedVarint32String);
      }, jspb.BinaryReader.prototype.readPackedUint64 = function() {
        return this.readPackedField_(this.decoder_.readUnsignedVarint64);
      }, jspb.BinaryReader.prototype.readPackedUint64String = function() {
        return this.readPackedField_(this.decoder_.readUnsignedVarint64String);
      }, jspb.BinaryReader.prototype.readPackedSint32 = function() {
        return this.readPackedField_(this.decoder_.readZigzagVarint32);
      }, jspb.BinaryReader.prototype.readPackedSint64 = function() {
        return this.readPackedField_(this.decoder_.readZigzagVarint64);
      }, jspb.BinaryReader.prototype.readPackedSint64String = function() {
        return this.readPackedField_(this.decoder_.readZigzagVarint64String);
      }, jspb.BinaryReader.prototype.readPackedFixed32 = function() {
        return this.readPackedField_(this.decoder_.readUint32);
      }, jspb.BinaryReader.prototype.readPackedFixed64 = function() {
        return this.readPackedField_(this.decoder_.readUint64);
      }, jspb.BinaryReader.prototype.readPackedFixed64String = function() {
        return this.readPackedField_(this.decoder_.readUint64String);
      }, jspb.BinaryReader.prototype.readPackedSfixed32 = function() {
        return this.readPackedField_(this.decoder_.readInt32);
      }, jspb.BinaryReader.prototype.readPackedSfixed64 = function() {
        return this.readPackedField_(this.decoder_.readInt64);
      }, jspb.BinaryReader.prototype.readPackedSfixed64String = function() {
        return this.readPackedField_(this.decoder_.readInt64String);
      }, jspb.BinaryReader.prototype.readPackedFloat = function() {
        return this.readPackedField_(this.decoder_.readFloat);
      }, jspb.BinaryReader.prototype.readPackedDouble = function() {
        return this.readPackedField_(this.decoder_.readDouble);
      }, jspb.BinaryReader.prototype.readPackedBool = function() {
        return this.readPackedField_(this.decoder_.readBool);
      }, jspb.BinaryReader.prototype.readPackedEnum = function() {
        return this.readPackedField_(this.decoder_.readEnum);
      }, jspb.BinaryReader.prototype.readPackedVarintHash64 = function() {
        return this.readPackedField_(this.decoder_.readVarintHash64);
      }, jspb.BinaryReader.prototype.readPackedFixedHash64 = function() {
        return this.readPackedField_(this.decoder_.readFixedHash64);
      }, jspb.Map = function(e3, t2) {
        this.arr_ = e3, this.valueCtor_ = t2, this.map_ = {}, this.arrClean = true, 0 < this.arr_.length && this.loadFromArray_();
      }, jspb.Map.prototype.loadFromArray_ = function() {
        for (var e3 = 0; e3 < this.arr_.length; e3++) {
          var t2 = this.arr_[e3], o = t2[0];
          this.map_[o.toString()] = new jspb.Map.Entry_(o, t2[1]);
        }
        this.arrClean = true;
      }, jspb.Map.prototype.toArray = function() {
        if (this.arrClean) {
          if (this.valueCtor_) {
            var e3, t2 = this.map_;
            for (e3 in t2)
              if (Object.prototype.hasOwnProperty.call(t2, e3)) {
                var o = t2[e3].valueWrapper;
                o && o.toArray();
              }
          }
        } else {
          for (this.arr_.length = 0, (t2 = this.stringKeys_()).sort(), e3 = 0; e3 < t2.length; e3++) {
            var r2 = this.map_[t2[e3]];
            (o = r2.valueWrapper) && o.toArray(), this.arr_.push([r2.key, r2.value]);
          }
          this.arrClean = true;
        }
        return this.arr_;
      }, jspb.Map.prototype.toObject = function(e3, t2) {
        for (var o = this.toArray(), r2 = [], s3 = 0; s3 < o.length; s3++) {
          var n = this.map_[o[s3][0].toString()];
          this.wrapEntry_(n);
          var i2 = n.valueWrapper;
          i2 ? (goog.asserts.assert(t2), r2.push([n.key, t2(e3, i2)])) : r2.push([n.key, n.value]);
        }
        return r2;
      }, jspb.Map.fromObject = function(e3, t2, o) {
        t2 = new jspb.Map([], t2);
        for (var r2 = 0; r2 < e3.length; r2++) {
          var s3 = e3[r2][0], n = o(e3[r2][1]);
          t2.set(s3, n);
        }
        return t2;
      }, jspb.Map.ArrayIteratorIterable_ = function(e3) {
        this.idx_ = 0, this.arr_ = e3;
      }, jspb.Map.ArrayIteratorIterable_.prototype.next = function() {
        return this.idx_ < this.arr_.length ? { done: false, value: this.arr_[this.idx_++] } : { done: true, value: void 0 };
      }, typeof Symbol != "undefined" && (jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator] = function() {
        return this;
      }), jspb.Map.prototype.getLength = function() {
        return this.stringKeys_().length;
      }, jspb.Map.prototype.clear = function() {
        this.map_ = {}, this.arrClean = false;
      }, jspb.Map.prototype.del = function(e3) {
        e3 = e3.toString();
        var t2 = this.map_.hasOwnProperty(e3);
        return delete this.map_[e3], this.arrClean = false, t2;
      }, jspb.Map.prototype.getEntryList = function() {
        var e3 = [], t2 = this.stringKeys_();
        t2.sort();
        for (var o = 0; o < t2.length; o++) {
          var r2 = this.map_[t2[o]];
          e3.push([r2.key, r2.value]);
        }
        return e3;
      }, jspb.Map.prototype.entries = function() {
        var e3 = [], t2 = this.stringKeys_();
        t2.sort();
        for (var o = 0; o < t2.length; o++) {
          var r2 = this.map_[t2[o]];
          e3.push([r2.key, this.wrapEntry_(r2)]);
        }
        return new jspb.Map.ArrayIteratorIterable_(e3);
      }, jspb.Map.prototype.keys = function() {
        var e3 = [], t2 = this.stringKeys_();
        t2.sort();
        for (var o = 0; o < t2.length; o++)
          e3.push(this.map_[t2[o]].key);
        return new jspb.Map.ArrayIteratorIterable_(e3);
      }, jspb.Map.prototype.values = function() {
        var e3 = [], t2 = this.stringKeys_();
        t2.sort();
        for (var o = 0; o < t2.length; o++)
          e3.push(this.wrapEntry_(this.map_[t2[o]]));
        return new jspb.Map.ArrayIteratorIterable_(e3);
      }, jspb.Map.prototype.forEach = function(e3, t2) {
        var o = this.stringKeys_();
        o.sort();
        for (var r2 = 0; r2 < o.length; r2++) {
          var s3 = this.map_[o[r2]];
          e3.call(t2, this.wrapEntry_(s3), s3.key, this);
        }
      }, jspb.Map.prototype.set = function(e3, t2) {
        var o = new jspb.Map.Entry_(e3);
        return this.valueCtor_ ? (o.valueWrapper = t2, o.value = t2.toArray()) : o.value = t2, this.map_[e3.toString()] = o, this.arrClean = false, this;
      }, jspb.Map.prototype.wrapEntry_ = function(e3) {
        return this.valueCtor_ ? (e3.valueWrapper || (e3.valueWrapper = new this.valueCtor_(e3.value)), e3.valueWrapper) : e3.value;
      }, jspb.Map.prototype.get = function(e3) {
        if (e3 = this.map_[e3.toString()])
          return this.wrapEntry_(e3);
      }, jspb.Map.prototype.has = function(e3) {
        return e3.toString() in this.map_;
      }, jspb.Map.prototype.serializeBinary = function(e3, t2, o, r2, s3) {
        var n = this.stringKeys_();
        n.sort();
        for (var i2 = 0; i2 < n.length; i2++) {
          var a2 = this.map_[n[i2]];
          t2.beginSubMessage(e3), o.call(t2, 1, a2.key), this.valueCtor_ ? r2.call(t2, 2, this.wrapEntry_(a2), s3) : r2.call(t2, 2, a2.value), t2.endSubMessage();
        }
      }, jspb.Map.deserializeBinary = function(e3, t2, o, r2, s3, n, i2) {
        for (; t2.nextField() && !t2.isEndGroup(); ) {
          var a2 = t2.getFieldNumber();
          a2 == 1 ? n = o.call(t2) : a2 == 2 && (e3.valueCtor_ ? (goog.asserts.assert(s3), i2 || (i2 = new e3.valueCtor_()), r2.call(t2, i2, s3)) : i2 = r2.call(t2));
        }
        goog.asserts.assert(n != null), goog.asserts.assert(i2 != null), e3.set(n, i2);
      }, jspb.Map.prototype.stringKeys_ = function() {
        var e3, t2 = this.map_, o = [];
        for (e3 in t2)
          Object.prototype.hasOwnProperty.call(t2, e3) && o.push(e3);
        return o;
      }, jspb.Map.Entry_ = function(e3, t2) {
        this.key = e3, this.value = t2, this.valueWrapper = void 0;
      }, jspb.ExtensionFieldInfo = function(e3, t2, o, r2, s3) {
        this.fieldIndex = e3, this.fieldName = t2, this.ctor = o, this.toObjectFn = r2, this.isRepeated = s3;
      }, jspb.ExtensionFieldBinaryInfo = function(e3, t2, o, r2, s3, n) {
        this.fieldInfo = e3, this.binaryReaderFn = t2, this.binaryWriterFn = o, this.binaryMessageSerializeFn = r2, this.binaryMessageDeserializeFn = s3, this.isPacked = n;
      }, jspb.ExtensionFieldInfo.prototype.isMessageType = function() {
        return !!this.ctor;
      }, jspb.Message = function() {
      }, jspb.Message.GENERATE_TO_OBJECT = true, jspb.Message.GENERATE_FROM_OBJECT = !goog.DISALLOW_TEST_ONLY_CODE, jspb.Message.GENERATE_TO_STRING = true, jspb.Message.ASSUME_LOCAL_ARRAYS = false, jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS = true, jspb.Message.SUPPORTS_UINT8ARRAY_ = typeof Uint8Array == "function", jspb.Message.prototype.getJsPbMessageId = function() {
        return this.messageId_;
      }, jspb.Message.getIndex_ = function(e3, t2) {
        return t2 + e3.arrayIndexOffset_;
      }, jspb.Message.hiddenES6Property_ = function() {
      }, jspb.Message.getFieldNumber_ = function(e3, t2) {
        return t2 - e3.arrayIndexOffset_;
      }, jspb.Message.initialize = function(e3, t2, o, r2, s3, n) {
        if (e3.wrappers_ = null, t2 || (t2 = o ? [o] : []), e3.messageId_ = o ? String(o) : void 0, e3.arrayIndexOffset_ = o === 0 ? -1 : 0, e3.array = t2, jspb.Message.initPivotAndExtensionObject_(e3, r2), e3.convertedPrimitiveFields_ = {}, jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS || (e3.repeatedFields = s3), s3)
          for (t2 = 0; t2 < s3.length; t2++)
            (o = s3[t2]) < e3.pivot_ ? (o = jspb.Message.getIndex_(e3, o), e3.array[o] = e3.array[o] || jspb.Message.EMPTY_LIST_SENTINEL_) : (jspb.Message.maybeInitEmptyExtensionObject_(e3), e3.extensionObject_[o] = e3.extensionObject_[o] || jspb.Message.EMPTY_LIST_SENTINEL_);
        if (n && n.length)
          for (t2 = 0; t2 < n.length; t2++)
            jspb.Message.computeOneofCase(e3, n[t2]);
      }, jspb.Message.EMPTY_LIST_SENTINEL_ = goog.DEBUG && Object.freeze ? Object.freeze([]) : [], jspb.Message.isArray_ = function(e3) {
        return jspb.Message.ASSUME_LOCAL_ARRAYS ? e3 instanceof Array : goog.isArray(e3);
      }, jspb.Message.isExtensionObject_ = function(e3) {
        return !(e3 === null || typeof e3 != "object" || jspb.Message.isArray_(e3) || jspb.Message.SUPPORTS_UINT8ARRAY_ && e3 instanceof Uint8Array);
      }, jspb.Message.initPivotAndExtensionObject_ = function(e3, t2) {
        var o = e3.array.length, r2 = -1;
        if (o && (r2 = o - 1, o = e3.array[r2], jspb.Message.isExtensionObject_(o)))
          return e3.pivot_ = jspb.Message.getFieldNumber_(e3, r2), void (e3.extensionObject_ = o);
        -1 < t2 ? (e3.pivot_ = Math.max(t2, jspb.Message.getFieldNumber_(e3, r2 + 1)), e3.extensionObject_ = null) : e3.pivot_ = Number.MAX_VALUE;
      }, jspb.Message.maybeInitEmptyExtensionObject_ = function(e3) {
        var t2 = jspb.Message.getIndex_(e3, e3.pivot_);
        e3.array[t2] || (e3.extensionObject_ = e3.array[t2] = {});
      }, jspb.Message.toObjectList = function(e3, t2, o) {
        for (var r2 = [], s3 = 0; s3 < e3.length; s3++)
          r2[s3] = t2.call(e3[s3], o, e3[s3]);
        return r2;
      }, jspb.Message.toObjectExtension = function(e3, t2, o, r2, s3) {
        for (var n in o) {
          var i2 = o[n], a2 = r2.call(e3, i2);
          if (a2 != null) {
            for (var g in i2.fieldName)
              if (i2.fieldName.hasOwnProperty(g))
                break;
            t2[g] = i2.toObjectFn ? i2.isRepeated ? jspb.Message.toObjectList(a2, i2.toObjectFn, s3) : i2.toObjectFn(s3, a2) : a2;
          }
        }
      }, jspb.Message.serializeBinaryExtensions = function(e3, t2, o, r2) {
        for (var s3 in o) {
          var n = o[s3], i2 = n.fieldInfo;
          if (!n.binaryWriterFn)
            throw Error("Message extension present that was generated without binary serialization support");
          var a2 = r2.call(e3, i2);
          if (a2 != null)
            if (i2.isMessageType()) {
              if (!n.binaryMessageSerializeFn)
                throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");
              n.binaryWriterFn.call(t2, i2.fieldIndex, a2, n.binaryMessageSerializeFn);
            } else
              n.binaryWriterFn.call(t2, i2.fieldIndex, a2);
        }
      }, jspb.Message.readBinaryExtension = function(e3, t2, o, r2, s3) {
        var n = o[t2.getFieldNumber()];
        if (n) {
          if (o = n.fieldInfo, !n.binaryReaderFn)
            throw Error("Deserializing extension whose generated code does not support binary format");
          if (o.isMessageType()) {
            var i2 = new o.ctor();
            n.binaryReaderFn.call(t2, i2, n.binaryMessageDeserializeFn);
          } else
            i2 = n.binaryReaderFn.call(t2);
          o.isRepeated && !n.isPacked ? (t2 = r2.call(e3, o)) ? t2.push(i2) : s3.call(e3, o, [i2]) : s3.call(e3, o, i2);
        } else
          t2.skipField();
      }, jspb.Message.getField = function(e3, t2) {
        if (t2 < e3.pivot_) {
          t2 = jspb.Message.getIndex_(e3, t2);
          var o = e3.array[t2];
          return o === jspb.Message.EMPTY_LIST_SENTINEL_ ? e3.array[t2] = [] : o;
        }
        if (e3.extensionObject_)
          return (o = e3.extensionObject_[t2]) === jspb.Message.EMPTY_LIST_SENTINEL_ ? e3.extensionObject_[t2] = [] : o;
      }, jspb.Message.getRepeatedField = function(e3, t2) {
        return jspb.Message.getField(e3, t2);
      }, jspb.Message.getOptionalFloatingPointField = function(e3, t2) {
        return (e3 = jspb.Message.getField(e3, t2)) == null ? e3 : +e3;
      }, jspb.Message.getBooleanField = function(e3, t2) {
        return (e3 = jspb.Message.getField(e3, t2)) == null ? e3 : !!e3;
      }, jspb.Message.getRepeatedFloatingPointField = function(e3, t2) {
        var o = jspb.Message.getRepeatedField(e3, t2);
        if (e3.convertedPrimitiveFields_ || (e3.convertedPrimitiveFields_ = {}), !e3.convertedPrimitiveFields_[t2]) {
          for (var r2 = 0; r2 < o.length; r2++)
            o[r2] = +o[r2];
          e3.convertedPrimitiveFields_[t2] = true;
        }
        return o;
      }, jspb.Message.getRepeatedBooleanField = function(e3, t2) {
        var o = jspb.Message.getRepeatedField(e3, t2);
        if (e3.convertedPrimitiveFields_ || (e3.convertedPrimitiveFields_ = {}), !e3.convertedPrimitiveFields_[t2]) {
          for (var r2 = 0; r2 < o.length; r2++)
            o[r2] = !!o[r2];
          e3.convertedPrimitiveFields_[t2] = true;
        }
        return o;
      }, jspb.Message.bytesAsB64 = function(e3) {
        return e3 == null || typeof e3 == "string" ? e3 : jspb.Message.SUPPORTS_UINT8ARRAY_ && e3 instanceof Uint8Array ? goog.crypt.base64.encodeByteArray(e3) : (goog.asserts.fail("Cannot coerce to b64 string: " + goog.typeOf(e3)), null);
      }, jspb.Message.bytesAsU8 = function(e3) {
        return e3 == null || e3 instanceof Uint8Array ? e3 : typeof e3 == "string" ? goog.crypt.base64.decodeStringToUint8Array(e3) : (goog.asserts.fail("Cannot coerce to Uint8Array: " + goog.typeOf(e3)), null);
      }, jspb.Message.bytesListAsB64 = function(e3) {
        return jspb.Message.assertConsistentTypes_(e3), e3.length && typeof e3[0] != "string" ? goog.array.map(e3, jspb.Message.bytesAsB64) : e3;
      }, jspb.Message.bytesListAsU8 = function(e3) {
        return jspb.Message.assertConsistentTypes_(e3), !e3.length || e3[0] instanceof Uint8Array ? e3 : goog.array.map(e3, jspb.Message.bytesAsU8);
      }, jspb.Message.assertConsistentTypes_ = function(e3) {
        if (goog.DEBUG && e3 && 1 < e3.length) {
          var t2 = goog.typeOf(e3[0]);
          goog.array.forEach(e3, function(e4) {
            goog.typeOf(e4) != t2 && goog.asserts.fail("Inconsistent type in JSPB repeated field array. Got " + goog.typeOf(e4) + " expected " + t2);
          });
        }
      }, jspb.Message.getFieldWithDefault = function(e3, t2, o) {
        return (e3 = jspb.Message.getField(e3, t2)) == null ? o : e3;
      }, jspb.Message.getBooleanFieldWithDefault = function(e3, t2, o) {
        return (e3 = jspb.Message.getBooleanField(e3, t2)) == null ? o : e3;
      }, jspb.Message.getFloatingPointFieldWithDefault = function(e3, t2, o) {
        return (e3 = jspb.Message.getOptionalFloatingPointField(e3, t2)) == null ? o : e3;
      }, jspb.Message.getFieldProto3 = jspb.Message.getFieldWithDefault, jspb.Message.getMapField = function(e3, t2, o, r2) {
        if (e3.wrappers_ || (e3.wrappers_ = {}), t2 in e3.wrappers_)
          return e3.wrappers_[t2];
        var s3 = jspb.Message.getField(e3, t2);
        if (!s3) {
          if (o)
            return;
          s3 = [], jspb.Message.setField(e3, t2, s3);
        }
        return e3.wrappers_[t2] = new jspb.Map(s3, r2);
      }, jspb.Message.setField = function(e3, t2, o) {
        return goog.asserts.assertInstanceof(e3, jspb.Message), t2 < e3.pivot_ ? e3.array[jspb.Message.getIndex_(e3, t2)] = o : (jspb.Message.maybeInitEmptyExtensionObject_(e3), e3.extensionObject_[t2] = o), e3;
      }, jspb.Message.setProto3IntField = function(e3, t2, o) {
        return jspb.Message.setFieldIgnoringDefault_(e3, t2, o, 0);
      }, jspb.Message.setProto3FloatField = function(e3, t2, o) {
        return jspb.Message.setFieldIgnoringDefault_(e3, t2, o, 0);
      }, jspb.Message.setProto3BooleanField = function(e3, t2, o) {
        return jspb.Message.setFieldIgnoringDefault_(e3, t2, o, false);
      }, jspb.Message.setProto3StringField = function(e3, t2, o) {
        return jspb.Message.setFieldIgnoringDefault_(e3, t2, o, "");
      }, jspb.Message.setProto3BytesField = function(e3, t2, o) {
        return jspb.Message.setFieldIgnoringDefault_(e3, t2, o, "");
      }, jspb.Message.setProto3EnumField = function(e3, t2, o) {
        return jspb.Message.setFieldIgnoringDefault_(e3, t2, o, 0);
      }, jspb.Message.setProto3StringIntField = function(e3, t2, o) {
        return jspb.Message.setFieldIgnoringDefault_(e3, t2, o, "0");
      }, jspb.Message.setFieldIgnoringDefault_ = function(e3, t2, o, r2) {
        return goog.asserts.assertInstanceof(e3, jspb.Message), o !== r2 ? jspb.Message.setField(e3, t2, o) : e3.array[jspb.Message.getIndex_(e3, t2)] = null, e3;
      }, jspb.Message.addToRepeatedField = function(e3, t2, o, r2) {
        return goog.asserts.assertInstanceof(e3, jspb.Message), t2 = jspb.Message.getRepeatedField(e3, t2), r2 != null ? t2.splice(r2, 0, o) : t2.push(o), e3;
      }, jspb.Message.setOneofField = function(e3, t2, o, r2) {
        return goog.asserts.assertInstanceof(e3, jspb.Message), (o = jspb.Message.computeOneofCase(e3, o)) && o !== t2 && r2 !== void 0 && (e3.wrappers_ && o in e3.wrappers_ && (e3.wrappers_[o] = void 0), jspb.Message.setField(e3, o, void 0)), jspb.Message.setField(e3, t2, r2);
      }, jspb.Message.computeOneofCase = function(e3, t2) {
        for (var o, r2, s3 = 0; s3 < t2.length; s3++) {
          var n = t2[s3], i2 = jspb.Message.getField(e3, n);
          i2 != null && (o = n, r2 = i2, jspb.Message.setField(e3, n, void 0));
        }
        return o ? (jspb.Message.setField(e3, o, r2), o) : 0;
      }, jspb.Message.getWrapperField = function(e3, t2, o, r2) {
        if (e3.wrappers_ || (e3.wrappers_ = {}), !e3.wrappers_[o]) {
          var s3 = jspb.Message.getField(e3, o);
          (r2 || s3) && (e3.wrappers_[o] = new t2(s3));
        }
        return e3.wrappers_[o];
      }, jspb.Message.getRepeatedWrapperField = function(e3, t2, o) {
        return jspb.Message.wrapRepeatedField_(e3, t2, o), (t2 = e3.wrappers_[o]) == jspb.Message.EMPTY_LIST_SENTINEL_ && (t2 = e3.wrappers_[o] = []), t2;
      }, jspb.Message.wrapRepeatedField_ = function(e3, t2, o) {
        if (e3.wrappers_ || (e3.wrappers_ = {}), !e3.wrappers_[o]) {
          for (var r2 = jspb.Message.getRepeatedField(e3, o), s3 = [], n = 0; n < r2.length; n++)
            s3[n] = new t2(r2[n]);
          e3.wrappers_[o] = s3;
        }
      }, jspb.Message.setWrapperField = function(e3, t2, o) {
        goog.asserts.assertInstanceof(e3, jspb.Message), e3.wrappers_ || (e3.wrappers_ = {});
        var r2 = o ? o.toArray() : o;
        return e3.wrappers_[t2] = o, jspb.Message.setField(e3, t2, r2);
      }, jspb.Message.setOneofWrapperField = function(e3, t2, o, r2) {
        goog.asserts.assertInstanceof(e3, jspb.Message), e3.wrappers_ || (e3.wrappers_ = {});
        var s3 = r2 ? r2.toArray() : r2;
        return e3.wrappers_[t2] = r2, jspb.Message.setOneofField(e3, t2, o, s3);
      }, jspb.Message.setRepeatedWrapperField = function(e3, t2, o) {
        goog.asserts.assertInstanceof(e3, jspb.Message), e3.wrappers_ || (e3.wrappers_ = {}), o = o || [];
        for (var r2 = [], s3 = 0; s3 < o.length; s3++)
          r2[s3] = o[s3].toArray();
        return e3.wrappers_[t2] = o, jspb.Message.setField(e3, t2, r2);
      }, jspb.Message.addToRepeatedWrapperField = function(e3, t2, o, r2, s3) {
        jspb.Message.wrapRepeatedField_(e3, r2, t2);
        var n = e3.wrappers_[t2];
        return n || (n = e3.wrappers_[t2] = []), o = o || new r2(), e3 = jspb.Message.getRepeatedField(e3, t2), s3 != null ? (n.splice(s3, 0, o), e3.splice(s3, 0, o.toArray())) : (n.push(o), e3.push(o.toArray())), o;
      }, jspb.Message.toMap = function(e3, t2, o, r2) {
        for (var s3 = {}, n = 0; n < e3.length; n++)
          s3[t2.call(e3[n])] = o ? o.call(e3[n], r2, e3[n]) : e3[n];
        return s3;
      }, jspb.Message.prototype.syncMapFields_ = function() {
        if (this.wrappers_)
          for (var e3 in this.wrappers_) {
            var t2 = this.wrappers_[e3];
            if (goog.isArray(t2))
              for (var o = 0; o < t2.length; o++)
                t2[o] && t2[o].toArray();
            else
              t2 && t2.toArray();
          }
      }, jspb.Message.prototype.toArray = function() {
        return this.syncMapFields_(), this.array;
      }, jspb.Message.GENERATE_TO_STRING && (jspb.Message.prototype.toString = function() {
        return this.syncMapFields_(), this.array.toString();
      }), jspb.Message.prototype.getExtension = function(e3) {
        if (this.extensionObject_) {
          this.wrappers_ || (this.wrappers_ = {});
          var t2 = e3.fieldIndex;
          if (e3.isRepeated) {
            if (e3.isMessageType())
              return this.wrappers_[t2] || (this.wrappers_[t2] = goog.array.map(this.extensionObject_[t2] || [], function(t3) {
                return new e3.ctor(t3);
              })), this.wrappers_[t2];
          } else if (e3.isMessageType())
            return !this.wrappers_[t2] && this.extensionObject_[t2] && (this.wrappers_[t2] = new e3.ctor(this.extensionObject_[t2])), this.wrappers_[t2];
          return this.extensionObject_[t2];
        }
      }, jspb.Message.prototype.setExtension = function(e3, t2) {
        this.wrappers_ || (this.wrappers_ = {}), jspb.Message.maybeInitEmptyExtensionObject_(this);
        var o = e3.fieldIndex;
        return e3.isRepeated ? (t2 = t2 || [], e3.isMessageType() ? (this.wrappers_[o] = t2, this.extensionObject_[o] = goog.array.map(t2, function(e4) {
          return e4.toArray();
        })) : this.extensionObject_[o] = t2) : e3.isMessageType() ? (this.wrappers_[o] = t2, this.extensionObject_[o] = t2 ? t2.toArray() : t2) : this.extensionObject_[o] = t2, this;
      }, jspb.Message.difference = function(e3, t2) {
        if (!(e3 instanceof t2.constructor))
          throw Error("Messages have different types.");
        var o = e3.toArray();
        t2 = t2.toArray();
        var r2 = [], s3 = 0, n = o.length > t2.length ? o.length : t2.length;
        for (e3.getJsPbMessageId() && (r2[0] = e3.getJsPbMessageId(), s3 = 1); s3 < n; s3++)
          jspb.Message.compareFields(o[s3], t2[s3]) || (r2[s3] = t2[s3]);
        return new e3.constructor(r2);
      }, jspb.Message.equals = function(e3, t2) {
        return e3 == t2 || !(!e3 || !t2) && e3 instanceof t2.constructor && jspb.Message.compareFields(e3.toArray(), t2.toArray());
      }, jspb.Message.compareExtensions = function(e3, t2) {
        e3 = e3 || {}, t2 = t2 || {};
        var o, r2 = {};
        for (o in e3)
          r2[o] = 0;
        for (o in t2)
          r2[o] = 0;
        for (o in r2)
          if (!jspb.Message.compareFields(e3[o], t2[o]))
            return false;
        return true;
      }, jspb.Message.compareFields = function(e3, t2) {
        if (e3 == t2)
          return true;
        if (!goog.isObject(e3) || !goog.isObject(t2))
          return !!(typeof e3 == "number" && isNaN(e3) || typeof t2 == "number" && isNaN(t2)) && String(e3) == String(t2);
        if (e3.constructor != t2.constructor)
          return false;
        if (jspb.Message.SUPPORTS_UINT8ARRAY_ && e3.constructor === Uint8Array) {
          if (e3.length != t2.length)
            return false;
          for (var o = 0; o < e3.length; o++)
            if (e3[o] != t2[o])
              return false;
          return true;
        }
        if (e3.constructor === Array) {
          var r2 = void 0, s3 = void 0, n = Math.max(e3.length, t2.length);
          for (o = 0; o < n; o++) {
            var i2 = e3[o], a2 = t2[o];
            if (i2 && i2.constructor == Object && (goog.asserts.assert(r2 === void 0), goog.asserts.assert(o === e3.length - 1), r2 = i2, i2 = void 0), a2 && a2.constructor == Object && (goog.asserts.assert(s3 === void 0), goog.asserts.assert(o === t2.length - 1), s3 = a2, a2 = void 0), !jspb.Message.compareFields(i2, a2))
              return false;
          }
          return !r2 && !s3 || (r2 = r2 || {}, s3 = s3 || {}, jspb.Message.compareExtensions(r2, s3));
        }
        if (e3.constructor === Object)
          return jspb.Message.compareExtensions(e3, t2);
        throw Error("Invalid type in JSPB array");
      }, jspb.Message.prototype.cloneMessage = function() {
        return jspb.Message.cloneMessage(this);
      }, jspb.Message.prototype.clone = function() {
        return jspb.Message.cloneMessage(this);
      }, jspb.Message.clone = function(e3) {
        return jspb.Message.cloneMessage(e3);
      }, jspb.Message.cloneMessage = function(e3) {
        return new e3.constructor(jspb.Message.clone_(e3.toArray()));
      }, jspb.Message.copyInto = function(e3, t2) {
        goog.asserts.assertInstanceof(e3, jspb.Message), goog.asserts.assertInstanceof(t2, jspb.Message), goog.asserts.assert(e3.constructor == t2.constructor, "Copy source and target message should have the same type."), e3 = jspb.Message.clone(e3);
        for (var o = t2.toArray(), r2 = e3.toArray(), s3 = o.length = 0; s3 < r2.length; s3++)
          o[s3] = r2[s3];
        t2.wrappers_ = e3.wrappers_, t2.extensionObject_ = e3.extensionObject_;
      }, jspb.Message.clone_ = function(e3) {
        if (goog.isArray(e3)) {
          for (var t2 = Array(e3.length), o = 0; o < e3.length; o++) {
            var r2 = e3[o];
            r2 != null && (t2[o] = typeof r2 == "object" ? jspb.Message.clone_(goog.asserts.assert(r2)) : r2);
          }
          return t2;
        }
        if (jspb.Message.SUPPORTS_UINT8ARRAY_ && e3 instanceof Uint8Array)
          return new Uint8Array(e3);
        for (o in t2 = {}, e3)
          (r2 = e3[o]) != null && (t2[o] = typeof r2 == "object" ? jspb.Message.clone_(goog.asserts.assert(r2)) : r2);
        return t2;
      }, jspb.Message.registerMessageType = function(e3, t2) {
        t2.messageId = e3;
      }, jspb.Message.messageSetExtensions = {}, jspb.Message.messageSetExtensionsBinary = {}, jspb.arith = {}, jspb.arith.UInt64 = function(e3, t2) {
        this.lo = e3, this.hi = t2;
      }, jspb.arith.UInt64.prototype.cmp = function(e3) {
        return this.hi < e3.hi || this.hi == e3.hi && this.lo < e3.lo ? -1 : this.hi == e3.hi && this.lo == e3.lo ? 0 : 1;
      }, jspb.arith.UInt64.prototype.rightShift = function() {
        return new jspb.arith.UInt64((this.lo >>> 1 | (1 & this.hi) << 31) >>> 0, this.hi >>> 1 >>> 0);
      }, jspb.arith.UInt64.prototype.leftShift = function() {
        return new jspb.arith.UInt64(this.lo << 1 >>> 0, (this.hi << 1 | this.lo >>> 31) >>> 0);
      }, jspb.arith.UInt64.prototype.msb = function() {
        return !!(2147483648 & this.hi);
      }, jspb.arith.UInt64.prototype.lsb = function() {
        return !!(1 & this.lo);
      }, jspb.arith.UInt64.prototype.zero = function() {
        return this.lo == 0 && this.hi == 0;
      }, jspb.arith.UInt64.prototype.add = function(e3) {
        return new jspb.arith.UInt64((this.lo + e3.lo & 4294967295) >>> 0 >>> 0, ((this.hi + e3.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + e3.lo ? 1 : 0) >>> 0);
      }, jspb.arith.UInt64.prototype.sub = function(e3) {
        return new jspb.arith.UInt64((this.lo - e3.lo & 4294967295) >>> 0 >>> 0, ((this.hi - e3.hi & 4294967295) >>> 0) - (0 > this.lo - e3.lo ? 1 : 0) >>> 0);
      }, jspb.arith.UInt64.mul32x32 = function(e3, t2) {
        var o = 65535 & e3, r2 = 65535 & t2, s3 = t2 >>> 16;
        for (t2 = o * r2 + 65536 * (o * s3 & 65535) + 65536 * ((e3 >>>= 16) * r2 & 65535), o = e3 * s3 + (o * s3 >>> 16) + (e3 * r2 >>> 16); 4294967296 <= t2; )
          t2 -= 4294967296, o += 1;
        return new jspb.arith.UInt64(t2 >>> 0, o >>> 0);
      }, jspb.arith.UInt64.prototype.mul = function(e3) {
        var t2 = jspb.arith.UInt64.mul32x32(this.lo, e3);
        return (e3 = jspb.arith.UInt64.mul32x32(this.hi, e3)).hi = e3.lo, e3.lo = 0, t2.add(e3);
      }, jspb.arith.UInt64.prototype.div = function(e3) {
        if (e3 == 0)
          return [];
        var t2 = new jspb.arith.UInt64(0, 0), o = new jspb.arith.UInt64(this.lo, this.hi);
        e3 = new jspb.arith.UInt64(e3, 0);
        for (var r2 = new jspb.arith.UInt64(1, 0); !e3.msb(); )
          e3 = e3.leftShift(), r2 = r2.leftShift();
        for (; !r2.zero(); )
          0 >= e3.cmp(o) && (t2 = t2.add(r2), o = o.sub(e3)), e3 = e3.rightShift(), r2 = r2.rightShift();
        return [t2, o];
      }, jspb.arith.UInt64.prototype.toString = function() {
        for (var e3 = "", t2 = this; !t2.zero(); ) {
          var o = (t2 = t2.div(10))[0];
          e3 = t2[1].lo + e3, t2 = o;
        }
        return e3 == "" && (e3 = "0"), e3;
      }, jspb.arith.UInt64.fromString = function(e3) {
        for (var t2 = new jspb.arith.UInt64(0, 0), o = new jspb.arith.UInt64(0, 0), r2 = 0; r2 < e3.length; r2++) {
          if ("0" > e3[r2] || "9" < e3[r2])
            return null;
          var s3 = parseInt(e3[r2], 10);
          o.lo = s3, t2 = t2.mul(10).add(o);
        }
        return t2;
      }, jspb.arith.UInt64.prototype.clone = function() {
        return new jspb.arith.UInt64(this.lo, this.hi);
      }, jspb.arith.Int64 = function(e3, t2) {
        this.lo = e3, this.hi = t2;
      }, jspb.arith.Int64.prototype.add = function(e3) {
        return new jspb.arith.Int64((this.lo + e3.lo & 4294967295) >>> 0 >>> 0, ((this.hi + e3.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + e3.lo ? 1 : 0) >>> 0);
      }, jspb.arith.Int64.prototype.sub = function(e3) {
        return new jspb.arith.Int64((this.lo - e3.lo & 4294967295) >>> 0 >>> 0, ((this.hi - e3.hi & 4294967295) >>> 0) - (0 > this.lo - e3.lo ? 1 : 0) >>> 0);
      }, jspb.arith.Int64.prototype.clone = function() {
        return new jspb.arith.Int64(this.lo, this.hi);
      }, jspb.arith.Int64.prototype.toString = function() {
        var e3 = (2147483648 & this.hi) != 0, t2 = new jspb.arith.UInt64(this.lo, this.hi);
        return e3 && (t2 = new jspb.arith.UInt64(0, 0).sub(t2)), (e3 ? "-" : "") + t2.toString();
      }, jspb.arith.Int64.fromString = function(e3) {
        var t2 = 0 < e3.length && e3[0] == "-";
        return t2 && (e3 = e3.substring(1)), (e3 = jspb.arith.UInt64.fromString(e3)) === null ? null : (t2 && (e3 = new jspb.arith.UInt64(0, 0).sub(e3)), new jspb.arith.Int64(e3.lo, e3.hi));
      }, jspb.BinaryEncoder = function() {
        this.buffer_ = [];
      }, jspb.BinaryEncoder.prototype.length = function() {
        return this.buffer_.length;
      }, jspb.BinaryEncoder.prototype.end = function() {
        var e3 = this.buffer_;
        return this.buffer_ = [], e3;
      }, jspb.BinaryEncoder.prototype.writeSplitVarint64 = function(e3, t2) {
        for (goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(t2 == Math.floor(t2)), goog.asserts.assert(0 <= e3 && e3 < jspb.BinaryConstants.TWO_TO_32), goog.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_32); 0 < t2 || 127 < e3; )
          this.buffer_.push(127 & e3 | 128), e3 = (e3 >>> 7 | t2 << 25) >>> 0, t2 >>>= 7;
        this.buffer_.push(e3);
      }, jspb.BinaryEncoder.prototype.writeSplitFixed64 = function(e3, t2) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(t2 == Math.floor(t2)), goog.asserts.assert(0 <= e3 && e3 < jspb.BinaryConstants.TWO_TO_32), goog.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_32), this.writeUint32(e3), this.writeUint32(t2);
      }, jspb.BinaryEncoder.prototype.writeUnsignedVarint32 = function(e3) {
        for (goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(0 <= e3 && e3 < jspb.BinaryConstants.TWO_TO_32); 127 < e3; )
          this.buffer_.push(127 & e3 | 128), e3 >>>= 7;
        this.buffer_.push(e3);
      }, jspb.BinaryEncoder.prototype.writeSignedVarint32 = function(e3) {
        if (goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(e3 >= -jspb.BinaryConstants.TWO_TO_31 && e3 < jspb.BinaryConstants.TWO_TO_31), 0 <= e3)
          this.writeUnsignedVarint32(e3);
        else {
          for (var t2 = 0; 9 > t2; t2++)
            this.buffer_.push(127 & e3 | 128), e3 >>= 7;
          this.buffer_.push(1);
        }
      }, jspb.BinaryEncoder.prototype.writeUnsignedVarint64 = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(0 <= e3 && e3 < jspb.BinaryConstants.TWO_TO_64), jspb.utils.splitInt64(e3), this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);
      }, jspb.BinaryEncoder.prototype.writeSignedVarint64 = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(e3 >= -jspb.BinaryConstants.TWO_TO_63 && e3 < jspb.BinaryConstants.TWO_TO_63), jspb.utils.splitInt64(e3), this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);
      }, jspb.BinaryEncoder.prototype.writeZigzagVarint32 = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(e3 >= -jspb.BinaryConstants.TWO_TO_31 && e3 < jspb.BinaryConstants.TWO_TO_31), this.writeUnsignedVarint32((e3 << 1 ^ e3 >> 31) >>> 0);
      }, jspb.BinaryEncoder.prototype.writeZigzagVarint64 = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(e3 >= -jspb.BinaryConstants.TWO_TO_63 && e3 < jspb.BinaryConstants.TWO_TO_63), jspb.utils.splitZigzag64(e3), this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);
      }, jspb.BinaryEncoder.prototype.writeZigzagVarint64String = function(e3) {
        this.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(e3));
      }, jspb.BinaryEncoder.prototype.writeZigzagVarintHash64 = function(e3) {
        var t2 = this;
        jspb.utils.splitHash64(e3), jspb.utils.toZigzag64(jspb.utils.split64Low, jspb.utils.split64High, function(e4, o) {
          t2.writeSplitVarint64(e4 >>> 0, o >>> 0);
        });
      }, jspb.BinaryEncoder.prototype.writeUint8 = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(0 <= e3 && 256 > e3), this.buffer_.push(e3 >>> 0 & 255);
      }, jspb.BinaryEncoder.prototype.writeUint16 = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(0 <= e3 && 65536 > e3), this.buffer_.push(e3 >>> 0 & 255), this.buffer_.push(e3 >>> 8 & 255);
      }, jspb.BinaryEncoder.prototype.writeUint32 = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(0 <= e3 && e3 < jspb.BinaryConstants.TWO_TO_32), this.buffer_.push(e3 >>> 0 & 255), this.buffer_.push(e3 >>> 8 & 255), this.buffer_.push(e3 >>> 16 & 255), this.buffer_.push(e3 >>> 24 & 255);
      }, jspb.BinaryEncoder.prototype.writeUint64 = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(0 <= e3 && e3 < jspb.BinaryConstants.TWO_TO_64), jspb.utils.splitUint64(e3), this.writeUint32(jspb.utils.split64Low), this.writeUint32(jspb.utils.split64High);
      }, jspb.BinaryEncoder.prototype.writeInt8 = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(-128 <= e3 && 128 > e3), this.buffer_.push(e3 >>> 0 & 255);
      }, jspb.BinaryEncoder.prototype.writeInt16 = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(-32768 <= e3 && 32768 > e3), this.buffer_.push(e3 >>> 0 & 255), this.buffer_.push(e3 >>> 8 & 255);
      }, jspb.BinaryEncoder.prototype.writeInt32 = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(e3 >= -jspb.BinaryConstants.TWO_TO_31 && e3 < jspb.BinaryConstants.TWO_TO_31), this.buffer_.push(e3 >>> 0 & 255), this.buffer_.push(e3 >>> 8 & 255), this.buffer_.push(e3 >>> 16 & 255), this.buffer_.push(e3 >>> 24 & 255);
      }, jspb.BinaryEncoder.prototype.writeInt64 = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(e3 >= -jspb.BinaryConstants.TWO_TO_63 && e3 < jspb.BinaryConstants.TWO_TO_63), jspb.utils.splitInt64(e3), this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High);
      }, jspb.BinaryEncoder.prototype.writeInt64String = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(+e3 >= -jspb.BinaryConstants.TWO_TO_63 && +e3 < jspb.BinaryConstants.TWO_TO_63), jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(e3)), this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High);
      }, jspb.BinaryEncoder.prototype.writeFloat = function(e3) {
        goog.asserts.assert(1 / 0 === e3 || -1 / 0 === e3 || isNaN(e3) || e3 >= -jspb.BinaryConstants.FLOAT32_MAX && e3 <= jspb.BinaryConstants.FLOAT32_MAX), jspb.utils.splitFloat32(e3), this.writeUint32(jspb.utils.split64Low);
      }, jspb.BinaryEncoder.prototype.writeDouble = function(e3) {
        goog.asserts.assert(1 / 0 === e3 || -1 / 0 === e3 || isNaN(e3) || e3 >= -jspb.BinaryConstants.FLOAT64_MAX && e3 <= jspb.BinaryConstants.FLOAT64_MAX), jspb.utils.splitFloat64(e3), this.writeUint32(jspb.utils.split64Low), this.writeUint32(jspb.utils.split64High);
      }, jspb.BinaryEncoder.prototype.writeBool = function(e3) {
        goog.asserts.assert(typeof e3 == "boolean" || typeof e3 == "number"), this.buffer_.push(e3 ? 1 : 0);
      }, jspb.BinaryEncoder.prototype.writeEnum = function(e3) {
        goog.asserts.assert(e3 == Math.floor(e3)), goog.asserts.assert(e3 >= -jspb.BinaryConstants.TWO_TO_31 && e3 < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32(e3);
      }, jspb.BinaryEncoder.prototype.writeBytes = function(e3) {
        this.buffer_.push.apply(this.buffer_, e3);
      }, jspb.BinaryEncoder.prototype.writeVarintHash64 = function(e3) {
        jspb.utils.splitHash64(e3), this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);
      }, jspb.BinaryEncoder.prototype.writeFixedHash64 = function(e3) {
        jspb.utils.splitHash64(e3), this.writeUint32(jspb.utils.split64Low), this.writeUint32(jspb.utils.split64High);
      }, jspb.BinaryEncoder.prototype.writeString = function(e3) {
        for (var t2 = this.buffer_.length, o = 0; o < e3.length; o++) {
          var r2 = e3.charCodeAt(o);
          if (128 > r2)
            this.buffer_.push(r2);
          else if (2048 > r2)
            this.buffer_.push(r2 >> 6 | 192), this.buffer_.push(63 & r2 | 128);
          else if (65536 > r2)
            if (55296 <= r2 && 56319 >= r2 && o + 1 < e3.length) {
              var s3 = e3.charCodeAt(o + 1);
              56320 <= s3 && 57343 >= s3 && (r2 = 1024 * (r2 - 55296) + s3 - 56320 + 65536, this.buffer_.push(r2 >> 18 | 240), this.buffer_.push(r2 >> 12 & 63 | 128), this.buffer_.push(r2 >> 6 & 63 | 128), this.buffer_.push(63 & r2 | 128), o++);
            } else
              this.buffer_.push(r2 >> 12 | 224), this.buffer_.push(r2 >> 6 & 63 | 128), this.buffer_.push(63 & r2 | 128);
        }
        return this.buffer_.length - t2;
      }, jspb.BinaryWriter = function() {
        this.blocks_ = [], this.totalLength_ = 0, this.encoder_ = new jspb.BinaryEncoder(), this.bookmarks_ = [];
      }, jspb.BinaryWriter.prototype.appendUint8Array_ = function(e3) {
        var t2 = this.encoder_.end();
        this.blocks_.push(t2), this.blocks_.push(e3), this.totalLength_ += t2.length + e3.length;
      }, jspb.BinaryWriter.prototype.beginDelimited_ = function(e3) {
        return this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.DELIMITED), e3 = this.encoder_.end(), this.blocks_.push(e3), this.totalLength_ += e3.length, e3.push(this.totalLength_), e3;
      }, jspb.BinaryWriter.prototype.endDelimited_ = function(e3) {
        var t2 = e3.pop();
        for (t2 = this.totalLength_ + this.encoder_.length() - t2, goog.asserts.assert(0 <= t2); 127 < t2; )
          e3.push(127 & t2 | 128), t2 >>>= 7, this.totalLength_++;
        e3.push(t2), this.totalLength_++;
      }, jspb.BinaryWriter.prototype.writeSerializedMessage = function(e3, t2, o) {
        this.appendUint8Array_(e3.subarray(t2, o));
      }, jspb.BinaryWriter.prototype.maybeWriteSerializedMessage = function(e3, t2, o) {
        e3 != null && t2 != null && o != null && this.writeSerializedMessage(e3, t2, o);
      }, jspb.BinaryWriter.prototype.reset = function() {
        this.blocks_ = [], this.encoder_.end(), this.totalLength_ = 0, this.bookmarks_ = [];
      }, jspb.BinaryWriter.prototype.getResultBuffer = function() {
        goog.asserts.assert(this.bookmarks_.length == 0);
        for (var e3 = new Uint8Array(this.totalLength_ + this.encoder_.length()), t2 = this.blocks_, o = t2.length, r2 = 0, s3 = 0; s3 < o; s3++) {
          var n = t2[s3];
          e3.set(n, r2), r2 += n.length;
        }
        return t2 = this.encoder_.end(), e3.set(t2, r2), r2 += t2.length, goog.asserts.assert(r2 == e3.length), this.blocks_ = [e3], e3;
      }, jspb.BinaryWriter.prototype.getResultBase64String = function(e3) {
        return goog.crypt.base64.encodeByteArray(this.getResultBuffer(), e3);
      }, jspb.BinaryWriter.prototype.beginSubMessage = function(e3) {
        this.bookmarks_.push(this.beginDelimited_(e3));
      }, jspb.BinaryWriter.prototype.endSubMessage = function() {
        goog.asserts.assert(0 <= this.bookmarks_.length), this.endDelimited_(this.bookmarks_.pop());
      }, jspb.BinaryWriter.prototype.writeFieldHeader_ = function(e3, t2) {
        goog.asserts.assert(1 <= e3 && e3 == Math.floor(e3)), this.encoder_.writeUnsignedVarint32(8 * e3 + t2);
      }, jspb.BinaryWriter.prototype.writeAny = function(e3, t2, o) {
        var r2 = jspb.BinaryConstants.FieldType;
        switch (e3) {
          case r2.DOUBLE:
            this.writeDouble(t2, o);
            break;
          case r2.FLOAT:
            this.writeFloat(t2, o);
            break;
          case r2.INT64:
            this.writeInt64(t2, o);
            break;
          case r2.UINT64:
            this.writeUint64(t2, o);
            break;
          case r2.INT32:
            this.writeInt32(t2, o);
            break;
          case r2.FIXED64:
            this.writeFixed64(t2, o);
            break;
          case r2.FIXED32:
            this.writeFixed32(t2, o);
            break;
          case r2.BOOL:
            this.writeBool(t2, o);
            break;
          case r2.STRING:
            this.writeString(t2, o);
            break;
          case r2.GROUP:
            goog.asserts.fail("Group field type not supported in writeAny()");
            break;
          case r2.MESSAGE:
            goog.asserts.fail("Message field type not supported in writeAny()");
            break;
          case r2.BYTES:
            this.writeBytes(t2, o);
            break;
          case r2.UINT32:
            this.writeUint32(t2, o);
            break;
          case r2.ENUM:
            this.writeEnum(t2, o);
            break;
          case r2.SFIXED32:
            this.writeSfixed32(t2, o);
            break;
          case r2.SFIXED64:
            this.writeSfixed64(t2, o);
            break;
          case r2.SINT32:
            this.writeSint32(t2, o);
            break;
          case r2.SINT64:
            this.writeSint64(t2, o);
            break;
          case r2.FHASH64:
            this.writeFixedHash64(t2, o);
            break;
          case r2.VHASH64:
            this.writeVarintHash64(t2, o);
            break;
          default:
            goog.asserts.fail("Invalid field type in writeAny()");
        }
      }, jspb.BinaryWriter.prototype.writeUnsignedVarint32_ = function(e3, t2) {
        t2 != null && (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint32(t2));
      }, jspb.BinaryWriter.prototype.writeSignedVarint32_ = function(e3, t2) {
        t2 != null && (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(t2));
      }, jspb.BinaryWriter.prototype.writeUnsignedVarint64_ = function(e3, t2) {
        t2 != null && (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint64(t2));
      }, jspb.BinaryWriter.prototype.writeSignedVarint64_ = function(e3, t2) {
        t2 != null && (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint64(t2));
      }, jspb.BinaryWriter.prototype.writeZigzagVarint32_ = function(e3, t2) {
        t2 != null && (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint32(t2));
      }, jspb.BinaryWriter.prototype.writeZigzagVarint64_ = function(e3, t2) {
        t2 != null && (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64(t2));
      }, jspb.BinaryWriter.prototype.writeZigzagVarint64String_ = function(e3, t2) {
        t2 != null && (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64String(t2));
      }, jspb.BinaryWriter.prototype.writeZigzagVarintHash64_ = function(e3, t2) {
        t2 != null && (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarintHash64(t2));
      }, jspb.BinaryWriter.prototype.writeInt32 = function(e3, t2) {
        t2 != null && (goog.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_31 && t2 < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(e3, t2));
      }, jspb.BinaryWriter.prototype.writeInt32String = function(e3, t2) {
        t2 != null && (t2 = parseInt(t2, 10), goog.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_31 && t2 < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(e3, t2));
      }, jspb.BinaryWriter.prototype.writeInt64 = function(e3, t2) {
        t2 != null && (goog.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_63 && t2 < jspb.BinaryConstants.TWO_TO_63), this.writeSignedVarint64_(e3, t2));
      }, jspb.BinaryWriter.prototype.writeInt64String = function(e3, t2) {
        t2 != null && (t2 = jspb.arith.Int64.fromString(t2), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(t2.lo, t2.hi));
      }, jspb.BinaryWriter.prototype.writeUint32 = function(e3, t2) {
        t2 != null && (goog.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(e3, t2));
      }, jspb.BinaryWriter.prototype.writeUint32String = function(e3, t2) {
        t2 != null && (t2 = parseInt(t2, 10), goog.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(e3, t2));
      }, jspb.BinaryWriter.prototype.writeUint64 = function(e3, t2) {
        t2 != null && (goog.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_64), this.writeUnsignedVarint64_(e3, t2));
      }, jspb.BinaryWriter.prototype.writeUint64String = function(e3, t2) {
        t2 != null && (t2 = jspb.arith.UInt64.fromString(t2), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(t2.lo, t2.hi));
      }, jspb.BinaryWriter.prototype.writeSint32 = function(e3, t2) {
        t2 != null && (goog.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_31 && t2 < jspb.BinaryConstants.TWO_TO_31), this.writeZigzagVarint32_(e3, t2));
      }, jspb.BinaryWriter.prototype.writeSint64 = function(e3, t2) {
        t2 != null && (goog.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_63 && t2 < jspb.BinaryConstants.TWO_TO_63), this.writeZigzagVarint64_(e3, t2));
      }, jspb.BinaryWriter.prototype.writeSintHash64 = function(e3, t2) {
        t2 != null && this.writeZigzagVarintHash64_(e3, t2);
      }, jspb.BinaryWriter.prototype.writeSint64String = function(e3, t2) {
        t2 != null && this.writeZigzagVarint64String_(e3, t2);
      }, jspb.BinaryWriter.prototype.writeFixed32 = function(e3, t2) {
        t2 != null && (goog.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_32), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeUint32(t2));
      }, jspb.BinaryWriter.prototype.writeFixed64 = function(e3, t2) {
        t2 != null && (goog.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_64), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeUint64(t2));
      }, jspb.BinaryWriter.prototype.writeFixed64String = function(e3, t2) {
        t2 != null && (t2 = jspb.arith.UInt64.fromString(t2), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(t2.lo, t2.hi));
      }, jspb.BinaryWriter.prototype.writeSfixed32 = function(e3, t2) {
        t2 != null && (goog.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_31 && t2 < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeInt32(t2));
      }, jspb.BinaryWriter.prototype.writeSfixed64 = function(e3, t2) {
        t2 != null && (goog.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_63 && t2 < jspb.BinaryConstants.TWO_TO_63), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeInt64(t2));
      }, jspb.BinaryWriter.prototype.writeSfixed64String = function(e3, t2) {
        t2 != null && (t2 = jspb.arith.Int64.fromString(t2), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(t2.lo, t2.hi));
      }, jspb.BinaryWriter.prototype.writeFloat = function(e3, t2) {
        t2 != null && (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeFloat(t2));
      }, jspb.BinaryWriter.prototype.writeDouble = function(e3, t2) {
        t2 != null && (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeDouble(t2));
      }, jspb.BinaryWriter.prototype.writeBool = function(e3, t2) {
        t2 != null && (goog.asserts.assert(typeof t2 == "boolean" || typeof t2 == "number"), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeBool(t2));
      }, jspb.BinaryWriter.prototype.writeEnum = function(e3, t2) {
        t2 != null && (goog.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_31 && t2 < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(t2));
      }, jspb.BinaryWriter.prototype.writeString = function(e3, t2) {
        t2 != null && (e3 = this.beginDelimited_(e3), this.encoder_.writeString(t2), this.endDelimited_(e3));
      }, jspb.BinaryWriter.prototype.writeBytes = function(e3, t2) {
        t2 != null && (t2 = jspb.utils.byteSourceToUint8Array(t2), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(t2.length), this.appendUint8Array_(t2));
      }, jspb.BinaryWriter.prototype.writeMessage = function(e3, t2, o) {
        t2 != null && (e3 = this.beginDelimited_(e3), o(t2, this), this.endDelimited_(e3));
      }, jspb.BinaryWriter.prototype.writeMessageSet = function(e3, t2, o) {
        t2 != null && (this.writeFieldHeader_(1, jspb.BinaryConstants.WireType.START_GROUP), this.writeFieldHeader_(2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(e3), e3 = this.beginDelimited_(3), o(t2, this), this.endDelimited_(e3), this.writeFieldHeader_(1, jspb.BinaryConstants.WireType.END_GROUP));
      }, jspb.BinaryWriter.prototype.writeGroup = function(e3, t2, o) {
        t2 != null && (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.START_GROUP), o(t2, this), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.END_GROUP));
      }, jspb.BinaryWriter.prototype.writeFixedHash64 = function(e3, t2) {
        t2 != null && (goog.asserts.assert(t2.length == 8), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeFixedHash64(t2));
      }, jspb.BinaryWriter.prototype.writeVarintHash64 = function(e3, t2) {
        t2 != null && (goog.asserts.assert(t2.length == 8), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeVarintHash64(t2));
      }, jspb.BinaryWriter.prototype.writeSplitFixed64 = function(e3, t2, o) {
        this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(t2, o);
      }, jspb.BinaryWriter.prototype.writeSplitVarint64 = function(e3, t2, o) {
        this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(t2, o);
      }, jspb.BinaryWriter.prototype.writeSplitZigzagVarint64 = function(e3, t2, o) {
        this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.VARINT);
        var r2 = this.encoder_;
        jspb.utils.toZigzag64(t2, o, function(e4, t3) {
          r2.writeSplitVarint64(e4 >>> 0, t3 >>> 0);
        });
      }, jspb.BinaryWriter.prototype.writeRepeatedInt32 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeSignedVarint32_(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedInt32String = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeInt32String(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedInt64 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeSignedVarint64_(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedSplitFixed64 = function(e3, t2, o, r2) {
        if (t2 != null)
          for (var s3 = 0; s3 < t2.length; s3++)
            this.writeSplitFixed64(e3, o(t2[s3]), r2(t2[s3]));
      }, jspb.BinaryWriter.prototype.writeRepeatedSplitVarint64 = function(e3, t2, o, r2) {
        if (t2 != null)
          for (var s3 = 0; s3 < t2.length; s3++)
            this.writeSplitVarint64(e3, o(t2[s3]), r2(t2[s3]));
      }, jspb.BinaryWriter.prototype.writeRepeatedSplitZigzagVarint64 = function(e3, t2, o, r2) {
        if (t2 != null)
          for (var s3 = 0; s3 < t2.length; s3++)
            this.writeSplitZigzagVarint64(e3, o(t2[s3]), r2(t2[s3]));
      }, jspb.BinaryWriter.prototype.writeRepeatedInt64String = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeInt64String(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedUint32 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeUnsignedVarint32_(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedUint32String = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeUint32String(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedUint64 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeUnsignedVarint64_(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedUint64String = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeUint64String(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedSint32 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeZigzagVarint32_(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedSint64 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeZigzagVarint64_(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedSint64String = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeZigzagVarint64String_(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedSintHash64 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeZigzagVarintHash64_(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedFixed32 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeFixed32(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedFixed64 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeFixed64(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedFixed64String = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeFixed64String(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedSfixed32 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeSfixed32(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedSfixed64 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeSfixed64(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedSfixed64String = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeSfixed64String(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedFloat = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeFloat(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedDouble = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeDouble(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedBool = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeBool(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedEnum = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeEnum(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedString = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeString(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedBytes = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeBytes(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedMessage = function(e3, t2, o) {
        if (t2 != null)
          for (var r2 = 0; r2 < t2.length; r2++) {
            var s3 = this.beginDelimited_(e3);
            o(t2[r2], this), this.endDelimited_(s3);
          }
      }, jspb.BinaryWriter.prototype.writeRepeatedGroup = function(e3, t2, o) {
        if (t2 != null)
          for (var r2 = 0; r2 < t2.length; r2++)
            this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.START_GROUP), o(t2[r2], this), this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.END_GROUP);
      }, jspb.BinaryWriter.prototype.writeRepeatedFixedHash64 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeFixedHash64(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writeRepeatedVarintHash64 = function(e3, t2) {
        if (t2 != null)
          for (var o = 0; o < t2.length; o++)
            this.writeVarintHash64(e3, t2[o]);
      }, jspb.BinaryWriter.prototype.writePackedInt32 = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++)
            this.encoder_.writeSignedVarint32(t2[o]);
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedInt32String = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++)
            this.encoder_.writeSignedVarint32(parseInt(t2[o], 10));
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedInt64 = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++)
            this.encoder_.writeSignedVarint64(t2[o]);
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedSplitFixed64 = function(e3, t2, o, r2) {
        if (t2 != null) {
          e3 = this.beginDelimited_(e3);
          for (var s3 = 0; s3 < t2.length; s3++)
            this.encoder_.writeSplitFixed64(o(t2[s3]), r2(t2[s3]));
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedSplitVarint64 = function(e3, t2, o, r2) {
        if (t2 != null) {
          e3 = this.beginDelimited_(e3);
          for (var s3 = 0; s3 < t2.length; s3++)
            this.encoder_.writeSplitVarint64(o(t2[s3]), r2(t2[s3]));
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedSplitZigzagVarint64 = function(e3, t2, o, r2) {
        if (t2 != null) {
          e3 = this.beginDelimited_(e3);
          for (var s3 = this.encoder_, n = 0; n < t2.length; n++)
            jspb.utils.toZigzag64(o(t2[n]), r2(t2[n]), function(e4, t3) {
              s3.writeSplitVarint64(e4 >>> 0, t3 >>> 0);
            });
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedInt64String = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++) {
            var r2 = jspb.arith.Int64.fromString(t2[o]);
            this.encoder_.writeSplitVarint64(r2.lo, r2.hi);
          }
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedUint32 = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++)
            this.encoder_.writeUnsignedVarint32(t2[o]);
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedUint32String = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++)
            this.encoder_.writeUnsignedVarint32(parseInt(t2[o], 10));
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedUint64 = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++)
            this.encoder_.writeUnsignedVarint64(t2[o]);
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedUint64String = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++) {
            var r2 = jspb.arith.UInt64.fromString(t2[o]);
            this.encoder_.writeSplitVarint64(r2.lo, r2.hi);
          }
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedSint32 = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++)
            this.encoder_.writeZigzagVarint32(t2[o]);
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedSint64 = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++)
            this.encoder_.writeZigzagVarint64(t2[o]);
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedSint64String = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++)
            this.encoder_.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(t2[o]));
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedSintHash64 = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++)
            this.encoder_.writeZigzagVarintHash64(t2[o]);
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedFixed32 = function(e3, t2) {
        if (t2 != null && t2.length)
          for (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * t2.length), e3 = 0; e3 < t2.length; e3++)
            this.encoder_.writeUint32(t2[e3]);
      }, jspb.BinaryWriter.prototype.writePackedFixed64 = function(e3, t2) {
        if (t2 != null && t2.length)
          for (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * t2.length), e3 = 0; e3 < t2.length; e3++)
            this.encoder_.writeUint64(t2[e3]);
      }, jspb.BinaryWriter.prototype.writePackedFixed64String = function(e3, t2) {
        if (t2 != null && t2.length)
          for (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * t2.length), e3 = 0; e3 < t2.length; e3++) {
            var o = jspb.arith.UInt64.fromString(t2[e3]);
            this.encoder_.writeSplitFixed64(o.lo, o.hi);
          }
      }, jspb.BinaryWriter.prototype.writePackedSfixed32 = function(e3, t2) {
        if (t2 != null && t2.length)
          for (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * t2.length), e3 = 0; e3 < t2.length; e3++)
            this.encoder_.writeInt32(t2[e3]);
      }, jspb.BinaryWriter.prototype.writePackedSfixed64 = function(e3, t2) {
        if (t2 != null && t2.length)
          for (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * t2.length), e3 = 0; e3 < t2.length; e3++)
            this.encoder_.writeInt64(t2[e3]);
      }, jspb.BinaryWriter.prototype.writePackedSfixed64String = function(e3, t2) {
        if (t2 != null && t2.length)
          for (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * t2.length), e3 = 0; e3 < t2.length; e3++)
            this.encoder_.writeInt64String(t2[e3]);
      }, jspb.BinaryWriter.prototype.writePackedFloat = function(e3, t2) {
        if (t2 != null && t2.length)
          for (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * t2.length), e3 = 0; e3 < t2.length; e3++)
            this.encoder_.writeFloat(t2[e3]);
      }, jspb.BinaryWriter.prototype.writePackedDouble = function(e3, t2) {
        if (t2 != null && t2.length)
          for (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * t2.length), e3 = 0; e3 < t2.length; e3++)
            this.encoder_.writeDouble(t2[e3]);
      }, jspb.BinaryWriter.prototype.writePackedBool = function(e3, t2) {
        if (t2 != null && t2.length)
          for (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(t2.length), e3 = 0; e3 < t2.length; e3++)
            this.encoder_.writeBool(t2[e3]);
      }, jspb.BinaryWriter.prototype.writePackedEnum = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++)
            this.encoder_.writeEnum(t2[o]);
          this.endDelimited_(e3);
        }
      }, jspb.BinaryWriter.prototype.writePackedFixedHash64 = function(e3, t2) {
        if (t2 != null && t2.length)
          for (this.writeFieldHeader_(e3, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * t2.length), e3 = 0; e3 < t2.length; e3++)
            this.encoder_.writeFixedHash64(t2[e3]);
      }, jspb.BinaryWriter.prototype.writePackedVarintHash64 = function(e3, t2) {
        if (t2 != null && t2.length) {
          e3 = this.beginDelimited_(e3);
          for (var o = 0; o < t2.length; o++)
            this.encoder_.writeVarintHash64(t2[o]);
          this.endDelimited_(e3);
        }
      }, jspb.Export = {}, exports.Map = jspb.Map, exports.Message = jspb.Message, exports.BinaryReader = jspb.BinaryReader, exports.BinaryWriter = jspb.BinaryWriter, exports.ExtensionFieldInfo = jspb.ExtensionFieldInfo, exports.ExtensionFieldBinaryInfo = jspb.ExtensionFieldBinaryInfo, exports.exportSymbol = goog.exportSymbol, exports.inherits = goog.inherits, exports.object = { extend: goog.object.extend }, exports.typeOf = goog.typeOf;
    }, function(e3, t2, o) {
      var r2 = o(0), s3 = r2, n = Function("return this")();
      s3.exportSymbol("proto.flow.entities.Account", null, n), s3.exportSymbol("proto.flow.entities.AccountKey", null, n), proto.flow.entities.Account = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.entities.Account.repeatedFields_, null);
      }, s3.inherits(proto.flow.entities.Account, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.entities.Account.displayName = "proto.flow.entities.Account"), proto.flow.entities.AccountKey = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.entities.AccountKey, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.entities.AccountKey.displayName = "proto.flow.entities.AccountKey"), proto.flow.entities.Account.repeatedFields_ = [4], r2.Message.GENERATE_TO_OBJECT && (proto.flow.entities.Account.prototype.toObject = function(e4) {
        return proto.flow.entities.Account.toObject(e4, this);
      }, proto.flow.entities.Account.toObject = function(e4, t3) {
        var o2, s4 = { address: t3.getAddress_asB64(), balance: r2.Message.getFieldWithDefault(t3, 2, 0), code: t3.getCode_asB64(), keysList: r2.Message.toObjectList(t3.getKeysList(), proto.flow.entities.AccountKey.toObject, e4), contractsMap: (o2 = t3.getContractsMap()) ? o2.toObject(e4, void 0) : [] };
        return e4 && (s4.$jspbMessageInstance = t3), s4;
      }), proto.flow.entities.Account.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.entities.Account();
        return proto.flow.entities.Account.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.entities.Account.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setAddress(o2);
              break;
            case 2:
              o2 = t3.readUint64();
              e4.setBalance(o2);
              break;
            case 3:
              o2 = t3.readBytes();
              e4.setCode(o2);
              break;
            case 4:
              o2 = new proto.flow.entities.AccountKey();
              t3.readMessage(o2, proto.flow.entities.AccountKey.deserializeBinaryFromReader), e4.addKeys(o2);
              break;
            case 5:
              o2 = e4.getContractsMap();
              t3.readMessage(o2, function(e5, t4) {
                r2.Map.deserializeBinary(e5, t4, r2.BinaryReader.prototype.readString, r2.BinaryReader.prototype.readBytes, null, "", "");
              });
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.entities.Account.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.entities.Account.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.entities.Account.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getAddress_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getBalance()) !== 0 && t3.writeUint64(2, o2), (o2 = e4.getCode_asU8()).length > 0 && t3.writeBytes(3, o2), (o2 = e4.getKeysList()).length > 0 && t3.writeRepeatedMessage(4, o2, proto.flow.entities.AccountKey.serializeBinaryToWriter), (o2 = e4.getContractsMap(true)) && o2.getLength() > 0 && o2.serializeBinary(5, t3, r2.BinaryWriter.prototype.writeString, r2.BinaryWriter.prototype.writeBytes);
      }, proto.flow.entities.Account.prototype.getAddress = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.entities.Account.prototype.getAddress_asB64 = function() {
        return r2.Message.bytesAsB64(this.getAddress());
      }, proto.flow.entities.Account.prototype.getAddress_asU8 = function() {
        return r2.Message.bytesAsU8(this.getAddress());
      }, proto.flow.entities.Account.prototype.setAddress = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.entities.Account.prototype.getBalance = function() {
        return r2.Message.getFieldWithDefault(this, 2, 0);
      }, proto.flow.entities.Account.prototype.setBalance = function(e4) {
        return r2.Message.setProto3IntField(this, 2, e4);
      }, proto.flow.entities.Account.prototype.getCode = function() {
        return r2.Message.getFieldWithDefault(this, 3, "");
      }, proto.flow.entities.Account.prototype.getCode_asB64 = function() {
        return r2.Message.bytesAsB64(this.getCode());
      }, proto.flow.entities.Account.prototype.getCode_asU8 = function() {
        return r2.Message.bytesAsU8(this.getCode());
      }, proto.flow.entities.Account.prototype.setCode = function(e4) {
        return r2.Message.setProto3BytesField(this, 3, e4);
      }, proto.flow.entities.Account.prototype.getKeysList = function() {
        return r2.Message.getRepeatedWrapperField(this, proto.flow.entities.AccountKey, 4);
      }, proto.flow.entities.Account.prototype.setKeysList = function(e4) {
        return r2.Message.setRepeatedWrapperField(this, 4, e4);
      }, proto.flow.entities.Account.prototype.addKeys = function(e4, t3) {
        return r2.Message.addToRepeatedWrapperField(this, 4, e4, proto.flow.entities.AccountKey, t3);
      }, proto.flow.entities.Account.prototype.clearKeysList = function() {
        return this.setKeysList([]);
      }, proto.flow.entities.Account.prototype.getContractsMap = function(e4) {
        return r2.Message.getMapField(this, 5, e4, null);
      }, proto.flow.entities.Account.prototype.clearContractsMap = function() {
        return this.getContractsMap().clear(), this;
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.entities.AccountKey.prototype.toObject = function(e4) {
        return proto.flow.entities.AccountKey.toObject(e4, this);
      }, proto.flow.entities.AccountKey.toObject = function(e4, t3) {
        var o2 = { index: r2.Message.getFieldWithDefault(t3, 1, 0), publicKey: t3.getPublicKey_asB64(), signAlgo: r2.Message.getFieldWithDefault(t3, 3, 0), hashAlgo: r2.Message.getFieldWithDefault(t3, 4, 0), weight: r2.Message.getFieldWithDefault(t3, 5, 0), sequenceNumber: r2.Message.getFieldWithDefault(t3, 6, 0), revoked: r2.Message.getBooleanFieldWithDefault(t3, 7, false) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.entities.AccountKey.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.entities.AccountKey();
        return proto.flow.entities.AccountKey.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.entities.AccountKey.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readUint32();
              e4.setIndex(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.setPublicKey(o2);
              break;
            case 3:
              o2 = t3.readUint32();
              e4.setSignAlgo(o2);
              break;
            case 4:
              o2 = t3.readUint32();
              e4.setHashAlgo(o2);
              break;
            case 5:
              o2 = t3.readUint32();
              e4.setWeight(o2);
              break;
            case 6:
              o2 = t3.readUint32();
              e4.setSequenceNumber(o2);
              break;
            case 7:
              o2 = t3.readBool();
              e4.setRevoked(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.entities.AccountKey.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.entities.AccountKey.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.entities.AccountKey.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getIndex()) !== 0 && t3.writeUint32(1, o2), (o2 = e4.getPublicKey_asU8()).length > 0 && t3.writeBytes(2, o2), (o2 = e4.getSignAlgo()) !== 0 && t3.writeUint32(3, o2), (o2 = e4.getHashAlgo()) !== 0 && t3.writeUint32(4, o2), (o2 = e4.getWeight()) !== 0 && t3.writeUint32(5, o2), (o2 = e4.getSequenceNumber()) !== 0 && t3.writeUint32(6, o2), (o2 = e4.getRevoked()) && t3.writeBool(7, o2);
      }, proto.flow.entities.AccountKey.prototype.getIndex = function() {
        return r2.Message.getFieldWithDefault(this, 1, 0);
      }, proto.flow.entities.AccountKey.prototype.setIndex = function(e4) {
        return r2.Message.setProto3IntField(this, 1, e4);
      }, proto.flow.entities.AccountKey.prototype.getPublicKey = function() {
        return r2.Message.getFieldWithDefault(this, 2, "");
      }, proto.flow.entities.AccountKey.prototype.getPublicKey_asB64 = function() {
        return r2.Message.bytesAsB64(this.getPublicKey());
      }, proto.flow.entities.AccountKey.prototype.getPublicKey_asU8 = function() {
        return r2.Message.bytesAsU8(this.getPublicKey());
      }, proto.flow.entities.AccountKey.prototype.setPublicKey = function(e4) {
        return r2.Message.setProto3BytesField(this, 2, e4);
      }, proto.flow.entities.AccountKey.prototype.getSignAlgo = function() {
        return r2.Message.getFieldWithDefault(this, 3, 0);
      }, proto.flow.entities.AccountKey.prototype.setSignAlgo = function(e4) {
        return r2.Message.setProto3IntField(this, 3, e4);
      }, proto.flow.entities.AccountKey.prototype.getHashAlgo = function() {
        return r2.Message.getFieldWithDefault(this, 4, 0);
      }, proto.flow.entities.AccountKey.prototype.setHashAlgo = function(e4) {
        return r2.Message.setProto3IntField(this, 4, e4);
      }, proto.flow.entities.AccountKey.prototype.getWeight = function() {
        return r2.Message.getFieldWithDefault(this, 5, 0);
      }, proto.flow.entities.AccountKey.prototype.setWeight = function(e4) {
        return r2.Message.setProto3IntField(this, 5, e4);
      }, proto.flow.entities.AccountKey.prototype.getSequenceNumber = function() {
        return r2.Message.getFieldWithDefault(this, 6, 0);
      }, proto.flow.entities.AccountKey.prototype.setSequenceNumber = function(e4) {
        return r2.Message.setProto3IntField(this, 6, e4);
      }, proto.flow.entities.AccountKey.prototype.getRevoked = function() {
        return r2.Message.getBooleanFieldWithDefault(this, 7, false);
      }, proto.flow.entities.AccountKey.prototype.setRevoked = function(e4) {
        return r2.Message.setProto3BooleanField(this, 7, e4);
      }, s3.object.extend(t2, proto.flow.entities);
    }, function(e3, t2, o) {
      var r2 = o(0), s3 = r2, n = Function("return this")();
      s3.exportSymbol("proto.flow.entities.Collection", null, n), s3.exportSymbol("proto.flow.entities.CollectionGuarantee", null, n), proto.flow.entities.Collection = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.entities.Collection.repeatedFields_, null);
      }, s3.inherits(proto.flow.entities.Collection, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.entities.Collection.displayName = "proto.flow.entities.Collection"), proto.flow.entities.CollectionGuarantee = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.entities.CollectionGuarantee.repeatedFields_, null);
      }, s3.inherits(proto.flow.entities.CollectionGuarantee, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.entities.CollectionGuarantee.displayName = "proto.flow.entities.CollectionGuarantee"), proto.flow.entities.Collection.repeatedFields_ = [2], r2.Message.GENERATE_TO_OBJECT && (proto.flow.entities.Collection.prototype.toObject = function(e4) {
        return proto.flow.entities.Collection.toObject(e4, this);
      }, proto.flow.entities.Collection.toObject = function(e4, t3) {
        var o2 = { id: t3.getId_asB64(), transactionIdsList: t3.getTransactionIdsList_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.entities.Collection.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.entities.Collection();
        return proto.flow.entities.Collection.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.entities.Collection.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setId(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.addTransactionIds(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.entities.Collection.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.entities.Collection.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.entities.Collection.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getId_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getTransactionIdsList_asU8()).length > 0 && t3.writeRepeatedBytes(2, o2);
      }, proto.flow.entities.Collection.prototype.getId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.entities.Collection.prototype.getId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getId());
      }, proto.flow.entities.Collection.prototype.getId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getId());
      }, proto.flow.entities.Collection.prototype.setId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.entities.Collection.prototype.getTransactionIdsList = function() {
        return r2.Message.getRepeatedField(this, 2);
      }, proto.flow.entities.Collection.prototype.getTransactionIdsList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getTransactionIdsList());
      }, proto.flow.entities.Collection.prototype.getTransactionIdsList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getTransactionIdsList());
      }, proto.flow.entities.Collection.prototype.setTransactionIdsList = function(e4) {
        return r2.Message.setField(this, 2, e4 || []);
      }, proto.flow.entities.Collection.prototype.addTransactionIds = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 2, e4, t3);
      }, proto.flow.entities.Collection.prototype.clearTransactionIdsList = function() {
        return this.setTransactionIdsList([]);
      }, proto.flow.entities.CollectionGuarantee.repeatedFields_ = [2], r2.Message.GENERATE_TO_OBJECT && (proto.flow.entities.CollectionGuarantee.prototype.toObject = function(e4) {
        return proto.flow.entities.CollectionGuarantee.toObject(e4, this);
      }, proto.flow.entities.CollectionGuarantee.toObject = function(e4, t3) {
        var o2 = { collectionId: t3.getCollectionId_asB64(), signaturesList: t3.getSignaturesList_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.entities.CollectionGuarantee.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.entities.CollectionGuarantee();
        return proto.flow.entities.CollectionGuarantee.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.entities.CollectionGuarantee.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setCollectionId(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.addSignatures(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.entities.CollectionGuarantee.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.entities.CollectionGuarantee.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.entities.CollectionGuarantee.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getCollectionId_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getSignaturesList_asU8()).length > 0 && t3.writeRepeatedBytes(2, o2);
      }, proto.flow.entities.CollectionGuarantee.prototype.getCollectionId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.entities.CollectionGuarantee.prototype.getCollectionId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getCollectionId());
      }, proto.flow.entities.CollectionGuarantee.prototype.getCollectionId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getCollectionId());
      }, proto.flow.entities.CollectionGuarantee.prototype.setCollectionId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.entities.CollectionGuarantee.prototype.getSignaturesList = function() {
        return r2.Message.getRepeatedField(this, 2);
      }, proto.flow.entities.CollectionGuarantee.prototype.getSignaturesList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getSignaturesList());
      }, proto.flow.entities.CollectionGuarantee.prototype.getSignaturesList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getSignaturesList());
      }, proto.flow.entities.CollectionGuarantee.prototype.setSignaturesList = function(e4) {
        return r2.Message.setField(this, 2, e4 || []);
      }, proto.flow.entities.CollectionGuarantee.prototype.addSignatures = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 2, e4, t3);
      }, proto.flow.entities.CollectionGuarantee.prototype.clearSignaturesList = function() {
        return this.setSignaturesList([]);
      }, s3.object.extend(t2, proto.flow.entities);
    }, function(e3, t2, o) {
      var r2 = o(0), s3 = r2, n = Function("return this")();
      s3.exportSymbol("proto.flow.entities.Event", null, n), proto.flow.entities.Event = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.entities.Event, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.entities.Event.displayName = "proto.flow.entities.Event"), r2.Message.GENERATE_TO_OBJECT && (proto.flow.entities.Event.prototype.toObject = function(e4) {
        return proto.flow.entities.Event.toObject(e4, this);
      }, proto.flow.entities.Event.toObject = function(e4, t3) {
        var o2 = { type: r2.Message.getFieldWithDefault(t3, 1, ""), transactionId: t3.getTransactionId_asB64(), transactionIndex: r2.Message.getFieldWithDefault(t3, 3, 0), eventIndex: r2.Message.getFieldWithDefault(t3, 4, 0), payload: t3.getPayload_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.entities.Event.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.entities.Event();
        return proto.flow.entities.Event.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.entities.Event.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readString();
              e4.setType(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.setTransactionId(o2);
              break;
            case 3:
              o2 = t3.readUint32();
              e4.setTransactionIndex(o2);
              break;
            case 4:
              o2 = t3.readUint32();
              e4.setEventIndex(o2);
              break;
            case 5:
              o2 = t3.readBytes();
              e4.setPayload(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.entities.Event.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.entities.Event.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.entities.Event.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getType()).length > 0 && t3.writeString(1, o2), (o2 = e4.getTransactionId_asU8()).length > 0 && t3.writeBytes(2, o2), (o2 = e4.getTransactionIndex()) !== 0 && t3.writeUint32(3, o2), (o2 = e4.getEventIndex()) !== 0 && t3.writeUint32(4, o2), (o2 = e4.getPayload_asU8()).length > 0 && t3.writeBytes(5, o2);
      }, proto.flow.entities.Event.prototype.getType = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.entities.Event.prototype.setType = function(e4) {
        return r2.Message.setProto3StringField(this, 1, e4);
      }, proto.flow.entities.Event.prototype.getTransactionId = function() {
        return r2.Message.getFieldWithDefault(this, 2, "");
      }, proto.flow.entities.Event.prototype.getTransactionId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getTransactionId());
      }, proto.flow.entities.Event.prototype.getTransactionId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getTransactionId());
      }, proto.flow.entities.Event.prototype.setTransactionId = function(e4) {
        return r2.Message.setProto3BytesField(this, 2, e4);
      }, proto.flow.entities.Event.prototype.getTransactionIndex = function() {
        return r2.Message.getFieldWithDefault(this, 3, 0);
      }, proto.flow.entities.Event.prototype.setTransactionIndex = function(e4) {
        return r2.Message.setProto3IntField(this, 3, e4);
      }, proto.flow.entities.Event.prototype.getEventIndex = function() {
        return r2.Message.getFieldWithDefault(this, 4, 0);
      }, proto.flow.entities.Event.prototype.setEventIndex = function(e4) {
        return r2.Message.setProto3IntField(this, 4, e4);
      }, proto.flow.entities.Event.prototype.getPayload = function() {
        return r2.Message.getFieldWithDefault(this, 5, "");
      }, proto.flow.entities.Event.prototype.getPayload_asB64 = function() {
        return r2.Message.bytesAsB64(this.getPayload());
      }, proto.flow.entities.Event.prototype.getPayload_asU8 = function() {
        return r2.Message.bytesAsU8(this.getPayload());
      }, proto.flow.entities.Event.prototype.setPayload = function(e4) {
        return r2.Message.setProto3BytesField(this, 5, e4);
      }, s3.object.extend(t2, proto.flow.entities);
    }, function(e3, t2, o) {
      var r2 = o(0), s3 = r2, n = Function("return this")(), i2 = o(1);
      s3.object.extend(proto, i2);
      var a2 = o(5);
      s3.object.extend(proto, a2);
      var g = o(7);
      s3.object.extend(proto, g);
      var l = o(2);
      s3.object.extend(proto, l);
      var c2 = o(3);
      s3.object.extend(proto, c2);
      var u = o(9);
      s3.object.extend(proto, u);
      var p = o(6);
      s3.object.extend(proto, p), s3.exportSymbol("proto.flow.access.AccountResponse", null, n), s3.exportSymbol("proto.flow.access.BlockHeaderResponse", null, n), s3.exportSymbol("proto.flow.access.BlockResponse", null, n), s3.exportSymbol("proto.flow.access.CollectionResponse", null, n), s3.exportSymbol("proto.flow.access.EventsResponse", null, n), s3.exportSymbol("proto.flow.access.EventsResponse.Result", null, n), s3.exportSymbol("proto.flow.access.ExecuteScriptAtBlockHeightRequest", null, n), s3.exportSymbol("proto.flow.access.ExecuteScriptAtBlockIDRequest", null, n), s3.exportSymbol("proto.flow.access.ExecuteScriptAtLatestBlockRequest", null, n), s3.exportSymbol("proto.flow.access.ExecuteScriptResponse", null, n), s3.exportSymbol("proto.flow.access.GetAccountAtBlockHeightRequest", null, n), s3.exportSymbol("proto.flow.access.GetAccountAtLatestBlockRequest", null, n), s3.exportSymbol("proto.flow.access.GetAccountRequest", null, n), s3.exportSymbol("proto.flow.access.GetAccountResponse", null, n), s3.exportSymbol("proto.flow.access.GetBlockByHeightRequest", null, n), s3.exportSymbol("proto.flow.access.GetBlockByIDRequest", null, n), s3.exportSymbol("proto.flow.access.GetBlockHeaderByHeightRequest", null, n), s3.exportSymbol("proto.flow.access.GetBlockHeaderByIDRequest", null, n), s3.exportSymbol("proto.flow.access.GetCollectionByIDRequest", null, n), s3.exportSymbol("proto.flow.access.GetEventsForBlockIDsRequest", null, n), s3.exportSymbol("proto.flow.access.GetEventsForHeightRangeRequest", null, n), s3.exportSymbol("proto.flow.access.GetLatestBlockHeaderRequest", null, n), s3.exportSymbol("proto.flow.access.GetLatestBlockRequest", null, n), s3.exportSymbol("proto.flow.access.GetNetworkParametersRequest", null, n), s3.exportSymbol("proto.flow.access.GetNetworkParametersResponse", null, n), s3.exportSymbol("proto.flow.access.GetTransactionRequest", null, n), s3.exportSymbol("proto.flow.access.PingRequest", null, n), s3.exportSymbol("proto.flow.access.PingResponse", null, n), s3.exportSymbol("proto.flow.access.SendTransactionRequest", null, n), s3.exportSymbol("proto.flow.access.SendTransactionResponse", null, n), s3.exportSymbol("proto.flow.access.TransactionResponse", null, n), s3.exportSymbol("proto.flow.access.TransactionResultResponse", null, n), proto.flow.access.PingRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.PingRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.PingRequest.displayName = "proto.flow.access.PingRequest"), proto.flow.access.PingResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.PingResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.PingResponse.displayName = "proto.flow.access.PingResponse"), proto.flow.access.GetLatestBlockHeaderRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetLatestBlockHeaderRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetLatestBlockHeaderRequest.displayName = "proto.flow.access.GetLatestBlockHeaderRequest"), proto.flow.access.GetBlockHeaderByIDRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetBlockHeaderByIDRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetBlockHeaderByIDRequest.displayName = "proto.flow.access.GetBlockHeaderByIDRequest"), proto.flow.access.GetBlockHeaderByHeightRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetBlockHeaderByHeightRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetBlockHeaderByHeightRequest.displayName = "proto.flow.access.GetBlockHeaderByHeightRequest"), proto.flow.access.BlockHeaderResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.BlockHeaderResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.BlockHeaderResponse.displayName = "proto.flow.access.BlockHeaderResponse"), proto.flow.access.GetLatestBlockRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetLatestBlockRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetLatestBlockRequest.displayName = "proto.flow.access.GetLatestBlockRequest"), proto.flow.access.GetBlockByIDRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetBlockByIDRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetBlockByIDRequest.displayName = "proto.flow.access.GetBlockByIDRequest"), proto.flow.access.GetBlockByHeightRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetBlockByHeightRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetBlockByHeightRequest.displayName = "proto.flow.access.GetBlockByHeightRequest"), proto.flow.access.BlockResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.BlockResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.BlockResponse.displayName = "proto.flow.access.BlockResponse"), proto.flow.access.GetCollectionByIDRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetCollectionByIDRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetCollectionByIDRequest.displayName = "proto.flow.access.GetCollectionByIDRequest"), proto.flow.access.CollectionResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.CollectionResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.CollectionResponse.displayName = "proto.flow.access.CollectionResponse"), proto.flow.access.SendTransactionRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.SendTransactionRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.SendTransactionRequest.displayName = "proto.flow.access.SendTransactionRequest"), proto.flow.access.SendTransactionResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.SendTransactionResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.SendTransactionResponse.displayName = "proto.flow.access.SendTransactionResponse"), proto.flow.access.GetTransactionRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetTransactionRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetTransactionRequest.displayName = "proto.flow.access.GetTransactionRequest"), proto.flow.access.TransactionResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.TransactionResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.TransactionResponse.displayName = "proto.flow.access.TransactionResponse"), proto.flow.access.TransactionResultResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.access.TransactionResultResponse.repeatedFields_, null);
      }, s3.inherits(proto.flow.access.TransactionResultResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.TransactionResultResponse.displayName = "proto.flow.access.TransactionResultResponse"), proto.flow.access.GetAccountRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetAccountRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetAccountRequest.displayName = "proto.flow.access.GetAccountRequest"), proto.flow.access.GetAccountResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetAccountResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetAccountResponse.displayName = "proto.flow.access.GetAccountResponse"), proto.flow.access.GetAccountAtLatestBlockRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetAccountAtLatestBlockRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetAccountAtLatestBlockRequest.displayName = "proto.flow.access.GetAccountAtLatestBlockRequest"), proto.flow.access.AccountResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.AccountResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.AccountResponse.displayName = "proto.flow.access.AccountResponse"), proto.flow.access.GetAccountAtBlockHeightRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetAccountAtBlockHeightRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetAccountAtBlockHeightRequest.displayName = "proto.flow.access.GetAccountAtBlockHeightRequest"), proto.flow.access.ExecuteScriptAtLatestBlockRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.access.ExecuteScriptAtLatestBlockRequest.repeatedFields_, null);
      }, s3.inherits(proto.flow.access.ExecuteScriptAtLatestBlockRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.ExecuteScriptAtLatestBlockRequest.displayName = "proto.flow.access.ExecuteScriptAtLatestBlockRequest"), proto.flow.access.ExecuteScriptAtBlockIDRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.access.ExecuteScriptAtBlockIDRequest.repeatedFields_, null);
      }, s3.inherits(proto.flow.access.ExecuteScriptAtBlockIDRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.ExecuteScriptAtBlockIDRequest.displayName = "proto.flow.access.ExecuteScriptAtBlockIDRequest"), proto.flow.access.ExecuteScriptAtBlockHeightRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.access.ExecuteScriptAtBlockHeightRequest.repeatedFields_, null);
      }, s3.inherits(proto.flow.access.ExecuteScriptAtBlockHeightRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.ExecuteScriptAtBlockHeightRequest.displayName = "proto.flow.access.ExecuteScriptAtBlockHeightRequest"), proto.flow.access.ExecuteScriptResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.ExecuteScriptResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.ExecuteScriptResponse.displayName = "proto.flow.access.ExecuteScriptResponse"), proto.flow.access.GetEventsForHeightRangeRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetEventsForHeightRangeRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetEventsForHeightRangeRequest.displayName = "proto.flow.access.GetEventsForHeightRangeRequest"), proto.flow.access.GetEventsForBlockIDsRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.access.GetEventsForBlockIDsRequest.repeatedFields_, null);
      }, s3.inherits(proto.flow.access.GetEventsForBlockIDsRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetEventsForBlockIDsRequest.displayName = "proto.flow.access.GetEventsForBlockIDsRequest"), proto.flow.access.EventsResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.access.EventsResponse.repeatedFields_, null);
      }, s3.inherits(proto.flow.access.EventsResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.EventsResponse.displayName = "proto.flow.access.EventsResponse"), proto.flow.access.EventsResponse.Result = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.access.EventsResponse.Result.repeatedFields_, null);
      }, s3.inherits(proto.flow.access.EventsResponse.Result, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.EventsResponse.Result.displayName = "proto.flow.access.EventsResponse.Result"), proto.flow.access.GetNetworkParametersRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetNetworkParametersRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetNetworkParametersRequest.displayName = "proto.flow.access.GetNetworkParametersRequest"), proto.flow.access.GetNetworkParametersResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.access.GetNetworkParametersResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.access.GetNetworkParametersResponse.displayName = "proto.flow.access.GetNetworkParametersResponse"), r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.PingRequest.prototype.toObject = function(e4) {
        return proto.flow.access.PingRequest.toObject(e4, this);
      }, proto.flow.access.PingRequest.toObject = function(e4, t3) {
        var o2 = {};
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.PingRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.PingRequest();
        return proto.flow.access.PingRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.PingRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          t3.getFieldNumber();
          t3.skipField();
        }
        return e4;
      }, proto.flow.access.PingRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.PingRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.PingRequest.serializeBinaryToWriter = function(e4, t3) {
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.PingResponse.prototype.toObject = function(e4) {
        return proto.flow.access.PingResponse.toObject(e4, this);
      }, proto.flow.access.PingResponse.toObject = function(e4, t3) {
        var o2 = {};
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.PingResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.PingResponse();
        return proto.flow.access.PingResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.PingResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          t3.getFieldNumber();
          t3.skipField();
        }
        return e4;
      }, proto.flow.access.PingResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.PingResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.PingResponse.serializeBinaryToWriter = function(e4, t3) {
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetLatestBlockHeaderRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetLatestBlockHeaderRequest.toObject(e4, this);
      }, proto.flow.access.GetLatestBlockHeaderRequest.toObject = function(e4, t3) {
        var o2 = { isSealed: r2.Message.getBooleanFieldWithDefault(t3, 1, false) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetLatestBlockHeaderRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetLatestBlockHeaderRequest();
        return proto.flow.access.GetLatestBlockHeaderRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetLatestBlockHeaderRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBool();
              e4.setIsSealed(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetLatestBlockHeaderRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetLatestBlockHeaderRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetLatestBlockHeaderRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getIsSealed()) && t3.writeBool(1, o2);
      }, proto.flow.access.GetLatestBlockHeaderRequest.prototype.getIsSealed = function() {
        return r2.Message.getBooleanFieldWithDefault(this, 1, false);
      }, proto.flow.access.GetLatestBlockHeaderRequest.prototype.setIsSealed = function(e4) {
        return r2.Message.setProto3BooleanField(this, 1, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetBlockHeaderByIDRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetBlockHeaderByIDRequest.toObject(e4, this);
      }, proto.flow.access.GetBlockHeaderByIDRequest.toObject = function(e4, t3) {
        var o2 = { id: t3.getId_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetBlockHeaderByIDRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetBlockHeaderByIDRequest();
        return proto.flow.access.GetBlockHeaderByIDRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetBlockHeaderByIDRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setId(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetBlockHeaderByIDRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetBlockHeaderByIDRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetBlockHeaderByIDRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getId_asU8()).length > 0 && t3.writeBytes(1, o2);
      }, proto.flow.access.GetBlockHeaderByIDRequest.prototype.getId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.GetBlockHeaderByIDRequest.prototype.getId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getId());
      }, proto.flow.access.GetBlockHeaderByIDRequest.prototype.getId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getId());
      }, proto.flow.access.GetBlockHeaderByIDRequest.prototype.setId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetBlockHeaderByHeightRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetBlockHeaderByHeightRequest.toObject(e4, this);
      }, proto.flow.access.GetBlockHeaderByHeightRequest.toObject = function(e4, t3) {
        var o2 = { height: r2.Message.getFieldWithDefault(t3, 1, 0) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetBlockHeaderByHeightRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetBlockHeaderByHeightRequest();
        return proto.flow.access.GetBlockHeaderByHeightRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetBlockHeaderByHeightRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readUint64();
              e4.setHeight(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetBlockHeaderByHeightRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetBlockHeaderByHeightRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetBlockHeaderByHeightRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getHeight()) !== 0 && t3.writeUint64(1, o2);
      }, proto.flow.access.GetBlockHeaderByHeightRequest.prototype.getHeight = function() {
        return r2.Message.getFieldWithDefault(this, 1, 0);
      }, proto.flow.access.GetBlockHeaderByHeightRequest.prototype.setHeight = function(e4) {
        return r2.Message.setProto3IntField(this, 1, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.BlockHeaderResponse.prototype.toObject = function(e4) {
        return proto.flow.access.BlockHeaderResponse.toObject(e4, this);
      }, proto.flow.access.BlockHeaderResponse.toObject = function(e4, t3) {
        var o2, r3 = { block: (o2 = t3.getBlock()) && a2.BlockHeader.toObject(e4, o2) };
        return e4 && (r3.$jspbMessageInstance = t3), r3;
      }), proto.flow.access.BlockHeaderResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.BlockHeaderResponse();
        return proto.flow.access.BlockHeaderResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.BlockHeaderResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = new a2.BlockHeader();
              t3.readMessage(o2, a2.BlockHeader.deserializeBinaryFromReader), e4.setBlock(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.BlockHeaderResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.BlockHeaderResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.BlockHeaderResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getBlock()) != null && t3.writeMessage(1, o2, a2.BlockHeader.serializeBinaryToWriter);
      }, proto.flow.access.BlockHeaderResponse.prototype.getBlock = function() {
        return r2.Message.getWrapperField(this, a2.BlockHeader, 1);
      }, proto.flow.access.BlockHeaderResponse.prototype.setBlock = function(e4) {
        return r2.Message.setWrapperField(this, 1, e4);
      }, proto.flow.access.BlockHeaderResponse.prototype.clearBlock = function() {
        return this.setBlock(void 0);
      }, proto.flow.access.BlockHeaderResponse.prototype.hasBlock = function() {
        return r2.Message.getField(this, 1) != null;
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetLatestBlockRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetLatestBlockRequest.toObject(e4, this);
      }, proto.flow.access.GetLatestBlockRequest.toObject = function(e4, t3) {
        var o2 = { isSealed: r2.Message.getBooleanFieldWithDefault(t3, 1, false) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetLatestBlockRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetLatestBlockRequest();
        return proto.flow.access.GetLatestBlockRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetLatestBlockRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBool();
              e4.setIsSealed(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetLatestBlockRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetLatestBlockRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetLatestBlockRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getIsSealed()) && t3.writeBool(1, o2);
      }, proto.flow.access.GetLatestBlockRequest.prototype.getIsSealed = function() {
        return r2.Message.getBooleanFieldWithDefault(this, 1, false);
      }, proto.flow.access.GetLatestBlockRequest.prototype.setIsSealed = function(e4) {
        return r2.Message.setProto3BooleanField(this, 1, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetBlockByIDRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetBlockByIDRequest.toObject(e4, this);
      }, proto.flow.access.GetBlockByIDRequest.toObject = function(e4, t3) {
        var o2 = { id: t3.getId_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetBlockByIDRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetBlockByIDRequest();
        return proto.flow.access.GetBlockByIDRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetBlockByIDRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setId(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetBlockByIDRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetBlockByIDRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetBlockByIDRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getId_asU8()).length > 0 && t3.writeBytes(1, o2);
      }, proto.flow.access.GetBlockByIDRequest.prototype.getId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.GetBlockByIDRequest.prototype.getId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getId());
      }, proto.flow.access.GetBlockByIDRequest.prototype.getId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getId());
      }, proto.flow.access.GetBlockByIDRequest.prototype.setId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetBlockByHeightRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetBlockByHeightRequest.toObject(e4, this);
      }, proto.flow.access.GetBlockByHeightRequest.toObject = function(e4, t3) {
        var o2 = { height: r2.Message.getFieldWithDefault(t3, 1, 0) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetBlockByHeightRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetBlockByHeightRequest();
        return proto.flow.access.GetBlockByHeightRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetBlockByHeightRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readUint64();
              e4.setHeight(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetBlockByHeightRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetBlockByHeightRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetBlockByHeightRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getHeight()) !== 0 && t3.writeUint64(1, o2);
      }, proto.flow.access.GetBlockByHeightRequest.prototype.getHeight = function() {
        return r2.Message.getFieldWithDefault(this, 1, 0);
      }, proto.flow.access.GetBlockByHeightRequest.prototype.setHeight = function(e4) {
        return r2.Message.setProto3IntField(this, 1, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.BlockResponse.prototype.toObject = function(e4) {
        return proto.flow.access.BlockResponse.toObject(e4, this);
      }, proto.flow.access.BlockResponse.toObject = function(e4, t3) {
        var o2, r3 = { block: (o2 = t3.getBlock()) && g.Block.toObject(e4, o2) };
        return e4 && (r3.$jspbMessageInstance = t3), r3;
      }), proto.flow.access.BlockResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.BlockResponse();
        return proto.flow.access.BlockResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.BlockResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = new g.Block();
              t3.readMessage(o2, g.Block.deserializeBinaryFromReader), e4.setBlock(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.BlockResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.BlockResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.BlockResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getBlock()) != null && t3.writeMessage(1, o2, g.Block.serializeBinaryToWriter);
      }, proto.flow.access.BlockResponse.prototype.getBlock = function() {
        return r2.Message.getWrapperField(this, g.Block, 1);
      }, proto.flow.access.BlockResponse.prototype.setBlock = function(e4) {
        return r2.Message.setWrapperField(this, 1, e4);
      }, proto.flow.access.BlockResponse.prototype.clearBlock = function() {
        return this.setBlock(void 0);
      }, proto.flow.access.BlockResponse.prototype.hasBlock = function() {
        return r2.Message.getField(this, 1) != null;
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetCollectionByIDRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetCollectionByIDRequest.toObject(e4, this);
      }, proto.flow.access.GetCollectionByIDRequest.toObject = function(e4, t3) {
        var o2 = { id: t3.getId_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetCollectionByIDRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetCollectionByIDRequest();
        return proto.flow.access.GetCollectionByIDRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetCollectionByIDRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setId(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetCollectionByIDRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetCollectionByIDRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetCollectionByIDRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getId_asU8()).length > 0 && t3.writeBytes(1, o2);
      }, proto.flow.access.GetCollectionByIDRequest.prototype.getId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.GetCollectionByIDRequest.prototype.getId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getId());
      }, proto.flow.access.GetCollectionByIDRequest.prototype.getId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getId());
      }, proto.flow.access.GetCollectionByIDRequest.prototype.setId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.CollectionResponse.prototype.toObject = function(e4) {
        return proto.flow.access.CollectionResponse.toObject(e4, this);
      }, proto.flow.access.CollectionResponse.toObject = function(e4, t3) {
        var o2, r3 = { collection: (o2 = t3.getCollection()) && l.Collection.toObject(e4, o2) };
        return e4 && (r3.$jspbMessageInstance = t3), r3;
      }), proto.flow.access.CollectionResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.CollectionResponse();
        return proto.flow.access.CollectionResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.CollectionResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = new l.Collection();
              t3.readMessage(o2, l.Collection.deserializeBinaryFromReader), e4.setCollection(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.CollectionResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.CollectionResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.CollectionResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getCollection()) != null && t3.writeMessage(1, o2, l.Collection.serializeBinaryToWriter);
      }, proto.flow.access.CollectionResponse.prototype.getCollection = function() {
        return r2.Message.getWrapperField(this, l.Collection, 1);
      }, proto.flow.access.CollectionResponse.prototype.setCollection = function(e4) {
        return r2.Message.setWrapperField(this, 1, e4);
      }, proto.flow.access.CollectionResponse.prototype.clearCollection = function() {
        return this.setCollection(void 0);
      }, proto.flow.access.CollectionResponse.prototype.hasCollection = function() {
        return r2.Message.getField(this, 1) != null;
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.SendTransactionRequest.prototype.toObject = function(e4) {
        return proto.flow.access.SendTransactionRequest.toObject(e4, this);
      }, proto.flow.access.SendTransactionRequest.toObject = function(e4, t3) {
        var o2, r3 = { transaction: (o2 = t3.getTransaction()) && u.Transaction.toObject(e4, o2) };
        return e4 && (r3.$jspbMessageInstance = t3), r3;
      }), proto.flow.access.SendTransactionRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.SendTransactionRequest();
        return proto.flow.access.SendTransactionRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.SendTransactionRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = new u.Transaction();
              t3.readMessage(o2, u.Transaction.deserializeBinaryFromReader), e4.setTransaction(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.SendTransactionRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.SendTransactionRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.SendTransactionRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getTransaction()) != null && t3.writeMessage(1, o2, u.Transaction.serializeBinaryToWriter);
      }, proto.flow.access.SendTransactionRequest.prototype.getTransaction = function() {
        return r2.Message.getWrapperField(this, u.Transaction, 1);
      }, proto.flow.access.SendTransactionRequest.prototype.setTransaction = function(e4) {
        return r2.Message.setWrapperField(this, 1, e4);
      }, proto.flow.access.SendTransactionRequest.prototype.clearTransaction = function() {
        return this.setTransaction(void 0);
      }, proto.flow.access.SendTransactionRequest.prototype.hasTransaction = function() {
        return r2.Message.getField(this, 1) != null;
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.SendTransactionResponse.prototype.toObject = function(e4) {
        return proto.flow.access.SendTransactionResponse.toObject(e4, this);
      }, proto.flow.access.SendTransactionResponse.toObject = function(e4, t3) {
        var o2 = { id: t3.getId_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.SendTransactionResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.SendTransactionResponse();
        return proto.flow.access.SendTransactionResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.SendTransactionResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setId(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.SendTransactionResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.SendTransactionResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.SendTransactionResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getId_asU8()).length > 0 && t3.writeBytes(1, o2);
      }, proto.flow.access.SendTransactionResponse.prototype.getId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.SendTransactionResponse.prototype.getId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getId());
      }, proto.flow.access.SendTransactionResponse.prototype.getId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getId());
      }, proto.flow.access.SendTransactionResponse.prototype.setId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetTransactionRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetTransactionRequest.toObject(e4, this);
      }, proto.flow.access.GetTransactionRequest.toObject = function(e4, t3) {
        var o2 = { id: t3.getId_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetTransactionRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetTransactionRequest();
        return proto.flow.access.GetTransactionRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetTransactionRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setId(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetTransactionRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetTransactionRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetTransactionRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getId_asU8()).length > 0 && t3.writeBytes(1, o2);
      }, proto.flow.access.GetTransactionRequest.prototype.getId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.GetTransactionRequest.prototype.getId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getId());
      }, proto.flow.access.GetTransactionRequest.prototype.getId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getId());
      }, proto.flow.access.GetTransactionRequest.prototype.setId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.TransactionResponse.prototype.toObject = function(e4) {
        return proto.flow.access.TransactionResponse.toObject(e4, this);
      }, proto.flow.access.TransactionResponse.toObject = function(e4, t3) {
        var o2, r3 = { transaction: (o2 = t3.getTransaction()) && u.Transaction.toObject(e4, o2) };
        return e4 && (r3.$jspbMessageInstance = t3), r3;
      }), proto.flow.access.TransactionResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.TransactionResponse();
        return proto.flow.access.TransactionResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.TransactionResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = new u.Transaction();
              t3.readMessage(o2, u.Transaction.deserializeBinaryFromReader), e4.setTransaction(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.TransactionResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.TransactionResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.TransactionResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getTransaction()) != null && t3.writeMessage(1, o2, u.Transaction.serializeBinaryToWriter);
      }, proto.flow.access.TransactionResponse.prototype.getTransaction = function() {
        return r2.Message.getWrapperField(this, u.Transaction, 1);
      }, proto.flow.access.TransactionResponse.prototype.setTransaction = function(e4) {
        return r2.Message.setWrapperField(this, 1, e4);
      }, proto.flow.access.TransactionResponse.prototype.clearTransaction = function() {
        return this.setTransaction(void 0);
      }, proto.flow.access.TransactionResponse.prototype.hasTransaction = function() {
        return r2.Message.getField(this, 1) != null;
      }, proto.flow.access.TransactionResultResponse.repeatedFields_ = [4], r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.TransactionResultResponse.prototype.toObject = function(e4) {
        return proto.flow.access.TransactionResultResponse.toObject(e4, this);
      }, proto.flow.access.TransactionResultResponse.toObject = function(e4, t3) {
        var o2 = { status: r2.Message.getFieldWithDefault(t3, 1, 0), statusCode: r2.Message.getFieldWithDefault(t3, 2, 0), errorMessage: r2.Message.getFieldWithDefault(t3, 3, ""), eventsList: r2.Message.toObjectList(t3.getEventsList(), c2.Event.toObject, e4) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.TransactionResultResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.TransactionResultResponse();
        return proto.flow.access.TransactionResultResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.TransactionResultResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readEnum();
              e4.setStatus(o2);
              break;
            case 2:
              o2 = t3.readUint32();
              e4.setStatusCode(o2);
              break;
            case 3:
              o2 = t3.readString();
              e4.setErrorMessage(o2);
              break;
            case 4:
              o2 = new c2.Event();
              t3.readMessage(o2, c2.Event.deserializeBinaryFromReader), e4.addEvents(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.TransactionResultResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.TransactionResultResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.TransactionResultResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getStatus()) !== 0 && t3.writeEnum(1, o2), (o2 = e4.getStatusCode()) !== 0 && t3.writeUint32(2, o2), (o2 = e4.getErrorMessage()).length > 0 && t3.writeString(3, o2), (o2 = e4.getEventsList()).length > 0 && t3.writeRepeatedMessage(4, o2, c2.Event.serializeBinaryToWriter);
      }, proto.flow.access.TransactionResultResponse.prototype.getStatus = function() {
        return r2.Message.getFieldWithDefault(this, 1, 0);
      }, proto.flow.access.TransactionResultResponse.prototype.setStatus = function(e4) {
        return r2.Message.setProto3EnumField(this, 1, e4);
      }, proto.flow.access.TransactionResultResponse.prototype.getStatusCode = function() {
        return r2.Message.getFieldWithDefault(this, 2, 0);
      }, proto.flow.access.TransactionResultResponse.prototype.setStatusCode = function(e4) {
        return r2.Message.setProto3IntField(this, 2, e4);
      }, proto.flow.access.TransactionResultResponse.prototype.getErrorMessage = function() {
        return r2.Message.getFieldWithDefault(this, 3, "");
      }, proto.flow.access.TransactionResultResponse.prototype.setErrorMessage = function(e4) {
        return r2.Message.setProto3StringField(this, 3, e4);
      }, proto.flow.access.TransactionResultResponse.prototype.getEventsList = function() {
        return r2.Message.getRepeatedWrapperField(this, c2.Event, 4);
      }, proto.flow.access.TransactionResultResponse.prototype.setEventsList = function(e4) {
        return r2.Message.setRepeatedWrapperField(this, 4, e4);
      }, proto.flow.access.TransactionResultResponse.prototype.addEvents = function(e4, t3) {
        return r2.Message.addToRepeatedWrapperField(this, 4, e4, proto.flow.entities.Event, t3);
      }, proto.flow.access.TransactionResultResponse.prototype.clearEventsList = function() {
        return this.setEventsList([]);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetAccountRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetAccountRequest.toObject(e4, this);
      }, proto.flow.access.GetAccountRequest.toObject = function(e4, t3) {
        var o2 = { address: t3.getAddress_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetAccountRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetAccountRequest();
        return proto.flow.access.GetAccountRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetAccountRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setAddress(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetAccountRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetAccountRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetAccountRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getAddress_asU8()).length > 0 && t3.writeBytes(1, o2);
      }, proto.flow.access.GetAccountRequest.prototype.getAddress = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.GetAccountRequest.prototype.getAddress_asB64 = function() {
        return r2.Message.bytesAsB64(this.getAddress());
      }, proto.flow.access.GetAccountRequest.prototype.getAddress_asU8 = function() {
        return r2.Message.bytesAsU8(this.getAddress());
      }, proto.flow.access.GetAccountRequest.prototype.setAddress = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetAccountResponse.prototype.toObject = function(e4) {
        return proto.flow.access.GetAccountResponse.toObject(e4, this);
      }, proto.flow.access.GetAccountResponse.toObject = function(e4, t3) {
        var o2, r3 = { account: (o2 = t3.getAccount()) && i2.Account.toObject(e4, o2) };
        return e4 && (r3.$jspbMessageInstance = t3), r3;
      }), proto.flow.access.GetAccountResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetAccountResponse();
        return proto.flow.access.GetAccountResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetAccountResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = new i2.Account();
              t3.readMessage(o2, i2.Account.deserializeBinaryFromReader), e4.setAccount(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetAccountResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetAccountResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetAccountResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getAccount()) != null && t3.writeMessage(1, o2, i2.Account.serializeBinaryToWriter);
      }, proto.flow.access.GetAccountResponse.prototype.getAccount = function() {
        return r2.Message.getWrapperField(this, i2.Account, 1);
      }, proto.flow.access.GetAccountResponse.prototype.setAccount = function(e4) {
        return r2.Message.setWrapperField(this, 1, e4);
      }, proto.flow.access.GetAccountResponse.prototype.clearAccount = function() {
        return this.setAccount(void 0);
      }, proto.flow.access.GetAccountResponse.prototype.hasAccount = function() {
        return r2.Message.getField(this, 1) != null;
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetAccountAtLatestBlockRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetAccountAtLatestBlockRequest.toObject(e4, this);
      }, proto.flow.access.GetAccountAtLatestBlockRequest.toObject = function(e4, t3) {
        var o2 = { address: t3.getAddress_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetAccountAtLatestBlockRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetAccountAtLatestBlockRequest();
        return proto.flow.access.GetAccountAtLatestBlockRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetAccountAtLatestBlockRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setAddress(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetAccountAtLatestBlockRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetAccountAtLatestBlockRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetAccountAtLatestBlockRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getAddress_asU8()).length > 0 && t3.writeBytes(1, o2);
      }, proto.flow.access.GetAccountAtLatestBlockRequest.prototype.getAddress = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.GetAccountAtLatestBlockRequest.prototype.getAddress_asB64 = function() {
        return r2.Message.bytesAsB64(this.getAddress());
      }, proto.flow.access.GetAccountAtLatestBlockRequest.prototype.getAddress_asU8 = function() {
        return r2.Message.bytesAsU8(this.getAddress());
      }, proto.flow.access.GetAccountAtLatestBlockRequest.prototype.setAddress = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.AccountResponse.prototype.toObject = function(e4) {
        return proto.flow.access.AccountResponse.toObject(e4, this);
      }, proto.flow.access.AccountResponse.toObject = function(e4, t3) {
        var o2, r3 = { account: (o2 = t3.getAccount()) && i2.Account.toObject(e4, o2) };
        return e4 && (r3.$jspbMessageInstance = t3), r3;
      }), proto.flow.access.AccountResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.AccountResponse();
        return proto.flow.access.AccountResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.AccountResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = new i2.Account();
              t3.readMessage(o2, i2.Account.deserializeBinaryFromReader), e4.setAccount(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.AccountResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.AccountResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.AccountResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getAccount()) != null && t3.writeMessage(1, o2, i2.Account.serializeBinaryToWriter);
      }, proto.flow.access.AccountResponse.prototype.getAccount = function() {
        return r2.Message.getWrapperField(this, i2.Account, 1);
      }, proto.flow.access.AccountResponse.prototype.setAccount = function(e4) {
        return r2.Message.setWrapperField(this, 1, e4);
      }, proto.flow.access.AccountResponse.prototype.clearAccount = function() {
        return this.setAccount(void 0);
      }, proto.flow.access.AccountResponse.prototype.hasAccount = function() {
        return r2.Message.getField(this, 1) != null;
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetAccountAtBlockHeightRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetAccountAtBlockHeightRequest.toObject(e4, this);
      }, proto.flow.access.GetAccountAtBlockHeightRequest.toObject = function(e4, t3) {
        var o2 = { address: t3.getAddress_asB64(), blockHeight: r2.Message.getFieldWithDefault(t3, 2, 0) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetAccountAtBlockHeightRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetAccountAtBlockHeightRequest();
        return proto.flow.access.GetAccountAtBlockHeightRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetAccountAtBlockHeightRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setAddress(o2);
              break;
            case 2:
              o2 = t3.readUint64();
              e4.setBlockHeight(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetAccountAtBlockHeightRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetAccountAtBlockHeightRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetAccountAtBlockHeightRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getAddress_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getBlockHeight()) !== 0 && t3.writeUint64(2, o2);
      }, proto.flow.access.GetAccountAtBlockHeightRequest.prototype.getAddress = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.GetAccountAtBlockHeightRequest.prototype.getAddress_asB64 = function() {
        return r2.Message.bytesAsB64(this.getAddress());
      }, proto.flow.access.GetAccountAtBlockHeightRequest.prototype.getAddress_asU8 = function() {
        return r2.Message.bytesAsU8(this.getAddress());
      }, proto.flow.access.GetAccountAtBlockHeightRequest.prototype.setAddress = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.access.GetAccountAtBlockHeightRequest.prototype.getBlockHeight = function() {
        return r2.Message.getFieldWithDefault(this, 2, 0);
      }, proto.flow.access.GetAccountAtBlockHeightRequest.prototype.setBlockHeight = function(e4) {
        return r2.Message.setProto3IntField(this, 2, e4);
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.repeatedFields_ = [2], r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.toObject = function(e4) {
        return proto.flow.access.ExecuteScriptAtLatestBlockRequest.toObject(e4, this);
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.toObject = function(e4, t3) {
        var o2 = { script: t3.getScript_asB64(), argumentsList: t3.getArgumentsList_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.ExecuteScriptAtLatestBlockRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.ExecuteScriptAtLatestBlockRequest();
        return proto.flow.access.ExecuteScriptAtLatestBlockRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setScript(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.addArguments(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.ExecuteScriptAtLatestBlockRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getScript_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getArgumentsList_asU8()).length > 0 && t3.writeRepeatedBytes(2, o2);
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.getScript = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.getScript_asB64 = function() {
        return r2.Message.bytesAsB64(this.getScript());
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.getScript_asU8 = function() {
        return r2.Message.bytesAsU8(this.getScript());
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.setScript = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.getArgumentsList = function() {
        return r2.Message.getRepeatedField(this, 2);
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.getArgumentsList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getArgumentsList());
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.getArgumentsList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getArgumentsList());
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.setArgumentsList = function(e4) {
        return r2.Message.setField(this, 2, e4 || []);
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.addArguments = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 2, e4, t3);
      }, proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.clearArgumentsList = function() {
        return this.setArgumentsList([]);
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.repeatedFields_ = [3], r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.toObject = function(e4) {
        return proto.flow.access.ExecuteScriptAtBlockIDRequest.toObject(e4, this);
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.toObject = function(e4, t3) {
        var o2 = { blockId: t3.getBlockId_asB64(), script: t3.getScript_asB64(), argumentsList: t3.getArgumentsList_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.ExecuteScriptAtBlockIDRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.ExecuteScriptAtBlockIDRequest();
        return proto.flow.access.ExecuteScriptAtBlockIDRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setBlockId(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.setScript(o2);
              break;
            case 3:
              o2 = t3.readBytes();
              e4.addArguments(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.ExecuteScriptAtBlockIDRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getBlockId_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getScript_asU8()).length > 0 && t3.writeBytes(2, o2), (o2 = e4.getArgumentsList_asU8()).length > 0 && t3.writeRepeatedBytes(3, o2);
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getBlockId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getBlockId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getBlockId());
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getBlockId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getBlockId());
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.setBlockId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getScript = function() {
        return r2.Message.getFieldWithDefault(this, 2, "");
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getScript_asB64 = function() {
        return r2.Message.bytesAsB64(this.getScript());
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getScript_asU8 = function() {
        return r2.Message.bytesAsU8(this.getScript());
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.setScript = function(e4) {
        return r2.Message.setProto3BytesField(this, 2, e4);
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getArgumentsList = function() {
        return r2.Message.getRepeatedField(this, 3);
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getArgumentsList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getArgumentsList());
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getArgumentsList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getArgumentsList());
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.setArgumentsList = function(e4) {
        return r2.Message.setField(this, 3, e4 || []);
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.addArguments = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 3, e4, t3);
      }, proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.clearArgumentsList = function() {
        return this.setArgumentsList([]);
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.repeatedFields_ = [3], r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.toObject = function(e4) {
        return proto.flow.access.ExecuteScriptAtBlockHeightRequest.toObject(e4, this);
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.toObject = function(e4, t3) {
        var o2 = { blockHeight: r2.Message.getFieldWithDefault(t3, 1, 0), script: t3.getScript_asB64(), argumentsList: t3.getArgumentsList_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.ExecuteScriptAtBlockHeightRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.ExecuteScriptAtBlockHeightRequest();
        return proto.flow.access.ExecuteScriptAtBlockHeightRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readUint64();
              e4.setBlockHeight(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.setScript(o2);
              break;
            case 3:
              o2 = t3.readBytes();
              e4.addArguments(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.ExecuteScriptAtBlockHeightRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getBlockHeight()) !== 0 && t3.writeUint64(1, o2), (o2 = e4.getScript_asU8()).length > 0 && t3.writeBytes(2, o2), (o2 = e4.getArgumentsList_asU8()).length > 0 && t3.writeRepeatedBytes(3, o2);
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getBlockHeight = function() {
        return r2.Message.getFieldWithDefault(this, 1, 0);
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.setBlockHeight = function(e4) {
        return r2.Message.setProto3IntField(this, 1, e4);
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getScript = function() {
        return r2.Message.getFieldWithDefault(this, 2, "");
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getScript_asB64 = function() {
        return r2.Message.bytesAsB64(this.getScript());
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getScript_asU8 = function() {
        return r2.Message.bytesAsU8(this.getScript());
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.setScript = function(e4) {
        return r2.Message.setProto3BytesField(this, 2, e4);
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getArgumentsList = function() {
        return r2.Message.getRepeatedField(this, 3);
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getArgumentsList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getArgumentsList());
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getArgumentsList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getArgumentsList());
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.setArgumentsList = function(e4) {
        return r2.Message.setField(this, 3, e4 || []);
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.addArguments = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 3, e4, t3);
      }, proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.clearArgumentsList = function() {
        return this.setArgumentsList([]);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.ExecuteScriptResponse.prototype.toObject = function(e4) {
        return proto.flow.access.ExecuteScriptResponse.toObject(e4, this);
      }, proto.flow.access.ExecuteScriptResponse.toObject = function(e4, t3) {
        var o2 = { value: t3.getValue_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.ExecuteScriptResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.ExecuteScriptResponse();
        return proto.flow.access.ExecuteScriptResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.ExecuteScriptResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setValue(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.ExecuteScriptResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.ExecuteScriptResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.ExecuteScriptResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getValue_asU8()).length > 0 && t3.writeBytes(1, o2);
      }, proto.flow.access.ExecuteScriptResponse.prototype.getValue = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.ExecuteScriptResponse.prototype.getValue_asB64 = function() {
        return r2.Message.bytesAsB64(this.getValue());
      }, proto.flow.access.ExecuteScriptResponse.prototype.getValue_asU8 = function() {
        return r2.Message.bytesAsU8(this.getValue());
      }, proto.flow.access.ExecuteScriptResponse.prototype.setValue = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetEventsForHeightRangeRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetEventsForHeightRangeRequest.toObject(e4, this);
      }, proto.flow.access.GetEventsForHeightRangeRequest.toObject = function(e4, t3) {
        var o2 = { type: r2.Message.getFieldWithDefault(t3, 1, ""), startHeight: r2.Message.getFieldWithDefault(t3, 2, 0), endHeight: r2.Message.getFieldWithDefault(t3, 3, 0) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetEventsForHeightRangeRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetEventsForHeightRangeRequest();
        return proto.flow.access.GetEventsForHeightRangeRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetEventsForHeightRangeRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readString();
              e4.setType(o2);
              break;
            case 2:
              o2 = t3.readUint64();
              e4.setStartHeight(o2);
              break;
            case 3:
              o2 = t3.readUint64();
              e4.setEndHeight(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetEventsForHeightRangeRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetEventsForHeightRangeRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetEventsForHeightRangeRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getType()).length > 0 && t3.writeString(1, o2), (o2 = e4.getStartHeight()) !== 0 && t3.writeUint64(2, o2), (o2 = e4.getEndHeight()) !== 0 && t3.writeUint64(3, o2);
      }, proto.flow.access.GetEventsForHeightRangeRequest.prototype.getType = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.GetEventsForHeightRangeRequest.prototype.setType = function(e4) {
        return r2.Message.setProto3StringField(this, 1, e4);
      }, proto.flow.access.GetEventsForHeightRangeRequest.prototype.getStartHeight = function() {
        return r2.Message.getFieldWithDefault(this, 2, 0);
      }, proto.flow.access.GetEventsForHeightRangeRequest.prototype.setStartHeight = function(e4) {
        return r2.Message.setProto3IntField(this, 2, e4);
      }, proto.flow.access.GetEventsForHeightRangeRequest.prototype.getEndHeight = function() {
        return r2.Message.getFieldWithDefault(this, 3, 0);
      }, proto.flow.access.GetEventsForHeightRangeRequest.prototype.setEndHeight = function(e4) {
        return r2.Message.setProto3IntField(this, 3, e4);
      }, proto.flow.access.GetEventsForBlockIDsRequest.repeatedFields_ = [2], r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetEventsForBlockIDsRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetEventsForBlockIDsRequest.toObject(e4, this);
      }, proto.flow.access.GetEventsForBlockIDsRequest.toObject = function(e4, t3) {
        var o2 = { type: r2.Message.getFieldWithDefault(t3, 1, ""), blockIdsList: t3.getBlockIdsList_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetEventsForBlockIDsRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetEventsForBlockIDsRequest();
        return proto.flow.access.GetEventsForBlockIDsRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetEventsForBlockIDsRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readString();
              e4.setType(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.addBlockIds(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetEventsForBlockIDsRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetEventsForBlockIDsRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetEventsForBlockIDsRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getType()).length > 0 && t3.writeString(1, o2), (o2 = e4.getBlockIdsList_asU8()).length > 0 && t3.writeRepeatedBytes(2, o2);
      }, proto.flow.access.GetEventsForBlockIDsRequest.prototype.getType = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.GetEventsForBlockIDsRequest.prototype.setType = function(e4) {
        return r2.Message.setProto3StringField(this, 1, e4);
      }, proto.flow.access.GetEventsForBlockIDsRequest.prototype.getBlockIdsList = function() {
        return r2.Message.getRepeatedField(this, 2);
      }, proto.flow.access.GetEventsForBlockIDsRequest.prototype.getBlockIdsList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getBlockIdsList());
      }, proto.flow.access.GetEventsForBlockIDsRequest.prototype.getBlockIdsList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getBlockIdsList());
      }, proto.flow.access.GetEventsForBlockIDsRequest.prototype.setBlockIdsList = function(e4) {
        return r2.Message.setField(this, 2, e4 || []);
      }, proto.flow.access.GetEventsForBlockIDsRequest.prototype.addBlockIds = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 2, e4, t3);
      }, proto.flow.access.GetEventsForBlockIDsRequest.prototype.clearBlockIdsList = function() {
        return this.setBlockIdsList([]);
      }, proto.flow.access.EventsResponse.repeatedFields_ = [1], r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.EventsResponse.prototype.toObject = function(e4) {
        return proto.flow.access.EventsResponse.toObject(e4, this);
      }, proto.flow.access.EventsResponse.toObject = function(e4, t3) {
        var o2 = { resultsList: r2.Message.toObjectList(t3.getResultsList(), proto.flow.access.EventsResponse.Result.toObject, e4) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.EventsResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.EventsResponse();
        return proto.flow.access.EventsResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.EventsResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = new proto.flow.access.EventsResponse.Result();
              t3.readMessage(o2, proto.flow.access.EventsResponse.Result.deserializeBinaryFromReader), e4.addResults(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.EventsResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.EventsResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.EventsResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getResultsList()).length > 0 && t3.writeRepeatedMessage(1, o2, proto.flow.access.EventsResponse.Result.serializeBinaryToWriter);
      }, proto.flow.access.EventsResponse.Result.repeatedFields_ = [3], r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.EventsResponse.Result.prototype.toObject = function(e4) {
        return proto.flow.access.EventsResponse.Result.toObject(e4, this);
      }, proto.flow.access.EventsResponse.Result.toObject = function(e4, t3) {
        var o2, s4 = { blockId: t3.getBlockId_asB64(), blockHeight: r2.Message.getFieldWithDefault(t3, 2, 0), eventsList: r2.Message.toObjectList(t3.getEventsList(), c2.Event.toObject, e4), blockTimestamp: (o2 = t3.getBlockTimestamp()) && p.Timestamp.toObject(e4, o2) };
        return e4 && (s4.$jspbMessageInstance = t3), s4;
      }), proto.flow.access.EventsResponse.Result.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.EventsResponse.Result();
        return proto.flow.access.EventsResponse.Result.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.EventsResponse.Result.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setBlockId(o2);
              break;
            case 2:
              o2 = t3.readUint64();
              e4.setBlockHeight(o2);
              break;
            case 3:
              o2 = new c2.Event();
              t3.readMessage(o2, c2.Event.deserializeBinaryFromReader), e4.addEvents(o2);
              break;
            case 4:
              o2 = new p.Timestamp();
              t3.readMessage(o2, p.Timestamp.deserializeBinaryFromReader), e4.setBlockTimestamp(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.EventsResponse.Result.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.EventsResponse.Result.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.EventsResponse.Result.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getBlockId_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getBlockHeight()) !== 0 && t3.writeUint64(2, o2), (o2 = e4.getEventsList()).length > 0 && t3.writeRepeatedMessage(3, o2, c2.Event.serializeBinaryToWriter), (o2 = e4.getBlockTimestamp()) != null && t3.writeMessage(4, o2, p.Timestamp.serializeBinaryToWriter);
      }, proto.flow.access.EventsResponse.Result.prototype.getBlockId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.EventsResponse.Result.prototype.getBlockId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getBlockId());
      }, proto.flow.access.EventsResponse.Result.prototype.getBlockId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getBlockId());
      }, proto.flow.access.EventsResponse.Result.prototype.setBlockId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.access.EventsResponse.Result.prototype.getBlockHeight = function() {
        return r2.Message.getFieldWithDefault(this, 2, 0);
      }, proto.flow.access.EventsResponse.Result.prototype.setBlockHeight = function(e4) {
        return r2.Message.setProto3IntField(this, 2, e4);
      }, proto.flow.access.EventsResponse.Result.prototype.getEventsList = function() {
        return r2.Message.getRepeatedWrapperField(this, c2.Event, 3);
      }, proto.flow.access.EventsResponse.Result.prototype.setEventsList = function(e4) {
        return r2.Message.setRepeatedWrapperField(this, 3, e4);
      }, proto.flow.access.EventsResponse.Result.prototype.addEvents = function(e4, t3) {
        return r2.Message.addToRepeatedWrapperField(this, 3, e4, proto.flow.entities.Event, t3);
      }, proto.flow.access.EventsResponse.Result.prototype.clearEventsList = function() {
        return this.setEventsList([]);
      }, proto.flow.access.EventsResponse.Result.prototype.getBlockTimestamp = function() {
        return r2.Message.getWrapperField(this, p.Timestamp, 4);
      }, proto.flow.access.EventsResponse.Result.prototype.setBlockTimestamp = function(e4) {
        return r2.Message.setWrapperField(this, 4, e4);
      }, proto.flow.access.EventsResponse.Result.prototype.clearBlockTimestamp = function() {
        return this.setBlockTimestamp(void 0);
      }, proto.flow.access.EventsResponse.Result.prototype.hasBlockTimestamp = function() {
        return r2.Message.getField(this, 4) != null;
      }, proto.flow.access.EventsResponse.prototype.getResultsList = function() {
        return r2.Message.getRepeatedWrapperField(this, proto.flow.access.EventsResponse.Result, 1);
      }, proto.flow.access.EventsResponse.prototype.setResultsList = function(e4) {
        return r2.Message.setRepeatedWrapperField(this, 1, e4);
      }, proto.flow.access.EventsResponse.prototype.addResults = function(e4, t3) {
        return r2.Message.addToRepeatedWrapperField(this, 1, e4, proto.flow.access.EventsResponse.Result, t3);
      }, proto.flow.access.EventsResponse.prototype.clearResultsList = function() {
        return this.setResultsList([]);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetNetworkParametersRequest.prototype.toObject = function(e4) {
        return proto.flow.access.GetNetworkParametersRequest.toObject(e4, this);
      }, proto.flow.access.GetNetworkParametersRequest.toObject = function(e4, t3) {
        var o2 = {};
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetNetworkParametersRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetNetworkParametersRequest();
        return proto.flow.access.GetNetworkParametersRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetNetworkParametersRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          t3.getFieldNumber();
          t3.skipField();
        }
        return e4;
      }, proto.flow.access.GetNetworkParametersRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetNetworkParametersRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetNetworkParametersRequest.serializeBinaryToWriter = function(e4, t3) {
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.access.GetNetworkParametersResponse.prototype.toObject = function(e4) {
        return proto.flow.access.GetNetworkParametersResponse.toObject(e4, this);
      }, proto.flow.access.GetNetworkParametersResponse.toObject = function(e4, t3) {
        var o2 = { chainId: r2.Message.getFieldWithDefault(t3, 1, "") };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.access.GetNetworkParametersResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.access.GetNetworkParametersResponse();
        return proto.flow.access.GetNetworkParametersResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.access.GetNetworkParametersResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readString();
              e4.setChainId(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.access.GetNetworkParametersResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.access.GetNetworkParametersResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.access.GetNetworkParametersResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getChainId()).length > 0 && t3.writeString(1, o2);
      }, proto.flow.access.GetNetworkParametersResponse.prototype.getChainId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.access.GetNetworkParametersResponse.prototype.setChainId = function(e4) {
        return r2.Message.setProto3StringField(this, 1, e4);
      }, s3.object.extend(t2, proto.flow.access);
    }, function(e3, t2, o) {
      var r2 = o(0), s3 = r2, n = Function("return this")(), i2 = o(6);
      s3.object.extend(proto, i2), s3.exportSymbol("proto.flow.entities.BlockHeader", null, n), proto.flow.entities.BlockHeader = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.entities.BlockHeader, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.entities.BlockHeader.displayName = "proto.flow.entities.BlockHeader"), r2.Message.GENERATE_TO_OBJECT && (proto.flow.entities.BlockHeader.prototype.toObject = function(e4) {
        return proto.flow.entities.BlockHeader.toObject(e4, this);
      }, proto.flow.entities.BlockHeader.toObject = function(e4, t3) {
        var o2, s4 = { id: t3.getId_asB64(), parentId: t3.getParentId_asB64(), height: r2.Message.getFieldWithDefault(t3, 3, 0), timestamp: (o2 = t3.getTimestamp()) && i2.Timestamp.toObject(e4, o2) };
        return e4 && (s4.$jspbMessageInstance = t3), s4;
      }), proto.flow.entities.BlockHeader.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.entities.BlockHeader();
        return proto.flow.entities.BlockHeader.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.entities.BlockHeader.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setId(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.setParentId(o2);
              break;
            case 3:
              o2 = t3.readUint64();
              e4.setHeight(o2);
              break;
            case 4:
              o2 = new i2.Timestamp();
              t3.readMessage(o2, i2.Timestamp.deserializeBinaryFromReader), e4.setTimestamp(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.entities.BlockHeader.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.entities.BlockHeader.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.entities.BlockHeader.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getId_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getParentId_asU8()).length > 0 && t3.writeBytes(2, o2), (o2 = e4.getHeight()) !== 0 && t3.writeUint64(3, o2), (o2 = e4.getTimestamp()) != null && t3.writeMessage(4, o2, i2.Timestamp.serializeBinaryToWriter);
      }, proto.flow.entities.BlockHeader.prototype.getId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.entities.BlockHeader.prototype.getId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getId());
      }, proto.flow.entities.BlockHeader.prototype.getId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getId());
      }, proto.flow.entities.BlockHeader.prototype.setId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.entities.BlockHeader.prototype.getParentId = function() {
        return r2.Message.getFieldWithDefault(this, 2, "");
      }, proto.flow.entities.BlockHeader.prototype.getParentId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getParentId());
      }, proto.flow.entities.BlockHeader.prototype.getParentId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getParentId());
      }, proto.flow.entities.BlockHeader.prototype.setParentId = function(e4) {
        return r2.Message.setProto3BytesField(this, 2, e4);
      }, proto.flow.entities.BlockHeader.prototype.getHeight = function() {
        return r2.Message.getFieldWithDefault(this, 3, 0);
      }, proto.flow.entities.BlockHeader.prototype.setHeight = function(e4) {
        return r2.Message.setProto3IntField(this, 3, e4);
      }, proto.flow.entities.BlockHeader.prototype.getTimestamp = function() {
        return r2.Message.getWrapperField(this, i2.Timestamp, 4);
      }, proto.flow.entities.BlockHeader.prototype.setTimestamp = function(e4) {
        return r2.Message.setWrapperField(this, 4, e4);
      }, proto.flow.entities.BlockHeader.prototype.clearTimestamp = function() {
        return this.setTimestamp(void 0);
      }, proto.flow.entities.BlockHeader.prototype.hasTimestamp = function() {
        return r2.Message.getField(this, 4) != null;
      }, s3.object.extend(t2, proto.flow.entities);
    }, function(e3, t2, o) {
      var r2 = o(0), s3 = r2, n = Function("return this")();
      s3.exportSymbol("proto.google.protobuf.Timestamp", null, n), proto.google.protobuf.Timestamp = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.google.protobuf.Timestamp, r2.Message), s3.DEBUG && !COMPILED && (proto.google.protobuf.Timestamp.displayName = "proto.google.protobuf.Timestamp"), r2.Message.GENERATE_TO_OBJECT && (proto.google.protobuf.Timestamp.prototype.toObject = function(e4) {
        return proto.google.protobuf.Timestamp.toObject(e4, this);
      }, proto.google.protobuf.Timestamp.toObject = function(e4, t3) {
        var o2 = { seconds: r2.Message.getFieldWithDefault(t3, 1, 0), nanos: r2.Message.getFieldWithDefault(t3, 2, 0) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.google.protobuf.Timestamp.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.google.protobuf.Timestamp();
        return proto.google.protobuf.Timestamp.deserializeBinaryFromReader(o2, t3);
      }, proto.google.protobuf.Timestamp.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readInt64();
              e4.setSeconds(o2);
              break;
            case 2:
              o2 = t3.readInt32();
              e4.setNanos(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.google.protobuf.Timestamp.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.google.protobuf.Timestamp.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.google.protobuf.Timestamp.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getSeconds()) !== 0 && t3.writeInt64(1, o2), (o2 = e4.getNanos()) !== 0 && t3.writeInt32(2, o2);
      }, proto.google.protobuf.Timestamp.prototype.getSeconds = function() {
        return r2.Message.getFieldWithDefault(this, 1, 0);
      }, proto.google.protobuf.Timestamp.prototype.setSeconds = function(e4) {
        return r2.Message.setProto3IntField(this, 1, e4);
      }, proto.google.protobuf.Timestamp.prototype.getNanos = function() {
        return r2.Message.getFieldWithDefault(this, 2, 0);
      }, proto.google.protobuf.Timestamp.prototype.setNanos = function(e4) {
        return r2.Message.setProto3IntField(this, 2, e4);
      }, s3.object.extend(t2, proto.google.protobuf), proto.google.protobuf.Timestamp.prototype.toDate = function() {
        var e4 = this.getSeconds(), t3 = this.getNanos();
        return new Date(1e3 * e4 + t3 / 1e6);
      }, proto.google.protobuf.Timestamp.prototype.fromDate = function(e4) {
        this.setSeconds(Math.floor(e4.getTime() / 1e3)), this.setNanos(1e6 * e4.getMilliseconds());
      }, proto.google.protobuf.Timestamp.fromDate = function(e4) {
        var t3 = new proto.google.protobuf.Timestamp();
        return t3.fromDate(e4), t3;
      };
    }, function(e3, t2, o) {
      var r2 = o(0), s3 = r2, n = Function("return this")(), i2 = o(6);
      s3.object.extend(proto, i2);
      var a2 = o(2);
      s3.object.extend(proto, a2);
      var g = o(8);
      s3.object.extend(proto, g), s3.exportSymbol("proto.flow.entities.Block", null, n), proto.flow.entities.Block = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.entities.Block.repeatedFields_, null);
      }, s3.inherits(proto.flow.entities.Block, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.entities.Block.displayName = "proto.flow.entities.Block"), proto.flow.entities.Block.repeatedFields_ = [5, 6, 7], r2.Message.GENERATE_TO_OBJECT && (proto.flow.entities.Block.prototype.toObject = function(e4) {
        return proto.flow.entities.Block.toObject(e4, this);
      }, proto.flow.entities.Block.toObject = function(e4, t3) {
        var o2, s4 = { id: t3.getId_asB64(), parentId: t3.getParentId_asB64(), height: r2.Message.getFieldWithDefault(t3, 3, 0), timestamp: (o2 = t3.getTimestamp()) && i2.Timestamp.toObject(e4, o2), collectionGuaranteesList: r2.Message.toObjectList(t3.getCollectionGuaranteesList(), a2.CollectionGuarantee.toObject, e4), blockSealsList: r2.Message.toObjectList(t3.getBlockSealsList(), g.BlockSeal.toObject, e4), signaturesList: t3.getSignaturesList_asB64() };
        return e4 && (s4.$jspbMessageInstance = t3), s4;
      }), proto.flow.entities.Block.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.entities.Block();
        return proto.flow.entities.Block.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.entities.Block.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setId(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.setParentId(o2);
              break;
            case 3:
              o2 = t3.readUint64();
              e4.setHeight(o2);
              break;
            case 4:
              o2 = new i2.Timestamp();
              t3.readMessage(o2, i2.Timestamp.deserializeBinaryFromReader), e4.setTimestamp(o2);
              break;
            case 5:
              o2 = new a2.CollectionGuarantee();
              t3.readMessage(o2, a2.CollectionGuarantee.deserializeBinaryFromReader), e4.addCollectionGuarantees(o2);
              break;
            case 6:
              o2 = new g.BlockSeal();
              t3.readMessage(o2, g.BlockSeal.deserializeBinaryFromReader), e4.addBlockSeals(o2);
              break;
            case 7:
              o2 = t3.readBytes();
              e4.addSignatures(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.entities.Block.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.entities.Block.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.entities.Block.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getId_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getParentId_asU8()).length > 0 && t3.writeBytes(2, o2), (o2 = e4.getHeight()) !== 0 && t3.writeUint64(3, o2), (o2 = e4.getTimestamp()) != null && t3.writeMessage(4, o2, i2.Timestamp.serializeBinaryToWriter), (o2 = e4.getCollectionGuaranteesList()).length > 0 && t3.writeRepeatedMessage(5, o2, a2.CollectionGuarantee.serializeBinaryToWriter), (o2 = e4.getBlockSealsList()).length > 0 && t3.writeRepeatedMessage(6, o2, g.BlockSeal.serializeBinaryToWriter), (o2 = e4.getSignaturesList_asU8()).length > 0 && t3.writeRepeatedBytes(7, o2);
      }, proto.flow.entities.Block.prototype.getId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.entities.Block.prototype.getId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getId());
      }, proto.flow.entities.Block.prototype.getId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getId());
      }, proto.flow.entities.Block.prototype.setId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.entities.Block.prototype.getParentId = function() {
        return r2.Message.getFieldWithDefault(this, 2, "");
      }, proto.flow.entities.Block.prototype.getParentId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getParentId());
      }, proto.flow.entities.Block.prototype.getParentId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getParentId());
      }, proto.flow.entities.Block.prototype.setParentId = function(e4) {
        return r2.Message.setProto3BytesField(this, 2, e4);
      }, proto.flow.entities.Block.prototype.getHeight = function() {
        return r2.Message.getFieldWithDefault(this, 3, 0);
      }, proto.flow.entities.Block.prototype.setHeight = function(e4) {
        return r2.Message.setProto3IntField(this, 3, e4);
      }, proto.flow.entities.Block.prototype.getTimestamp = function() {
        return r2.Message.getWrapperField(this, i2.Timestamp, 4);
      }, proto.flow.entities.Block.prototype.setTimestamp = function(e4) {
        return r2.Message.setWrapperField(this, 4, e4);
      }, proto.flow.entities.Block.prototype.clearTimestamp = function() {
        return this.setTimestamp(void 0);
      }, proto.flow.entities.Block.prototype.hasTimestamp = function() {
        return r2.Message.getField(this, 4) != null;
      }, proto.flow.entities.Block.prototype.getCollectionGuaranteesList = function() {
        return r2.Message.getRepeatedWrapperField(this, a2.CollectionGuarantee, 5);
      }, proto.flow.entities.Block.prototype.setCollectionGuaranteesList = function(e4) {
        return r2.Message.setRepeatedWrapperField(this, 5, e4);
      }, proto.flow.entities.Block.prototype.addCollectionGuarantees = function(e4, t3) {
        return r2.Message.addToRepeatedWrapperField(this, 5, e4, proto.flow.entities.CollectionGuarantee, t3);
      }, proto.flow.entities.Block.prototype.clearCollectionGuaranteesList = function() {
        return this.setCollectionGuaranteesList([]);
      }, proto.flow.entities.Block.prototype.getBlockSealsList = function() {
        return r2.Message.getRepeatedWrapperField(this, g.BlockSeal, 6);
      }, proto.flow.entities.Block.prototype.setBlockSealsList = function(e4) {
        return r2.Message.setRepeatedWrapperField(this, 6, e4);
      }, proto.flow.entities.Block.prototype.addBlockSeals = function(e4, t3) {
        return r2.Message.addToRepeatedWrapperField(this, 6, e4, proto.flow.entities.BlockSeal, t3);
      }, proto.flow.entities.Block.prototype.clearBlockSealsList = function() {
        return this.setBlockSealsList([]);
      }, proto.flow.entities.Block.prototype.getSignaturesList = function() {
        return r2.Message.getRepeatedField(this, 7);
      }, proto.flow.entities.Block.prototype.getSignaturesList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getSignaturesList());
      }, proto.flow.entities.Block.prototype.getSignaturesList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getSignaturesList());
      }, proto.flow.entities.Block.prototype.setSignaturesList = function(e4) {
        return r2.Message.setField(this, 7, e4 || []);
      }, proto.flow.entities.Block.prototype.addSignatures = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 7, e4, t3);
      }, proto.flow.entities.Block.prototype.clearSignaturesList = function() {
        return this.setSignaturesList([]);
      }, s3.object.extend(t2, proto.flow.entities);
    }, function(e3, t2, o) {
      var r2 = o(0), s3 = r2, n = Function("return this")();
      s3.exportSymbol("proto.flow.entities.BlockSeal", null, n), proto.flow.entities.BlockSeal = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.entities.BlockSeal.repeatedFields_, null);
      }, s3.inherits(proto.flow.entities.BlockSeal, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.entities.BlockSeal.displayName = "proto.flow.entities.BlockSeal"), proto.flow.entities.BlockSeal.repeatedFields_ = [3, 4], r2.Message.GENERATE_TO_OBJECT && (proto.flow.entities.BlockSeal.prototype.toObject = function(e4) {
        return proto.flow.entities.BlockSeal.toObject(e4, this);
      }, proto.flow.entities.BlockSeal.toObject = function(e4, t3) {
        var o2 = { blockId: t3.getBlockId_asB64(), executionReceiptId: t3.getExecutionReceiptId_asB64(), executionReceiptSignaturesList: t3.getExecutionReceiptSignaturesList_asB64(), resultApprovalSignaturesList: t3.getResultApprovalSignaturesList_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.entities.BlockSeal.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.entities.BlockSeal();
        return proto.flow.entities.BlockSeal.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.entities.BlockSeal.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setBlockId(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.setExecutionReceiptId(o2);
              break;
            case 3:
              o2 = t3.readBytes();
              e4.addExecutionReceiptSignatures(o2);
              break;
            case 4:
              o2 = t3.readBytes();
              e4.addResultApprovalSignatures(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.entities.BlockSeal.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.entities.BlockSeal.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.entities.BlockSeal.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getBlockId_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getExecutionReceiptId_asU8()).length > 0 && t3.writeBytes(2, o2), (o2 = e4.getExecutionReceiptSignaturesList_asU8()).length > 0 && t3.writeRepeatedBytes(3, o2), (o2 = e4.getResultApprovalSignaturesList_asU8()).length > 0 && t3.writeRepeatedBytes(4, o2);
      }, proto.flow.entities.BlockSeal.prototype.getBlockId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.entities.BlockSeal.prototype.getBlockId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getBlockId());
      }, proto.flow.entities.BlockSeal.prototype.getBlockId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getBlockId());
      }, proto.flow.entities.BlockSeal.prototype.setBlockId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.entities.BlockSeal.prototype.getExecutionReceiptId = function() {
        return r2.Message.getFieldWithDefault(this, 2, "");
      }, proto.flow.entities.BlockSeal.prototype.getExecutionReceiptId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getExecutionReceiptId());
      }, proto.flow.entities.BlockSeal.prototype.getExecutionReceiptId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getExecutionReceiptId());
      }, proto.flow.entities.BlockSeal.prototype.setExecutionReceiptId = function(e4) {
        return r2.Message.setProto3BytesField(this, 2, e4);
      }, proto.flow.entities.BlockSeal.prototype.getExecutionReceiptSignaturesList = function() {
        return r2.Message.getRepeatedField(this, 3);
      }, proto.flow.entities.BlockSeal.prototype.getExecutionReceiptSignaturesList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getExecutionReceiptSignaturesList());
      }, proto.flow.entities.BlockSeal.prototype.getExecutionReceiptSignaturesList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getExecutionReceiptSignaturesList());
      }, proto.flow.entities.BlockSeal.prototype.setExecutionReceiptSignaturesList = function(e4) {
        return r2.Message.setField(this, 3, e4 || []);
      }, proto.flow.entities.BlockSeal.prototype.addExecutionReceiptSignatures = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 3, e4, t3);
      }, proto.flow.entities.BlockSeal.prototype.clearExecutionReceiptSignaturesList = function() {
        return this.setExecutionReceiptSignaturesList([]);
      }, proto.flow.entities.BlockSeal.prototype.getResultApprovalSignaturesList = function() {
        return r2.Message.getRepeatedField(this, 4);
      }, proto.flow.entities.BlockSeal.prototype.getResultApprovalSignaturesList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getResultApprovalSignaturesList());
      }, proto.flow.entities.BlockSeal.prototype.getResultApprovalSignaturesList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getResultApprovalSignaturesList());
      }, proto.flow.entities.BlockSeal.prototype.setResultApprovalSignaturesList = function(e4) {
        return r2.Message.setField(this, 4, e4 || []);
      }, proto.flow.entities.BlockSeal.prototype.addResultApprovalSignatures = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 4, e4, t3);
      }, proto.flow.entities.BlockSeal.prototype.clearResultApprovalSignaturesList = function() {
        return this.setResultApprovalSignaturesList([]);
      }, s3.object.extend(t2, proto.flow.entities);
    }, function(e3, t2, o) {
      var r2 = o(0), s3 = r2, n = Function("return this")();
      s3.exportSymbol("proto.flow.entities.Transaction", null, n), s3.exportSymbol("proto.flow.entities.Transaction.ProposalKey", null, n), s3.exportSymbol("proto.flow.entities.Transaction.Signature", null, n), s3.exportSymbol("proto.flow.entities.TransactionStatus", null, n), proto.flow.entities.Transaction = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.entities.Transaction.repeatedFields_, null);
      }, s3.inherits(proto.flow.entities.Transaction, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.entities.Transaction.displayName = "proto.flow.entities.Transaction"), proto.flow.entities.Transaction.ProposalKey = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.entities.Transaction.ProposalKey, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.entities.Transaction.ProposalKey.displayName = "proto.flow.entities.Transaction.ProposalKey"), proto.flow.entities.Transaction.Signature = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.entities.Transaction.Signature, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.entities.Transaction.Signature.displayName = "proto.flow.entities.Transaction.Signature"), proto.flow.entities.Transaction.repeatedFields_ = [2, 7, 8, 9], r2.Message.GENERATE_TO_OBJECT && (proto.flow.entities.Transaction.prototype.toObject = function(e4) {
        return proto.flow.entities.Transaction.toObject(e4, this);
      }, proto.flow.entities.Transaction.toObject = function(e4, t3) {
        var o2, s4 = { script: t3.getScript_asB64(), argumentsList: t3.getArgumentsList_asB64(), referenceBlockId: t3.getReferenceBlockId_asB64(), gasLimit: r2.Message.getFieldWithDefault(t3, 4, 0), proposalKey: (o2 = t3.getProposalKey()) && proto.flow.entities.Transaction.ProposalKey.toObject(e4, o2), payer: t3.getPayer_asB64(), authorizersList: t3.getAuthorizersList_asB64(), payloadSignaturesList: r2.Message.toObjectList(t3.getPayloadSignaturesList(), proto.flow.entities.Transaction.Signature.toObject, e4), envelopeSignaturesList: r2.Message.toObjectList(t3.getEnvelopeSignaturesList(), proto.flow.entities.Transaction.Signature.toObject, e4) };
        return e4 && (s4.$jspbMessageInstance = t3), s4;
      }), proto.flow.entities.Transaction.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.entities.Transaction();
        return proto.flow.entities.Transaction.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.entities.Transaction.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setScript(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.addArguments(o2);
              break;
            case 3:
              o2 = t3.readBytes();
              e4.setReferenceBlockId(o2);
              break;
            case 4:
              o2 = t3.readUint64();
              e4.setGasLimit(o2);
              break;
            case 5:
              o2 = new proto.flow.entities.Transaction.ProposalKey();
              t3.readMessage(o2, proto.flow.entities.Transaction.ProposalKey.deserializeBinaryFromReader), e4.setProposalKey(o2);
              break;
            case 6:
              o2 = t3.readBytes();
              e4.setPayer(o2);
              break;
            case 7:
              o2 = t3.readBytes();
              e4.addAuthorizers(o2);
              break;
            case 8:
              o2 = new proto.flow.entities.Transaction.Signature();
              t3.readMessage(o2, proto.flow.entities.Transaction.Signature.deserializeBinaryFromReader), e4.addPayloadSignatures(o2);
              break;
            case 9:
              o2 = new proto.flow.entities.Transaction.Signature();
              t3.readMessage(o2, proto.flow.entities.Transaction.Signature.deserializeBinaryFromReader), e4.addEnvelopeSignatures(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.entities.Transaction.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.entities.Transaction.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.entities.Transaction.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getScript_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getArgumentsList_asU8()).length > 0 && t3.writeRepeatedBytes(2, o2), (o2 = e4.getReferenceBlockId_asU8()).length > 0 && t3.writeBytes(3, o2), (o2 = e4.getGasLimit()) !== 0 && t3.writeUint64(4, o2), (o2 = e4.getProposalKey()) != null && t3.writeMessage(5, o2, proto.flow.entities.Transaction.ProposalKey.serializeBinaryToWriter), (o2 = e4.getPayer_asU8()).length > 0 && t3.writeBytes(6, o2), (o2 = e4.getAuthorizersList_asU8()).length > 0 && t3.writeRepeatedBytes(7, o2), (o2 = e4.getPayloadSignaturesList()).length > 0 && t3.writeRepeatedMessage(8, o2, proto.flow.entities.Transaction.Signature.serializeBinaryToWriter), (o2 = e4.getEnvelopeSignaturesList()).length > 0 && t3.writeRepeatedMessage(9, o2, proto.flow.entities.Transaction.Signature.serializeBinaryToWriter);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.entities.Transaction.ProposalKey.prototype.toObject = function(e4) {
        return proto.flow.entities.Transaction.ProposalKey.toObject(e4, this);
      }, proto.flow.entities.Transaction.ProposalKey.toObject = function(e4, t3) {
        var o2 = { address: t3.getAddress_asB64(), keyId: r2.Message.getFieldWithDefault(t3, 2, 0), sequenceNumber: r2.Message.getFieldWithDefault(t3, 3, 0) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.entities.Transaction.ProposalKey.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.entities.Transaction.ProposalKey();
        return proto.flow.entities.Transaction.ProposalKey.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.entities.Transaction.ProposalKey.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setAddress(o2);
              break;
            case 2:
              o2 = t3.readUint32();
              e4.setKeyId(o2);
              break;
            case 3:
              o2 = t3.readUint64();
              e4.setSequenceNumber(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.entities.Transaction.ProposalKey.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.entities.Transaction.ProposalKey.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.entities.Transaction.ProposalKey.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getAddress_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getKeyId()) !== 0 && t3.writeUint32(2, o2), (o2 = e4.getSequenceNumber()) !== 0 && t3.writeUint64(3, o2);
      }, proto.flow.entities.Transaction.ProposalKey.prototype.getAddress = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.entities.Transaction.ProposalKey.prototype.getAddress_asB64 = function() {
        return r2.Message.bytesAsB64(this.getAddress());
      }, proto.flow.entities.Transaction.ProposalKey.prototype.getAddress_asU8 = function() {
        return r2.Message.bytesAsU8(this.getAddress());
      }, proto.flow.entities.Transaction.ProposalKey.prototype.setAddress = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.entities.Transaction.ProposalKey.prototype.getKeyId = function() {
        return r2.Message.getFieldWithDefault(this, 2, 0);
      }, proto.flow.entities.Transaction.ProposalKey.prototype.setKeyId = function(e4) {
        return r2.Message.setProto3IntField(this, 2, e4);
      }, proto.flow.entities.Transaction.ProposalKey.prototype.getSequenceNumber = function() {
        return r2.Message.getFieldWithDefault(this, 3, 0);
      }, proto.flow.entities.Transaction.ProposalKey.prototype.setSequenceNumber = function(e4) {
        return r2.Message.setProto3IntField(this, 3, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.entities.Transaction.Signature.prototype.toObject = function(e4) {
        return proto.flow.entities.Transaction.Signature.toObject(e4, this);
      }, proto.flow.entities.Transaction.Signature.toObject = function(e4, t3) {
        var o2 = { address: t3.getAddress_asB64(), keyId: r2.Message.getFieldWithDefault(t3, 2, 0), signature: t3.getSignature_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.entities.Transaction.Signature.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.entities.Transaction.Signature();
        return proto.flow.entities.Transaction.Signature.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.entities.Transaction.Signature.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setAddress(o2);
              break;
            case 2:
              o2 = t3.readUint32();
              e4.setKeyId(o2);
              break;
            case 3:
              o2 = t3.readBytes();
              e4.setSignature(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.entities.Transaction.Signature.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.entities.Transaction.Signature.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.entities.Transaction.Signature.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getAddress_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getKeyId()) !== 0 && t3.writeUint32(2, o2), (o2 = e4.getSignature_asU8()).length > 0 && t3.writeBytes(3, o2);
      }, proto.flow.entities.Transaction.Signature.prototype.getAddress = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.entities.Transaction.Signature.prototype.getAddress_asB64 = function() {
        return r2.Message.bytesAsB64(this.getAddress());
      }, proto.flow.entities.Transaction.Signature.prototype.getAddress_asU8 = function() {
        return r2.Message.bytesAsU8(this.getAddress());
      }, proto.flow.entities.Transaction.Signature.prototype.setAddress = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.entities.Transaction.Signature.prototype.getKeyId = function() {
        return r2.Message.getFieldWithDefault(this, 2, 0);
      }, proto.flow.entities.Transaction.Signature.prototype.setKeyId = function(e4) {
        return r2.Message.setProto3IntField(this, 2, e4);
      }, proto.flow.entities.Transaction.Signature.prototype.getSignature = function() {
        return r2.Message.getFieldWithDefault(this, 3, "");
      }, proto.flow.entities.Transaction.Signature.prototype.getSignature_asB64 = function() {
        return r2.Message.bytesAsB64(this.getSignature());
      }, proto.flow.entities.Transaction.Signature.prototype.getSignature_asU8 = function() {
        return r2.Message.bytesAsU8(this.getSignature());
      }, proto.flow.entities.Transaction.Signature.prototype.setSignature = function(e4) {
        return r2.Message.setProto3BytesField(this, 3, e4);
      }, proto.flow.entities.Transaction.prototype.getScript = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.entities.Transaction.prototype.getScript_asB64 = function() {
        return r2.Message.bytesAsB64(this.getScript());
      }, proto.flow.entities.Transaction.prototype.getScript_asU8 = function() {
        return r2.Message.bytesAsU8(this.getScript());
      }, proto.flow.entities.Transaction.prototype.setScript = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.entities.Transaction.prototype.getArgumentsList = function() {
        return r2.Message.getRepeatedField(this, 2);
      }, proto.flow.entities.Transaction.prototype.getArgumentsList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getArgumentsList());
      }, proto.flow.entities.Transaction.prototype.getArgumentsList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getArgumentsList());
      }, proto.flow.entities.Transaction.prototype.setArgumentsList = function(e4) {
        return r2.Message.setField(this, 2, e4 || []);
      }, proto.flow.entities.Transaction.prototype.addArguments = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 2, e4, t3);
      }, proto.flow.entities.Transaction.prototype.clearArgumentsList = function() {
        return this.setArgumentsList([]);
      }, proto.flow.entities.Transaction.prototype.getReferenceBlockId = function() {
        return r2.Message.getFieldWithDefault(this, 3, "");
      }, proto.flow.entities.Transaction.prototype.getReferenceBlockId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getReferenceBlockId());
      }, proto.flow.entities.Transaction.prototype.getReferenceBlockId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getReferenceBlockId());
      }, proto.flow.entities.Transaction.prototype.setReferenceBlockId = function(e4) {
        return r2.Message.setProto3BytesField(this, 3, e4);
      }, proto.flow.entities.Transaction.prototype.getGasLimit = function() {
        return r2.Message.getFieldWithDefault(this, 4, 0);
      }, proto.flow.entities.Transaction.prototype.setGasLimit = function(e4) {
        return r2.Message.setProto3IntField(this, 4, e4);
      }, proto.flow.entities.Transaction.prototype.getProposalKey = function() {
        return r2.Message.getWrapperField(this, proto.flow.entities.Transaction.ProposalKey, 5);
      }, proto.flow.entities.Transaction.prototype.setProposalKey = function(e4) {
        return r2.Message.setWrapperField(this, 5, e4);
      }, proto.flow.entities.Transaction.prototype.clearProposalKey = function() {
        return this.setProposalKey(void 0);
      }, proto.flow.entities.Transaction.prototype.hasProposalKey = function() {
        return r2.Message.getField(this, 5) != null;
      }, proto.flow.entities.Transaction.prototype.getPayer = function() {
        return r2.Message.getFieldWithDefault(this, 6, "");
      }, proto.flow.entities.Transaction.prototype.getPayer_asB64 = function() {
        return r2.Message.bytesAsB64(this.getPayer());
      }, proto.flow.entities.Transaction.prototype.getPayer_asU8 = function() {
        return r2.Message.bytesAsU8(this.getPayer());
      }, proto.flow.entities.Transaction.prototype.setPayer = function(e4) {
        return r2.Message.setProto3BytesField(this, 6, e4);
      }, proto.flow.entities.Transaction.prototype.getAuthorizersList = function() {
        return r2.Message.getRepeatedField(this, 7);
      }, proto.flow.entities.Transaction.prototype.getAuthorizersList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getAuthorizersList());
      }, proto.flow.entities.Transaction.prototype.getAuthorizersList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getAuthorizersList());
      }, proto.flow.entities.Transaction.prototype.setAuthorizersList = function(e4) {
        return r2.Message.setField(this, 7, e4 || []);
      }, proto.flow.entities.Transaction.prototype.addAuthorizers = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 7, e4, t3);
      }, proto.flow.entities.Transaction.prototype.clearAuthorizersList = function() {
        return this.setAuthorizersList([]);
      }, proto.flow.entities.Transaction.prototype.getPayloadSignaturesList = function() {
        return r2.Message.getRepeatedWrapperField(this, proto.flow.entities.Transaction.Signature, 8);
      }, proto.flow.entities.Transaction.prototype.setPayloadSignaturesList = function(e4) {
        return r2.Message.setRepeatedWrapperField(this, 8, e4);
      }, proto.flow.entities.Transaction.prototype.addPayloadSignatures = function(e4, t3) {
        return r2.Message.addToRepeatedWrapperField(this, 8, e4, proto.flow.entities.Transaction.Signature, t3);
      }, proto.flow.entities.Transaction.prototype.clearPayloadSignaturesList = function() {
        return this.setPayloadSignaturesList([]);
      }, proto.flow.entities.Transaction.prototype.getEnvelopeSignaturesList = function() {
        return r2.Message.getRepeatedWrapperField(this, proto.flow.entities.Transaction.Signature, 9);
      }, proto.flow.entities.Transaction.prototype.setEnvelopeSignaturesList = function(e4) {
        return r2.Message.setRepeatedWrapperField(this, 9, e4);
      }, proto.flow.entities.Transaction.prototype.addEnvelopeSignatures = function(e4, t3) {
        return r2.Message.addToRepeatedWrapperField(this, 9, e4, proto.flow.entities.Transaction.Signature, t3);
      }, proto.flow.entities.Transaction.prototype.clearEnvelopeSignaturesList = function() {
        return this.setEnvelopeSignaturesList([]);
      }, proto.flow.entities.TransactionStatus = { UNKNOWN: 0, PENDING: 1, FINALIZED: 2, EXECUTED: 3, SEALED: 4, EXPIRED: 5 }, s3.object.extend(t2, proto.flow.entities);
    }, function(e3, t2, o) {
      var r2 = o(0), s3 = r2, n = Function("return this")(), i2 = o(1);
      s3.object.extend(proto, i2);
      var a2 = o(3);
      s3.object.extend(proto, a2), s3.exportSymbol("proto.flow.execution.ExecuteScriptAtBlockIDRequest", null, n), s3.exportSymbol("proto.flow.execution.ExecuteScriptAtBlockIDResponse", null, n), s3.exportSymbol("proto.flow.execution.GetAccountAtBlockIDRequest", null, n), s3.exportSymbol("proto.flow.execution.GetAccountAtBlockIDResponse", null, n), s3.exportSymbol("proto.flow.execution.GetEventsForBlockIDsRequest", null, n), s3.exportSymbol("proto.flow.execution.GetEventsForBlockIDsResponse", null, n), s3.exportSymbol("proto.flow.execution.GetEventsForBlockIDsResponse.Result", null, n), s3.exportSymbol("proto.flow.execution.GetTransactionResultRequest", null, n), s3.exportSymbol("proto.flow.execution.GetTransactionResultResponse", null, n), s3.exportSymbol("proto.flow.execution.PingRequest", null, n), s3.exportSymbol("proto.flow.execution.PingResponse", null, n), proto.flow.execution.PingRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.execution.PingRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.execution.PingRequest.displayName = "proto.flow.execution.PingRequest"), proto.flow.execution.PingResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.execution.PingResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.execution.PingResponse.displayName = "proto.flow.execution.PingResponse"), proto.flow.execution.GetAccountAtBlockIDRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.execution.GetAccountAtBlockIDRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.execution.GetAccountAtBlockIDRequest.displayName = "proto.flow.execution.GetAccountAtBlockIDRequest"), proto.flow.execution.GetAccountAtBlockIDResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.execution.GetAccountAtBlockIDResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.execution.GetAccountAtBlockIDResponse.displayName = "proto.flow.execution.GetAccountAtBlockIDResponse"), proto.flow.execution.ExecuteScriptAtBlockIDRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.execution.ExecuteScriptAtBlockIDRequest.repeatedFields_, null);
      }, s3.inherits(proto.flow.execution.ExecuteScriptAtBlockIDRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.execution.ExecuteScriptAtBlockIDRequest.displayName = "proto.flow.execution.ExecuteScriptAtBlockIDRequest"), proto.flow.execution.ExecuteScriptAtBlockIDResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.execution.ExecuteScriptAtBlockIDResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.execution.ExecuteScriptAtBlockIDResponse.displayName = "proto.flow.execution.ExecuteScriptAtBlockIDResponse"), proto.flow.execution.GetEventsForBlockIDsResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.execution.GetEventsForBlockIDsResponse.repeatedFields_, null);
      }, s3.inherits(proto.flow.execution.GetEventsForBlockIDsResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.execution.GetEventsForBlockIDsResponse.displayName = "proto.flow.execution.GetEventsForBlockIDsResponse"), proto.flow.execution.GetEventsForBlockIDsResponse.Result = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.execution.GetEventsForBlockIDsResponse.Result.repeatedFields_, null);
      }, s3.inherits(proto.flow.execution.GetEventsForBlockIDsResponse.Result, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.execution.GetEventsForBlockIDsResponse.Result.displayName = "proto.flow.execution.GetEventsForBlockIDsResponse.Result"), proto.flow.execution.GetEventsForBlockIDsRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.execution.GetEventsForBlockIDsRequest.repeatedFields_, null);
      }, s3.inherits(proto.flow.execution.GetEventsForBlockIDsRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.execution.GetEventsForBlockIDsRequest.displayName = "proto.flow.execution.GetEventsForBlockIDsRequest"), proto.flow.execution.GetTransactionResultRequest = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, null, null);
      }, s3.inherits(proto.flow.execution.GetTransactionResultRequest, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.execution.GetTransactionResultRequest.displayName = "proto.flow.execution.GetTransactionResultRequest"), proto.flow.execution.GetTransactionResultResponse = function(e4) {
        r2.Message.initialize(this, e4, 0, -1, proto.flow.execution.GetTransactionResultResponse.repeatedFields_, null);
      }, s3.inherits(proto.flow.execution.GetTransactionResultResponse, r2.Message), s3.DEBUG && !COMPILED && (proto.flow.execution.GetTransactionResultResponse.displayName = "proto.flow.execution.GetTransactionResultResponse"), r2.Message.GENERATE_TO_OBJECT && (proto.flow.execution.PingRequest.prototype.toObject = function(e4) {
        return proto.flow.execution.PingRequest.toObject(e4, this);
      }, proto.flow.execution.PingRequest.toObject = function(e4, t3) {
        var o2 = {};
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.execution.PingRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.execution.PingRequest();
        return proto.flow.execution.PingRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.execution.PingRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          t3.getFieldNumber();
          t3.skipField();
        }
        return e4;
      }, proto.flow.execution.PingRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.execution.PingRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.execution.PingRequest.serializeBinaryToWriter = function(e4, t3) {
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.execution.PingResponse.prototype.toObject = function(e4) {
        return proto.flow.execution.PingResponse.toObject(e4, this);
      }, proto.flow.execution.PingResponse.toObject = function(e4, t3) {
        var o2 = {};
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.execution.PingResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.execution.PingResponse();
        return proto.flow.execution.PingResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.execution.PingResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          t3.getFieldNumber();
          t3.skipField();
        }
        return e4;
      }, proto.flow.execution.PingResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.execution.PingResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.execution.PingResponse.serializeBinaryToWriter = function(e4, t3) {
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.execution.GetAccountAtBlockIDRequest.prototype.toObject = function(e4) {
        return proto.flow.execution.GetAccountAtBlockIDRequest.toObject(e4, this);
      }, proto.flow.execution.GetAccountAtBlockIDRequest.toObject = function(e4, t3) {
        var o2 = { blockId: t3.getBlockId_asB64(), address: t3.getAddress_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.execution.GetAccountAtBlockIDRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.execution.GetAccountAtBlockIDRequest();
        return proto.flow.execution.GetAccountAtBlockIDRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.execution.GetAccountAtBlockIDRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setBlockId(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.setAddress(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.execution.GetAccountAtBlockIDRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.execution.GetAccountAtBlockIDRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.execution.GetAccountAtBlockIDRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getBlockId_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getAddress_asU8()).length > 0 && t3.writeBytes(2, o2);
      }, proto.flow.execution.GetAccountAtBlockIDRequest.prototype.getBlockId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.execution.GetAccountAtBlockIDRequest.prototype.getBlockId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getBlockId());
      }, proto.flow.execution.GetAccountAtBlockIDRequest.prototype.getBlockId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getBlockId());
      }, proto.flow.execution.GetAccountAtBlockIDRequest.prototype.setBlockId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.execution.GetAccountAtBlockIDRequest.prototype.getAddress = function() {
        return r2.Message.getFieldWithDefault(this, 2, "");
      }, proto.flow.execution.GetAccountAtBlockIDRequest.prototype.getAddress_asB64 = function() {
        return r2.Message.bytesAsB64(this.getAddress());
      }, proto.flow.execution.GetAccountAtBlockIDRequest.prototype.getAddress_asU8 = function() {
        return r2.Message.bytesAsU8(this.getAddress());
      }, proto.flow.execution.GetAccountAtBlockIDRequest.prototype.setAddress = function(e4) {
        return r2.Message.setProto3BytesField(this, 2, e4);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.execution.GetAccountAtBlockIDResponse.prototype.toObject = function(e4) {
        return proto.flow.execution.GetAccountAtBlockIDResponse.toObject(e4, this);
      }, proto.flow.execution.GetAccountAtBlockIDResponse.toObject = function(e4, t3) {
        var o2, r3 = { account: (o2 = t3.getAccount()) && i2.Account.toObject(e4, o2) };
        return e4 && (r3.$jspbMessageInstance = t3), r3;
      }), proto.flow.execution.GetAccountAtBlockIDResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.execution.GetAccountAtBlockIDResponse();
        return proto.flow.execution.GetAccountAtBlockIDResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.execution.GetAccountAtBlockIDResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = new i2.Account();
              t3.readMessage(o2, i2.Account.deserializeBinaryFromReader), e4.setAccount(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.execution.GetAccountAtBlockIDResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.execution.GetAccountAtBlockIDResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.execution.GetAccountAtBlockIDResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getAccount()) != null && t3.writeMessage(1, o2, i2.Account.serializeBinaryToWriter);
      }, proto.flow.execution.GetAccountAtBlockIDResponse.prototype.getAccount = function() {
        return r2.Message.getWrapperField(this, i2.Account, 1);
      }, proto.flow.execution.GetAccountAtBlockIDResponse.prototype.setAccount = function(e4) {
        return r2.Message.setWrapperField(this, 1, e4);
      }, proto.flow.execution.GetAccountAtBlockIDResponse.prototype.clearAccount = function() {
        return this.setAccount(void 0);
      }, proto.flow.execution.GetAccountAtBlockIDResponse.prototype.hasAccount = function() {
        return r2.Message.getField(this, 1) != null;
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.repeatedFields_ = [3], r2.Message.GENERATE_TO_OBJECT && (proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.toObject = function(e4) {
        return proto.flow.execution.ExecuteScriptAtBlockIDRequest.toObject(e4, this);
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.toObject = function(e4, t3) {
        var o2 = { blockId: t3.getBlockId_asB64(), script: t3.getScript_asB64(), argumentsList: t3.getArgumentsList_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.execution.ExecuteScriptAtBlockIDRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.execution.ExecuteScriptAtBlockIDRequest();
        return proto.flow.execution.ExecuteScriptAtBlockIDRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setBlockId(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.setScript(o2);
              break;
            case 3:
              o2 = t3.readBytes();
              e4.addArguments(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.execution.ExecuteScriptAtBlockIDRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getBlockId_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getScript_asU8()).length > 0 && t3.writeBytes(2, o2), (o2 = e4.getArgumentsList_asU8()).length > 0 && t3.writeRepeatedBytes(3, o2);
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getBlockId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getBlockId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getBlockId());
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getBlockId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getBlockId());
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.setBlockId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getScript = function() {
        return r2.Message.getFieldWithDefault(this, 2, "");
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getScript_asB64 = function() {
        return r2.Message.bytesAsB64(this.getScript());
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getScript_asU8 = function() {
        return r2.Message.bytesAsU8(this.getScript());
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.setScript = function(e4) {
        return r2.Message.setProto3BytesField(this, 2, e4);
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getArgumentsList = function() {
        return r2.Message.getRepeatedField(this, 3);
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getArgumentsList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getArgumentsList());
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getArgumentsList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getArgumentsList());
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.setArgumentsList = function(e4) {
        return r2.Message.setField(this, 3, e4 || []);
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.addArguments = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 3, e4, t3);
      }, proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.clearArgumentsList = function() {
        return this.setArgumentsList([]);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.execution.ExecuteScriptAtBlockIDResponse.prototype.toObject = function(e4) {
        return proto.flow.execution.ExecuteScriptAtBlockIDResponse.toObject(e4, this);
      }, proto.flow.execution.ExecuteScriptAtBlockIDResponse.toObject = function(e4, t3) {
        var o2 = { value: t3.getValue_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.execution.ExecuteScriptAtBlockIDResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.execution.ExecuteScriptAtBlockIDResponse();
        return proto.flow.execution.ExecuteScriptAtBlockIDResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.execution.ExecuteScriptAtBlockIDResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setValue(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.execution.ExecuteScriptAtBlockIDResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.execution.ExecuteScriptAtBlockIDResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.execution.ExecuteScriptAtBlockIDResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getValue_asU8()).length > 0 && t3.writeBytes(1, o2);
      }, proto.flow.execution.ExecuteScriptAtBlockIDResponse.prototype.getValue = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.execution.ExecuteScriptAtBlockIDResponse.prototype.getValue_asB64 = function() {
        return r2.Message.bytesAsB64(this.getValue());
      }, proto.flow.execution.ExecuteScriptAtBlockIDResponse.prototype.getValue_asU8 = function() {
        return r2.Message.bytesAsU8(this.getValue());
      }, proto.flow.execution.ExecuteScriptAtBlockIDResponse.prototype.setValue = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.repeatedFields_ = [1], r2.Message.GENERATE_TO_OBJECT && (proto.flow.execution.GetEventsForBlockIDsResponse.prototype.toObject = function(e4) {
        return proto.flow.execution.GetEventsForBlockIDsResponse.toObject(e4, this);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.toObject = function(e4, t3) {
        var o2 = { resultsList: r2.Message.toObjectList(t3.getResultsList(), proto.flow.execution.GetEventsForBlockIDsResponse.Result.toObject, e4) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.execution.GetEventsForBlockIDsResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.execution.GetEventsForBlockIDsResponse();
        return proto.flow.execution.GetEventsForBlockIDsResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = new proto.flow.execution.GetEventsForBlockIDsResponse.Result();
              t3.readMessage(o2, proto.flow.execution.GetEventsForBlockIDsResponse.Result.deserializeBinaryFromReader), e4.addResults(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.execution.GetEventsForBlockIDsResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.execution.GetEventsForBlockIDsResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.execution.GetEventsForBlockIDsResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2;
        (o2 = e4.getResultsList()).length > 0 && t3.writeRepeatedMessage(1, o2, proto.flow.execution.GetEventsForBlockIDsResponse.Result.serializeBinaryToWriter);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.repeatedFields_ = [3], r2.Message.GENERATE_TO_OBJECT && (proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.toObject = function(e4) {
        return proto.flow.execution.GetEventsForBlockIDsResponse.Result.toObject(e4, this);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.toObject = function(e4, t3) {
        var o2 = { blockId: t3.getBlockId_asB64(), blockHeight: r2.Message.getFieldWithDefault(t3, 2, 0), eventsList: r2.Message.toObjectList(t3.getEventsList(), a2.Event.toObject, e4) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.execution.GetEventsForBlockIDsResponse.Result.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.execution.GetEventsForBlockIDsResponse.Result();
        return proto.flow.execution.GetEventsForBlockIDsResponse.Result.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setBlockId(o2);
              break;
            case 2:
              o2 = t3.readUint64();
              e4.setBlockHeight(o2);
              break;
            case 3:
              o2 = new a2.Event();
              t3.readMessage(o2, a2.Event.deserializeBinaryFromReader), e4.addEvents(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.execution.GetEventsForBlockIDsResponse.Result.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getBlockId_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getBlockHeight()) !== 0 && t3.writeUint64(2, o2), (o2 = e4.getEventsList()).length > 0 && t3.writeRepeatedMessage(3, o2, a2.Event.serializeBinaryToWriter);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.getBlockId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.getBlockId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getBlockId());
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.getBlockId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getBlockId());
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.setBlockId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.getBlockHeight = function() {
        return r2.Message.getFieldWithDefault(this, 2, 0);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.setBlockHeight = function(e4) {
        return r2.Message.setProto3IntField(this, 2, e4);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.getEventsList = function() {
        return r2.Message.getRepeatedWrapperField(this, a2.Event, 3);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.setEventsList = function(e4) {
        return r2.Message.setRepeatedWrapperField(this, 3, e4);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.addEvents = function(e4, t3) {
        return r2.Message.addToRepeatedWrapperField(this, 3, e4, proto.flow.entities.Event, t3);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.clearEventsList = function() {
        return this.setEventsList([]);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.prototype.getResultsList = function() {
        return r2.Message.getRepeatedWrapperField(this, proto.flow.execution.GetEventsForBlockIDsResponse.Result, 1);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.prototype.setResultsList = function(e4) {
        return r2.Message.setRepeatedWrapperField(this, 1, e4);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.prototype.addResults = function(e4, t3) {
        return r2.Message.addToRepeatedWrapperField(this, 1, e4, proto.flow.execution.GetEventsForBlockIDsResponse.Result, t3);
      }, proto.flow.execution.GetEventsForBlockIDsResponse.prototype.clearResultsList = function() {
        return this.setResultsList([]);
      }, proto.flow.execution.GetEventsForBlockIDsRequest.repeatedFields_ = [2], r2.Message.GENERATE_TO_OBJECT && (proto.flow.execution.GetEventsForBlockIDsRequest.prototype.toObject = function(e4) {
        return proto.flow.execution.GetEventsForBlockIDsRequest.toObject(e4, this);
      }, proto.flow.execution.GetEventsForBlockIDsRequest.toObject = function(e4, t3) {
        var o2 = { type: r2.Message.getFieldWithDefault(t3, 1, ""), blockIdsList: t3.getBlockIdsList_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.execution.GetEventsForBlockIDsRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.execution.GetEventsForBlockIDsRequest();
        return proto.flow.execution.GetEventsForBlockIDsRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.execution.GetEventsForBlockIDsRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readString();
              e4.setType(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.addBlockIds(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.execution.GetEventsForBlockIDsRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.execution.GetEventsForBlockIDsRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.execution.GetEventsForBlockIDsRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getType()).length > 0 && t3.writeString(1, o2), (o2 = e4.getBlockIdsList_asU8()).length > 0 && t3.writeRepeatedBytes(2, o2);
      }, proto.flow.execution.GetEventsForBlockIDsRequest.prototype.getType = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.execution.GetEventsForBlockIDsRequest.prototype.setType = function(e4) {
        return r2.Message.setProto3StringField(this, 1, e4);
      }, proto.flow.execution.GetEventsForBlockIDsRequest.prototype.getBlockIdsList = function() {
        return r2.Message.getRepeatedField(this, 2);
      }, proto.flow.execution.GetEventsForBlockIDsRequest.prototype.getBlockIdsList_asB64 = function() {
        return r2.Message.bytesListAsB64(this.getBlockIdsList());
      }, proto.flow.execution.GetEventsForBlockIDsRequest.prototype.getBlockIdsList_asU8 = function() {
        return r2.Message.bytesListAsU8(this.getBlockIdsList());
      }, proto.flow.execution.GetEventsForBlockIDsRequest.prototype.setBlockIdsList = function(e4) {
        return r2.Message.setField(this, 2, e4 || []);
      }, proto.flow.execution.GetEventsForBlockIDsRequest.prototype.addBlockIds = function(e4, t3) {
        return r2.Message.addToRepeatedField(this, 2, e4, t3);
      }, proto.flow.execution.GetEventsForBlockIDsRequest.prototype.clearBlockIdsList = function() {
        return this.setBlockIdsList([]);
      }, r2.Message.GENERATE_TO_OBJECT && (proto.flow.execution.GetTransactionResultRequest.prototype.toObject = function(e4) {
        return proto.flow.execution.GetTransactionResultRequest.toObject(e4, this);
      }, proto.flow.execution.GetTransactionResultRequest.toObject = function(e4, t3) {
        var o2 = { blockId: t3.getBlockId_asB64(), transactionId: t3.getTransactionId_asB64() };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.execution.GetTransactionResultRequest.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.execution.GetTransactionResultRequest();
        return proto.flow.execution.GetTransactionResultRequest.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.execution.GetTransactionResultRequest.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readBytes();
              e4.setBlockId(o2);
              break;
            case 2:
              o2 = t3.readBytes();
              e4.setTransactionId(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.execution.GetTransactionResultRequest.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.execution.GetTransactionResultRequest.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.execution.GetTransactionResultRequest.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getBlockId_asU8()).length > 0 && t3.writeBytes(1, o2), (o2 = e4.getTransactionId_asU8()).length > 0 && t3.writeBytes(2, o2);
      }, proto.flow.execution.GetTransactionResultRequest.prototype.getBlockId = function() {
        return r2.Message.getFieldWithDefault(this, 1, "");
      }, proto.flow.execution.GetTransactionResultRequest.prototype.getBlockId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getBlockId());
      }, proto.flow.execution.GetTransactionResultRequest.prototype.getBlockId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getBlockId());
      }, proto.flow.execution.GetTransactionResultRequest.prototype.setBlockId = function(e4) {
        return r2.Message.setProto3BytesField(this, 1, e4);
      }, proto.flow.execution.GetTransactionResultRequest.prototype.getTransactionId = function() {
        return r2.Message.getFieldWithDefault(this, 2, "");
      }, proto.flow.execution.GetTransactionResultRequest.prototype.getTransactionId_asB64 = function() {
        return r2.Message.bytesAsB64(this.getTransactionId());
      }, proto.flow.execution.GetTransactionResultRequest.prototype.getTransactionId_asU8 = function() {
        return r2.Message.bytesAsU8(this.getTransactionId());
      }, proto.flow.execution.GetTransactionResultRequest.prototype.setTransactionId = function(e4) {
        return r2.Message.setProto3BytesField(this, 2, e4);
      }, proto.flow.execution.GetTransactionResultResponse.repeatedFields_ = [3], r2.Message.GENERATE_TO_OBJECT && (proto.flow.execution.GetTransactionResultResponse.prototype.toObject = function(e4) {
        return proto.flow.execution.GetTransactionResultResponse.toObject(e4, this);
      }, proto.flow.execution.GetTransactionResultResponse.toObject = function(e4, t3) {
        var o2 = { statusCode: r2.Message.getFieldWithDefault(t3, 1, 0), errorMessage: r2.Message.getFieldWithDefault(t3, 2, ""), eventsList: r2.Message.toObjectList(t3.getEventsList(), a2.Event.toObject, e4) };
        return e4 && (o2.$jspbMessageInstance = t3), o2;
      }), proto.flow.execution.GetTransactionResultResponse.deserializeBinary = function(e4) {
        var t3 = new r2.BinaryReader(e4), o2 = new proto.flow.execution.GetTransactionResultResponse();
        return proto.flow.execution.GetTransactionResultResponse.deserializeBinaryFromReader(o2, t3);
      }, proto.flow.execution.GetTransactionResultResponse.deserializeBinaryFromReader = function(e4, t3) {
        for (; t3.nextField() && !t3.isEndGroup(); ) {
          switch (t3.getFieldNumber()) {
            case 1:
              var o2 = t3.readUint32();
              e4.setStatusCode(o2);
              break;
            case 2:
              o2 = t3.readString();
              e4.setErrorMessage(o2);
              break;
            case 3:
              o2 = new a2.Event();
              t3.readMessage(o2, a2.Event.deserializeBinaryFromReader), e4.addEvents(o2);
              break;
            default:
              t3.skipField();
          }
        }
        return e4;
      }, proto.flow.execution.GetTransactionResultResponse.prototype.serializeBinary = function() {
        var e4 = new r2.BinaryWriter();
        return proto.flow.execution.GetTransactionResultResponse.serializeBinaryToWriter(this, e4), e4.getResultBuffer();
      }, proto.flow.execution.GetTransactionResultResponse.serializeBinaryToWriter = function(e4, t3) {
        var o2 = void 0;
        (o2 = e4.getStatusCode()) !== 0 && t3.writeUint32(1, o2), (o2 = e4.getErrorMessage()).length > 0 && t3.writeString(2, o2), (o2 = e4.getEventsList()).length > 0 && t3.writeRepeatedMessage(3, o2, a2.Event.serializeBinaryToWriter);
      }, proto.flow.execution.GetTransactionResultResponse.prototype.getStatusCode = function() {
        return r2.Message.getFieldWithDefault(this, 1, 0);
      }, proto.flow.execution.GetTransactionResultResponse.prototype.setStatusCode = function(e4) {
        return r2.Message.setProto3IntField(this, 1, e4);
      }, proto.flow.execution.GetTransactionResultResponse.prototype.getErrorMessage = function() {
        return r2.Message.getFieldWithDefault(this, 2, "");
      }, proto.flow.execution.GetTransactionResultResponse.prototype.setErrorMessage = function(e4) {
        return r2.Message.setProto3StringField(this, 2, e4);
      }, proto.flow.execution.GetTransactionResultResponse.prototype.getEventsList = function() {
        return r2.Message.getRepeatedWrapperField(this, a2.Event, 3);
      }, proto.flow.execution.GetTransactionResultResponse.prototype.setEventsList = function(e4) {
        return r2.Message.setRepeatedWrapperField(this, 3, e4);
      }, proto.flow.execution.GetTransactionResultResponse.prototype.addEvents = function(e4, t3) {
        return r2.Message.addToRepeatedWrapperField(this, 3, e4, proto.flow.entities.Event, t3);
      }, proto.flow.execution.GetTransactionResultResponse.prototype.clearEventsList = function() {
        return this.setEventsList([]);
      }, s3.object.extend(t2, proto.flow.execution);
    }, function(e3, t2, o) {
      var r2 = o(4), s3 = o(12).grpc, n = function() {
        function e4() {
        }
        return e4.serviceName = "flow.access.AccessAPI", e4;
      }();
      function i2(e4, t3) {
        this.serviceHost = e4, this.options = t3 || {};
      }
      n.Ping = { methodName: "Ping", service: n, requestStream: false, responseStream: false, requestType: r2.PingRequest, responseType: r2.PingResponse }, n.GetLatestBlockHeader = { methodName: "GetLatestBlockHeader", service: n, requestStream: false, responseStream: false, requestType: r2.GetLatestBlockHeaderRequest, responseType: r2.BlockHeaderResponse }, n.GetBlockHeaderByID = { methodName: "GetBlockHeaderByID", service: n, requestStream: false, responseStream: false, requestType: r2.GetBlockHeaderByIDRequest, responseType: r2.BlockHeaderResponse }, n.GetBlockHeaderByHeight = { methodName: "GetBlockHeaderByHeight", service: n, requestStream: false, responseStream: false, requestType: r2.GetBlockHeaderByHeightRequest, responseType: r2.BlockHeaderResponse }, n.GetLatestBlock = { methodName: "GetLatestBlock", service: n, requestStream: false, responseStream: false, requestType: r2.GetLatestBlockRequest, responseType: r2.BlockResponse }, n.GetBlockByID = { methodName: "GetBlockByID", service: n, requestStream: false, responseStream: false, requestType: r2.GetBlockByIDRequest, responseType: r2.BlockResponse }, n.GetBlockByHeight = { methodName: "GetBlockByHeight", service: n, requestStream: false, responseStream: false, requestType: r2.GetBlockByHeightRequest, responseType: r2.BlockResponse }, n.GetCollectionByID = { methodName: "GetCollectionByID", service: n, requestStream: false, responseStream: false, requestType: r2.GetCollectionByIDRequest, responseType: r2.CollectionResponse }, n.SendTransaction = { methodName: "SendTransaction", service: n, requestStream: false, responseStream: false, requestType: r2.SendTransactionRequest, responseType: r2.SendTransactionResponse }, n.GetTransaction = { methodName: "GetTransaction", service: n, requestStream: false, responseStream: false, requestType: r2.GetTransactionRequest, responseType: r2.TransactionResponse }, n.GetTransactionResult = { methodName: "GetTransactionResult", service: n, requestStream: false, responseStream: false, requestType: r2.GetTransactionRequest, responseType: r2.TransactionResultResponse }, n.GetAccount = { methodName: "GetAccount", service: n, requestStream: false, responseStream: false, requestType: r2.GetAccountRequest, responseType: r2.GetAccountResponse }, n.GetAccountAtLatestBlock = { methodName: "GetAccountAtLatestBlock", service: n, requestStream: false, responseStream: false, requestType: r2.GetAccountAtLatestBlockRequest, responseType: r2.AccountResponse }, n.GetAccountAtBlockHeight = { methodName: "GetAccountAtBlockHeight", service: n, requestStream: false, responseStream: false, requestType: r2.GetAccountAtBlockHeightRequest, responseType: r2.AccountResponse }, n.ExecuteScriptAtLatestBlock = { methodName: "ExecuteScriptAtLatestBlock", service: n, requestStream: false, responseStream: false, requestType: r2.ExecuteScriptAtLatestBlockRequest, responseType: r2.ExecuteScriptResponse }, n.ExecuteScriptAtBlockID = { methodName: "ExecuteScriptAtBlockID", service: n, requestStream: false, responseStream: false, requestType: r2.ExecuteScriptAtBlockIDRequest, responseType: r2.ExecuteScriptResponse }, n.ExecuteScriptAtBlockHeight = { methodName: "ExecuteScriptAtBlockHeight", service: n, requestStream: false, responseStream: false, requestType: r2.ExecuteScriptAtBlockHeightRequest, responseType: r2.ExecuteScriptResponse }, n.GetEventsForHeightRange = { methodName: "GetEventsForHeightRange", service: n, requestStream: false, responseStream: false, requestType: r2.GetEventsForHeightRangeRequest, responseType: r2.EventsResponse }, n.GetEventsForBlockIDs = { methodName: "GetEventsForBlockIDs", service: n, requestStream: false, responseStream: false, requestType: r2.GetEventsForBlockIDsRequest, responseType: r2.EventsResponse }, n.GetNetworkParameters = { methodName: "GetNetworkParameters", service: n, requestStream: false, responseStream: false, requestType: r2.GetNetworkParametersRequest, responseType: r2.GetNetworkParametersResponse }, t2.AccessAPI = n, i2.prototype.ping = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.Ping, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getLatestBlockHeader = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetLatestBlockHeader, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getBlockHeaderByID = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetBlockHeaderByID, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getBlockHeaderByHeight = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetBlockHeaderByHeight, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getLatestBlock = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetLatestBlock, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getBlockByID = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetBlockByID, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getBlockByHeight = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetBlockByHeight, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getCollectionByID = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetCollectionByID, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.sendTransaction = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.SendTransaction, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getTransaction = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetTransaction, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getTransactionResult = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetTransactionResult, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getAccount = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetAccount, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getAccountAtLatestBlock = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetAccountAtLatestBlock, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getAccountAtBlockHeight = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetAccountAtBlockHeight, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.executeScriptAtLatestBlock = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.ExecuteScriptAtLatestBlock, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.executeScriptAtBlockID = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.ExecuteScriptAtBlockID, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.executeScriptAtBlockHeight = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.ExecuteScriptAtBlockHeight, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getEventsForHeightRange = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetEventsForHeightRange, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getEventsForBlockIDs = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetEventsForBlockIDs, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getNetworkParameters = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetNetworkParameters, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, t2.AccessAPIClient = i2;
    }, function(e3, t2) {
      !function(e4, t3) {
        for (var o in t3)
          e4[o] = t3[o];
      }(t2, function(e4) {
        var t3 = {};
        function o(r2) {
          if (t3[r2])
            return t3[r2].exports;
          var s3 = t3[r2] = { i: r2, l: false, exports: {} };
          return e4[r2].call(s3.exports, s3, s3.exports, o), s3.l = true, s3.exports;
        }
        return o.m = e4, o.c = t3, o.d = function(e5, t4, r2) {
          o.o(e5, t4) || Object.defineProperty(e5, t4, { enumerable: true, get: r2 });
        }, o.r = function(e5) {
          typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e5, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e5, "__esModule", { value: true });
        }, o.t = function(e5, t4) {
          if (1 & t4 && (e5 = o(e5)), 8 & t4)
            return e5;
          if (4 & t4 && typeof e5 == "object" && e5 && e5.__esModule)
            return e5;
          var r2 = Object.create(null);
          if (o.r(r2), Object.defineProperty(r2, "default", { enumerable: true, value: e5 }), 2 & t4 && typeof e5 != "string")
            for (var s3 in e5)
              o.d(r2, s3, function(t5) {
                return e5[t5];
              }.bind(null, s3));
          return r2;
        }, o.n = function(e5) {
          var t4 = e5 && e5.__esModule ? function() {
            return e5.default;
          } : function() {
            return e5;
          };
          return o.d(t4, "a", t4), t4;
        }, o.o = function(e5, t4) {
          return Object.prototype.hasOwnProperty.call(e5, t4);
        }, o.p = "", o(o.s = 11);
      }([function(e4, t3, o) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r2 = o(4);
        t3.Metadata = r2.BrowserHeaders;
      }, function(e4, t3, o) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.debug = function() {
          for (var e5 = [], t4 = 0; t4 < arguments.length; t4++)
            e5[t4] = arguments[t4];
          console.debug ? console.debug.apply(null, e5) : console.log.apply(null, e5);
        };
      }, function(e4, t3, o) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r2 = null;
        t3.default = function(e5) {
          r2 === null ? (r2 = [e5], setTimeout(function() {
            !function e6() {
              if (r2) {
                var t4 = r2;
                r2 = null;
                for (var o2 = 0; o2 < t4.length; o2++)
                  try {
                    t4[o2]();
                  } catch (n) {
                    r2 === null && (r2 = [], setTimeout(function() {
                      e6();
                    }, 0));
                    for (var s3 = t4.length - 1; s3 > o2; s3--)
                      r2.unshift(t4[s3]);
                    throw n;
                  }
              }
            }();
          }, 0)) : r2.push(e5);
        };
      }, function(e4, t3, o) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r2 = o(0), s3 = o(9), n = o(10), i2 = o(1), a2 = o(2), g = o(5), l = o(15);
        t3.client = function(e5, t4) {
          return new c2(e5, t4);
        };
        var c2 = function() {
          function e5(e6, t4) {
            this.started = false, this.sentFirstMessage = false, this.completed = false, this.closed = false, this.finishedSending = false, this.onHeadersCallbacks = [], this.onMessageCallbacks = [], this.onEndCallbacks = [], this.parser = new s3.ChunkParser(), this.methodDefinition = e6, this.props = t4, this.createTransport();
          }
          return e5.prototype.createTransport = function() {
            var e6 = this.props.host + "/" + this.methodDefinition.service.serviceName + "/" + this.methodDefinition.methodName, t4 = { methodDefinition: this.methodDefinition, debug: this.props.debug || false, url: e6, onHeaders: this.onTransportHeaders.bind(this), onChunk: this.onTransportChunk.bind(this), onEnd: this.onTransportEnd.bind(this) };
            this.props.transport ? this.transport = this.props.transport(t4) : this.transport = g.makeDefaultTransport(t4);
          }, e5.prototype.onTransportHeaders = function(e6, t4) {
            if (this.props.debug && i2.debug("onHeaders", e6, t4), this.closed)
              this.props.debug && i2.debug("grpc.onHeaders received after request was closed - ignoring");
            else if (t4 === 0)
              ;
            else {
              this.responseHeaders = e6, this.props.debug && i2.debug("onHeaders.responseHeaders", JSON.stringify(this.responseHeaders, null, 2));
              var o2 = u(e6);
              this.props.debug && i2.debug("onHeaders.gRPCStatus", o2);
              var r3 = o2 && o2 >= 0 ? o2 : n.httpStatusToCode(t4);
              this.props.debug && i2.debug("onHeaders.code", r3);
              var s4 = e6.get("grpc-message") || [];
              if (this.props.debug && i2.debug("onHeaders.gRPCMessage", s4), this.rawOnHeaders(e6), r3 !== n.Code.OK) {
                var a3 = this.decodeGRPCStatus(s4[0]);
                this.rawOnError(r3, a3, e6);
              }
            }
          }, e5.prototype.onTransportChunk = function(e6) {
            var t4 = this;
            if (this.closed)
              this.props.debug && i2.debug("grpc.onChunk received after request was closed - ignoring");
            else {
              var o2 = [];
              try {
                o2 = this.parser.parse(e6);
              } catch (e7) {
                return this.props.debug && i2.debug("onChunk.parsing error", e7, e7.message), void this.rawOnError(n.Code.Internal, "parsing error: " + e7.message);
              }
              o2.forEach(function(e7) {
                if (e7.chunkType === s3.ChunkType.MESSAGE) {
                  var o3 = t4.methodDefinition.responseType.deserializeBinary(e7.data);
                  t4.rawOnMessage(o3);
                } else
                  e7.chunkType === s3.ChunkType.TRAILERS && (t4.responseHeaders ? (t4.responseTrailers = new r2.Metadata(e7.trailers), t4.props.debug && i2.debug("onChunk.trailers", t4.responseTrailers)) : (t4.responseHeaders = new r2.Metadata(e7.trailers), t4.rawOnHeaders(t4.responseHeaders)));
              });
            }
          }, e5.prototype.onTransportEnd = function() {
            if (this.props.debug && i2.debug("grpc.onEnd"), this.closed)
              this.props.debug && i2.debug("grpc.onEnd received after request was closed - ignoring");
            else if (this.responseTrailers !== void 0) {
              var e6 = u(this.responseTrailers);
              if (e6 !== null) {
                var t4 = this.responseTrailers.get("grpc-message"), o2 = this.decodeGRPCStatus(t4[0]);
                this.rawOnEnd(e6, o2, this.responseTrailers);
              } else
                this.rawOnError(n.Code.Internal, "Response closed without grpc-status (Trailers provided)");
            } else {
              if (this.responseHeaders === void 0)
                return void this.rawOnError(n.Code.Unknown, "Response closed without headers");
              var r3 = u(this.responseHeaders), s4 = this.responseHeaders.get("grpc-message");
              if (this.props.debug && i2.debug("grpc.headers only response ", r3, s4), r3 === null)
                return void this.rawOnEnd(n.Code.Unknown, "Response closed without grpc-status (Headers only)", this.responseHeaders);
              var a3 = this.decodeGRPCStatus(s4[0]);
              this.rawOnEnd(r3, a3, this.responseHeaders);
            }
          }, e5.prototype.decodeGRPCStatus = function(e6) {
            if (!e6)
              return "";
            try {
              return decodeURIComponent(e6);
            } catch (t4) {
              return e6;
            }
          }, e5.prototype.rawOnEnd = function(e6, t4, o2) {
            var r3 = this;
            this.props.debug && i2.debug("rawOnEnd", e6, t4, o2), this.completed || (this.completed = true, this.onEndCallbacks.forEach(function(s4) {
              a2.default(function() {
                r3.closed || s4(e6, t4, o2);
              });
            }));
          }, e5.prototype.rawOnHeaders = function(e6) {
            this.props.debug && i2.debug("rawOnHeaders", e6), this.completed || this.onHeadersCallbacks.forEach(function(t4) {
              a2.default(function() {
                t4(e6);
              });
            });
          }, e5.prototype.rawOnError = function(e6, t4, o2) {
            var s4 = this;
            o2 === void 0 && (o2 = new r2.Metadata()), this.props.debug && i2.debug("rawOnError", e6, t4), this.completed || (this.completed = true, this.onEndCallbacks.forEach(function(r3) {
              a2.default(function() {
                s4.closed || r3(e6, t4, o2);
              });
            }));
          }, e5.prototype.rawOnMessage = function(e6) {
            var t4 = this;
            this.props.debug && i2.debug("rawOnMessage", e6.toObject()), this.completed || this.closed || this.onMessageCallbacks.forEach(function(o2) {
              a2.default(function() {
                t4.closed || o2(e6);
              });
            });
          }, e5.prototype.onHeaders = function(e6) {
            this.onHeadersCallbacks.push(e6);
          }, e5.prototype.onMessage = function(e6) {
            this.onMessageCallbacks.push(e6);
          }, e5.prototype.onEnd = function(e6) {
            this.onEndCallbacks.push(e6);
          }, e5.prototype.start = function(e6) {
            if (this.started)
              throw new Error("Client already started - cannot .start()");
            this.started = true;
            var t4 = new r2.Metadata(e6 || {});
            t4.set("content-type", "application/grpc-web+proto"), t4.set("x-grpc-web", "1"), this.transport.start(t4);
          }, e5.prototype.send = function(e6) {
            if (!this.started)
              throw new Error("Client not started - .start() must be called before .send()");
            if (this.closed)
              throw new Error("Client already closed - cannot .send()");
            if (this.finishedSending)
              throw new Error("Client already finished sending - cannot .send()");
            if (!this.methodDefinition.requestStream && this.sentFirstMessage)
              throw new Error("Message already sent for non-client-streaming method - cannot .send()");
            this.sentFirstMessage = true;
            var t4 = l.frameRequest(e6);
            this.transport.sendMessage(t4);
          }, e5.prototype.finishSend = function() {
            if (!this.started)
              throw new Error("Client not started - .finishSend() must be called before .close()");
            if (this.closed)
              throw new Error("Client already closed - cannot .send()");
            if (this.finishedSending)
              throw new Error("Client already finished sending - cannot .finishSend()");
            this.finishedSending = true, this.transport.finishSend();
          }, e5.prototype.close = function() {
            if (!this.started)
              throw new Error("Client not started - .start() must be called before .close()");
            if (this.closed)
              throw new Error("Client already closed - cannot .close()");
            this.closed = true, this.props.debug && i2.debug("request.abort aborting request"), this.transport.cancel();
          }, e5;
        }();
        function u(e5) {
          var t4 = e5.get("grpc-status") || [];
          if (t4.length > 0)
            try {
              var o2 = t4[0];
              return parseInt(o2, 10);
            } catch (e6) {
              return null;
            }
          return null;
        }
      }, function(e4, t3, o) {
        var r2;
        r2 = function() {
          return function(e5) {
            var t4 = {};
            function o2(r3) {
              if (t4[r3])
                return t4[r3].exports;
              var s3 = t4[r3] = { i: r3, l: false, exports: {} };
              return e5[r3].call(s3.exports, s3, s3.exports, o2), s3.l = true, s3.exports;
            }
            return o2.m = e5, o2.c = t4, o2.i = function(e6) {
              return e6;
            }, o2.d = function(e6, t5, r3) {
              o2.o(e6, t5) || Object.defineProperty(e6, t5, { configurable: false, enumerable: true, get: r3 });
            }, o2.n = function(e6) {
              var t5 = e6 && e6.__esModule ? function() {
                return e6.default;
              } : function() {
                return e6;
              };
              return o2.d(t5, "a", t5), t5;
            }, o2.o = function(e6, t5) {
              return Object.prototype.hasOwnProperty.call(e6, t5);
            }, o2.p = "", o2(o2.s = 1);
          }([function(e5, t4, o2) {
            "use strict";
            Object.defineProperty(t4, "__esModule", { value: true });
            var r3 = o2(3), s3 = function() {
              function e6(e7, t5) {
                e7 === void 0 && (e7 = {}), t5 === void 0 && (t5 = { splitValues: false });
                var o3, s4 = this;
                this.headersMap = {}, e7 && (typeof Headers != "undefined" && e7 instanceof Headers ? r3.getHeaderKeys(e7).forEach(function(o4) {
                  r3.getHeaderValues(e7, o4).forEach(function(e8) {
                    t5.splitValues ? s4.append(o4, r3.splitHeaderValue(e8)) : s4.append(o4, e8);
                  });
                }) : typeof (o3 = e7) == "object" && typeof o3.headersMap == "object" && typeof o3.forEach == "function" ? e7.forEach(function(e8, t6) {
                  s4.append(e8, t6);
                }) : typeof Map != "undefined" && e7 instanceof Map ? e7.forEach(function(e8, t6) {
                  s4.append(t6, e8);
                }) : typeof e7 == "string" ? this.appendFromString(e7) : typeof e7 == "object" && Object.getOwnPropertyNames(e7).forEach(function(t6) {
                  var o4 = e7[t6];
                  Array.isArray(o4) ? o4.forEach(function(e8) {
                    s4.append(t6, e8);
                  }) : s4.append(t6, o4);
                }));
              }
              return e6.prototype.appendFromString = function(e7) {
                for (var t5 = e7.split("\r\n"), o3 = 0; o3 < t5.length; o3++) {
                  var r4 = t5[o3], s4 = r4.indexOf(":");
                  if (s4 > 0) {
                    var n = r4.substring(0, s4).trim(), i2 = r4.substring(s4 + 1).trim();
                    this.append(n, i2);
                  }
                }
              }, e6.prototype.delete = function(e7, t5) {
                var o3 = r3.normalizeName(e7);
                if (t5 === void 0)
                  delete this.headersMap[o3];
                else {
                  var s4 = this.headersMap[o3];
                  if (s4) {
                    var n = s4.indexOf(t5);
                    n >= 0 && s4.splice(n, 1), s4.length === 0 && delete this.headersMap[o3];
                  }
                }
              }, e6.prototype.append = function(e7, t5) {
                var o3 = this, s4 = r3.normalizeName(e7);
                Array.isArray(this.headersMap[s4]) || (this.headersMap[s4] = []), Array.isArray(t5) ? t5.forEach(function(e8) {
                  o3.headersMap[s4].push(r3.normalizeValue(e8));
                }) : this.headersMap[s4].push(r3.normalizeValue(t5));
              }, e6.prototype.set = function(e7, t5) {
                var o3 = r3.normalizeName(e7);
                if (Array.isArray(t5)) {
                  var s4 = [];
                  t5.forEach(function(e8) {
                    s4.push(r3.normalizeValue(e8));
                  }), this.headersMap[o3] = s4;
                } else
                  this.headersMap[o3] = [r3.normalizeValue(t5)];
              }, e6.prototype.has = function(e7, t5) {
                var o3 = this.headersMap[r3.normalizeName(e7)];
                if (!Array.isArray(o3))
                  return false;
                if (t5 !== void 0) {
                  var s4 = r3.normalizeValue(t5);
                  return o3.indexOf(s4) >= 0;
                }
                return true;
              }, e6.prototype.get = function(e7) {
                var t5 = this.headersMap[r3.normalizeName(e7)];
                return t5 !== void 0 ? t5.concat() : [];
              }, e6.prototype.forEach = function(e7) {
                var t5 = this;
                Object.getOwnPropertyNames(this.headersMap).forEach(function(o3) {
                  e7(o3, t5.headersMap[o3]);
                }, this);
              }, e6.prototype.toHeaders = function() {
                if (typeof Headers != "undefined") {
                  var e7 = new Headers();
                  return this.forEach(function(t5, o3) {
                    o3.forEach(function(o4) {
                      e7.append(t5, o4);
                    });
                  }), e7;
                }
                throw new Error("Headers class is not defined");
              }, e6;
            }();
            t4.BrowserHeaders = s3;
          }, function(e5, t4, o2) {
            "use strict";
            Object.defineProperty(t4, "__esModule", { value: true });
            var r3 = o2(0);
            t4.BrowserHeaders = r3.BrowserHeaders;
          }, function(e5, t4, o2) {
            "use strict";
            Object.defineProperty(t4, "__esModule", { value: true }), t4.iterateHeaders = function(e6, t5) {
              for (var o3 = e6[Symbol.iterator](), r3 = o3.next(); !r3.done; )
                t5(r3.value[0]), r3 = o3.next();
            }, t4.iterateHeadersKeys = function(e6, t5) {
              for (var o3 = e6.keys(), r3 = o3.next(); !r3.done; )
                t5(r3.value), r3 = o3.next();
            };
          }, function(e5, t4, o2) {
            "use strict";
            Object.defineProperty(t4, "__esModule", { value: true });
            var r3 = o2(2);
            t4.normalizeName = function(e6) {
              if (typeof e6 != "string" && (e6 = String(e6)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e6))
                throw new TypeError("Invalid character in header field name");
              return e6.toLowerCase();
            }, t4.normalizeValue = function(e6) {
              return typeof e6 != "string" && (e6 = String(e6)), e6;
            }, t4.getHeaderValues = function(e6, t5) {
              var o3 = e6;
              if (o3 instanceof Headers && o3.getAll)
                return o3.getAll(t5);
              var r4 = o3.get(t5);
              return r4 && typeof r4 == "string" ? [r4] : r4;
            }, t4.getHeaderKeys = function(e6) {
              var t5 = e6, o3 = {}, s3 = [];
              return t5.keys ? r3.iterateHeadersKeys(t5, function(e7) {
                o3[e7] || (o3[e7] = true, s3.push(e7));
              }) : t5.forEach ? t5.forEach(function(e7, t6) {
                o3[t6] || (o3[t6] = true, s3.push(t6));
              }) : r3.iterateHeaders(t5, function(e7) {
                var t6 = e7[0];
                o3[t6] || (o3[t6] = true, s3.push(t6));
              }), s3;
            }, t4.splitHeaderValue = function(e6) {
              var t5 = [];
              return e6.split(", ").forEach(function(e7) {
                e7.split(",").forEach(function(e8) {
                  t5.push(e8);
                });
              }), t5;
            };
          }]);
        }, e4.exports = r2();
      }, function(e4, t3, o) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r2 = o(6), s3 = function(e5) {
          return r2.CrossBrowserHttpTransport({ withCredentials: false })(e5);
        };
        t3.setDefaultTransportFactory = function(e5) {
          s3 = e5;
        }, t3.makeDefaultTransport = function(e5) {
          return s3(e5);
        };
      }, function(e4, t3, o) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r2 = o(7), s3 = o(8);
        t3.CrossBrowserHttpTransport = function(e5) {
          if (r2.detectFetchSupport()) {
            var t4 = { credentials: e5.withCredentials ? "include" : "same-origin" };
            return r2.FetchReadableStreamTransport(t4);
          }
          return s3.XhrTransport({ withCredentials: e5.withCredentials });
        };
      }, function(e4, t3, o) {
        "use strict";
        var r2 = this && this.__assign || function() {
          return (r2 = Object.assign || function(e5) {
            for (var t4, o2 = 1, r3 = arguments.length; o2 < r3; o2++)
              for (var s4 in t4 = arguments[o2])
                Object.prototype.hasOwnProperty.call(t4, s4) && (e5[s4] = t4[s4]);
            return e5;
          }).apply(this, arguments);
        };
        Object.defineProperty(t3, "__esModule", { value: true });
        var s3 = o(0), n = o(1), i2 = o(2);
        t3.FetchReadableStreamTransport = function(e5) {
          return function(t4) {
            return function(e6, t5) {
              return e6.debug && n.debug("fetchRequest", e6), new a2(e6, t5);
            }(t4, e5);
          };
        };
        var a2 = function() {
          function e5(e6, t4) {
            this.cancelled = false, this.controller = self.AbortController && new AbortController(), this.options = e6, this.init = t4;
          }
          return e5.prototype.pump = function(e6, t4) {
            var o2 = this;
            if (this.reader = e6, this.cancelled)
              return this.options.debug && n.debug("Fetch.pump.cancel at first pump"), void this.reader.cancel();
            this.reader.read().then(function(e7) {
              if (e7.done)
                return i2.default(function() {
                  o2.options.onEnd();
                }), t4;
              i2.default(function() {
                o2.options.onChunk(e7.value);
              }), o2.pump(o2.reader, t4);
            }).catch(function(e7) {
              o2.cancelled ? o2.options.debug && n.debug("Fetch.catch - request cancelled") : (o2.cancelled = true, o2.options.debug && n.debug("Fetch.catch", e7.message), i2.default(function() {
                o2.options.onEnd(e7);
              }));
            });
          }, e5.prototype.send = function(e6) {
            var t4 = this;
            fetch(this.options.url, r2({}, this.init, { headers: this.metadata.toHeaders(), method: "POST", body: e6, signal: this.controller && this.controller.signal })).then(function(e7) {
              if (t4.options.debug && n.debug("Fetch.response", e7), i2.default(function() {
                t4.options.onHeaders(new s3.Metadata(e7.headers), e7.status);
              }), !e7.body)
                return e7;
              t4.pump(e7.body.getReader(), e7);
            }).catch(function(e7) {
              t4.cancelled ? t4.options.debug && n.debug("Fetch.catch - request cancelled") : (t4.cancelled = true, t4.options.debug && n.debug("Fetch.catch", e7.message), i2.default(function() {
                t4.options.onEnd(e7);
              }));
            });
          }, e5.prototype.sendMessage = function(e6) {
            this.send(e6);
          }, e5.prototype.finishSend = function() {
          }, e5.prototype.start = function(e6) {
            this.metadata = e6;
          }, e5.prototype.cancel = function() {
            this.cancelled ? this.options.debug && n.debug("Fetch.abort.cancel already cancelled") : (this.cancelled = true, this.reader ? (this.options.debug && n.debug("Fetch.abort.cancel"), this.reader.cancel()) : this.options.debug && n.debug("Fetch.abort.cancel before reader"), this.controller && this.controller.abort());
          }, e5;
        }();
        t3.detectFetchSupport = function() {
          return typeof Response != "undefined" && Response.prototype.hasOwnProperty("body") && typeof Headers == "function";
        };
      }, function(e4, t3, o) {
        "use strict";
        var r2, s3 = this && this.__extends || (r2 = function(e5, t4) {
          return (r2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e6, t5) {
            e6.__proto__ = t5;
          } || function(e6, t5) {
            for (var o2 in t5)
              t5.hasOwnProperty(o2) && (e6[o2] = t5[o2]);
          })(e5, t4);
        }, function(e5, t4) {
          function o2() {
            this.constructor = e5;
          }
          r2(e5, t4), e5.prototype = t4 === null ? Object.create(t4) : (o2.prototype = t4.prototype, new o2());
        });
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = o(0), i2 = o(1), a2 = o(2), g = o(12);
        t3.XhrTransport = function(e5) {
          return function(t4) {
            if (g.detectMozXHRSupport())
              return new c2(t4, e5);
            if (g.detectXHROverrideMimeTypeSupport())
              return new l(t4, e5);
            throw new Error("This environment's XHR implementation cannot support binary transfer.");
          };
        };
        var l = function() {
          function e5(e6, t4) {
            this.options = e6, this.init = t4;
          }
          return e5.prototype.onProgressEvent = function() {
            var e6 = this;
            this.options.debug && i2.debug("XHR.onProgressEvent.length: ", this.xhr.response.length);
            var t4 = this.xhr.response.substr(this.index);
            this.index = this.xhr.response.length;
            var o2 = p(t4);
            a2.default(function() {
              e6.options.onChunk(o2);
            });
          }, e5.prototype.onLoadEvent = function() {
            var e6 = this;
            this.options.debug && i2.debug("XHR.onLoadEvent"), a2.default(function() {
              e6.options.onEnd();
            });
          }, e5.prototype.onStateChange = function() {
            var e6 = this;
            this.options.debug && i2.debug("XHR.onStateChange", this.xhr.readyState), this.xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED && a2.default(function() {
              e6.options.onHeaders(new n.Metadata(e6.xhr.getAllResponseHeaders()), e6.xhr.status);
            });
          }, e5.prototype.sendMessage = function(e6) {
            this.xhr.send(e6);
          }, e5.prototype.finishSend = function() {
          }, e5.prototype.start = function(e6) {
            var t4 = this;
            this.metadata = e6;
            var o2 = new XMLHttpRequest();
            this.xhr = o2, o2.open("POST", this.options.url), this.configureXhr(), this.metadata.forEach(function(e7, t5) {
              o2.setRequestHeader(e7, t5.join(", "));
            }), o2.withCredentials = Boolean(this.init.withCredentials), o2.addEventListener("readystatechange", this.onStateChange.bind(this)), o2.addEventListener("progress", this.onProgressEvent.bind(this)), o2.addEventListener("loadend", this.onLoadEvent.bind(this)), o2.addEventListener("error", function(e7) {
              t4.options.debug && i2.debug("XHR.error", e7), a2.default(function() {
                t4.options.onEnd(e7.error);
              });
            });
          }, e5.prototype.configureXhr = function() {
            this.xhr.responseType = "text", this.xhr.overrideMimeType("text/plain; charset=x-user-defined");
          }, e5.prototype.cancel = function() {
            this.options.debug && i2.debug("XHR.abort"), this.xhr.abort();
          }, e5;
        }();
        t3.XHR = l;
        var c2 = function(e5) {
          function t4() {
            return e5 !== null && e5.apply(this, arguments) || this;
          }
          return s3(t4, e5), t4.prototype.configureXhr = function() {
            this.options.debug && i2.debug("MozXHR.configureXhr: setting responseType to 'moz-chunked-arraybuffer'"), this.xhr.responseType = "moz-chunked-arraybuffer";
          }, t4.prototype.onProgressEvent = function() {
            var e6 = this, t5 = this.xhr.response;
            this.options.debug && i2.debug("MozXHR.onProgressEvent: ", new Uint8Array(t5)), a2.default(function() {
              e6.options.onChunk(new Uint8Array(t5));
            });
          }, t4;
        }(l);
        function u(e5, t4) {
          var o2 = e5.charCodeAt(t4);
          if (o2 >= 55296 && o2 <= 56319) {
            var r3 = e5.charCodeAt(t4 + 1);
            r3 >= 56320 && r3 <= 57343 && (o2 = 65536 + (o2 - 55296 << 10) + (r3 - 56320));
          }
          return o2;
        }
        function p(e5) {
          for (var t4 = new Uint8Array(e5.length), o2 = 0, r3 = 0; r3 < e5.length; r3++) {
            var s4 = String.prototype.codePointAt ? e5.codePointAt(r3) : u(e5, r3);
            t4[o2++] = 255 & s4;
          }
          return t4;
        }
        t3.MozChunkedArrayBufferXHR = c2, t3.stringToArrayBuffer = p;
      }, function(e4, t3, o) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r2, s3 = o(0);
        function n(e5) {
          return function(e6) {
            return e6 === 9 || e6 === 10 || e6 === 13;
          }(e5) || e5 >= 32 && e5 <= 126;
        }
        function i2(e5) {
          for (var t4 = 0; t4 !== e5.length; ++t4)
            if (!n(e5[t4]))
              throw new Error("Metadata is not valid (printable) ASCII");
          return String.fromCharCode.apply(String, Array.prototype.slice.call(e5));
        }
        function a2(e5) {
          return (128 & e5.getUint8(0)) == 128;
        }
        function g(e5) {
          return e5.getUint32(1, false);
        }
        function l(e5, t4, o2) {
          return e5.byteLength - t4 >= o2;
        }
        function c2(e5, t4, o2) {
          if (e5.slice)
            return e5.slice(t4, o2);
          var r3 = e5.length;
          o2 !== void 0 && (r3 = o2);
          for (var s4 = new Uint8Array(r3 - t4), n2 = 0, i3 = t4; i3 < r3; i3++)
            s4[n2++] = e5[i3];
          return s4;
        }
        t3.decodeASCII = i2, t3.encodeASCII = function(e5) {
          for (var t4 = new Uint8Array(e5.length), o2 = 0; o2 !== e5.length; ++o2) {
            var r3 = e5.charCodeAt(o2);
            if (!n(r3))
              throw new Error("Metadata contains invalid ASCII");
            t4[o2] = r3;
          }
          return t4;
        }, function(e5) {
          e5[e5.MESSAGE = 1] = "MESSAGE", e5[e5.TRAILERS = 2] = "TRAILERS";
        }(r2 = t3.ChunkType || (t3.ChunkType = {}));
        var u = function() {
          function e5() {
            this.buffer = null, this.position = 0;
          }
          return e5.prototype.parse = function(e6, t4) {
            if (e6.length === 0 && t4)
              return [];
            var o2, n2 = [];
            if (this.buffer == null)
              this.buffer = e6, this.position = 0;
            else if (this.position === this.buffer.byteLength)
              this.buffer = e6, this.position = 0;
            else {
              var u2 = this.buffer.byteLength - this.position, p = new Uint8Array(u2 + e6.byteLength), d3 = c2(this.buffer, this.position);
              p.set(d3, 0);
              var f4 = new Uint8Array(e6);
              p.set(f4, u2), this.buffer = p, this.position = 0;
            }
            for (; ; ) {
              if (!l(this.buffer, this.position, 5))
                return n2;
              var h2 = c2(this.buffer, this.position, this.position + 5), y = new DataView(h2.buffer, h2.byteOffset, h2.byteLength), b2 = g(y);
              if (!l(this.buffer, this.position, 5 + b2))
                return n2;
              var m2 = c2(this.buffer, this.position + 5, this.position + 5 + b2);
              if (this.position += 5 + b2, a2(y))
                return n2.push({ chunkType: r2.TRAILERS, trailers: (o2 = m2, new s3.Metadata(i2(o2))) }), n2;
              n2.push({ chunkType: r2.MESSAGE, data: m2 });
            }
          }, e5;
        }();
        t3.ChunkParser = u;
      }, function(e4, t3, o) {
        "use strict";
        var r2;
        Object.defineProperty(t3, "__esModule", { value: true }), function(e5) {
          e5[e5.OK = 0] = "OK", e5[e5.Canceled = 1] = "Canceled", e5[e5.Unknown = 2] = "Unknown", e5[e5.InvalidArgument = 3] = "InvalidArgument", e5[e5.DeadlineExceeded = 4] = "DeadlineExceeded", e5[e5.NotFound = 5] = "NotFound", e5[e5.AlreadyExists = 6] = "AlreadyExists", e5[e5.PermissionDenied = 7] = "PermissionDenied", e5[e5.ResourceExhausted = 8] = "ResourceExhausted", e5[e5.FailedPrecondition = 9] = "FailedPrecondition", e5[e5.Aborted = 10] = "Aborted", e5[e5.OutOfRange = 11] = "OutOfRange", e5[e5.Unimplemented = 12] = "Unimplemented", e5[e5.Internal = 13] = "Internal", e5[e5.Unavailable = 14] = "Unavailable", e5[e5.DataLoss = 15] = "DataLoss", e5[e5.Unauthenticated = 16] = "Unauthenticated";
        }(r2 = t3.Code || (t3.Code = {})), t3.httpStatusToCode = function(e5) {
          switch (e5) {
            case 0:
              return r2.Internal;
            case 200:
              return r2.OK;
            case 400:
              return r2.InvalidArgument;
            case 401:
              return r2.Unauthenticated;
            case 403:
              return r2.PermissionDenied;
            case 404:
              return r2.NotFound;
            case 409:
              return r2.Aborted;
            case 412:
              return r2.FailedPrecondition;
            case 429:
              return r2.ResourceExhausted;
            case 499:
              return r2.Canceled;
            case 500:
              return r2.Unknown;
            case 501:
              return r2.Unimplemented;
            case 503:
              return r2.Unavailable;
            case 504:
              return r2.DeadlineExceeded;
            default:
              return r2.Unknown;
          }
        };
      }, function(e4, t3, o) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r2 = o(4), s3 = o(5), n = o(7), i2 = o(13), a2 = o(8), g = o(6), l = o(10), c2 = o(14), u = o(16), p = o(3);
        !function(e5) {
          e5.setDefaultTransport = s3.setDefaultTransportFactory, e5.CrossBrowserHttpTransport = g.CrossBrowserHttpTransport, e5.FetchReadableStreamTransport = n.FetchReadableStreamTransport, e5.XhrTransport = a2.XhrTransport, e5.WebsocketTransport = i2.WebsocketTransport, e5.Code = l.Code, e5.Metadata = r2.BrowserHeaders, e5.client = function(e6, t4) {
            return p.client(e6, t4);
          }, e5.invoke = c2.invoke, e5.unary = u.unary;
        }(t3.grpc || (t3.grpc = {}));
      }, function(e4, t3, o) {
        "use strict";
        var r2;
        function s3(e5) {
          var t4 = function() {
            if (r2 !== void 0)
              return r2;
            if (XMLHttpRequest) {
              r2 = new XMLHttpRequest();
              try {
                r2.open("GET", "https://localhost");
              } catch (e6) {
              }
            }
            return r2;
          }();
          if (!t4)
            return false;
          try {
            return t4.responseType = e5, t4.responseType === e5;
          } catch (e6) {
          }
          return false;
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.xhrSupportsResponseType = s3, t3.detectMozXHRSupport = function() {
          return typeof XMLHttpRequest != "undefined" && s3("moz-chunked-arraybuffer");
        }, t3.detectXHROverrideMimeTypeSupport = function() {
          return typeof XMLHttpRequest != "undefined" && XMLHttpRequest.prototype.hasOwnProperty("overrideMimeType");
        };
      }, function(e4, t3, o) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r2, s3 = o(1), n = o(2), i2 = o(9);
        !function(e5) {
          e5[e5.FINISH_SEND = 1] = "FINISH_SEND";
        }(r2 || (r2 = {}));
        var a2 = new Uint8Array([1]);
        t3.WebsocketTransport = function() {
          return function(e5) {
            return function(e6) {
              e6.debug && s3.debug("websocketRequest", e6);
              var t4, o2 = function(e7) {
                if (e7.substr(0, 8) === "https://")
                  return "wss://" + e7.substr(8);
                if (e7.substr(0, 7) === "http://")
                  return "ws://" + e7.substr(7);
                throw new Error("Websocket transport constructed with non-https:// or http:// host.");
              }(e6.url), g = [];
              function l(e7) {
                if (e7 === r2.FINISH_SEND)
                  t4.send(a2);
                else {
                  var o3 = e7, s4 = new Int8Array(o3.byteLength + 1);
                  s4.set(new Uint8Array([0])), s4.set(o3, 1), t4.send(s4);
                }
              }
              return { sendMessage: function(e7) {
                t4 && t4.readyState !== t4.CONNECTING ? l(e7) : g.push(e7);
              }, finishSend: function() {
                t4 && t4.readyState !== t4.CONNECTING ? l(r2.FINISH_SEND) : g.push(r2.FINISH_SEND);
              }, start: function(r3) {
                (t4 = new WebSocket(o2, ["grpc-websockets"])).binaryType = "arraybuffer", t4.onopen = function() {
                  var o3;
                  e6.debug && s3.debug("websocketRequest.onopen"), t4.send((o3 = "", r3.forEach(function(e7, t5) {
                    o3 += e7 + ": " + t5.join(", ") + "\r\n";
                  }), i2.encodeASCII(o3))), g.forEach(function(e7) {
                    l(e7);
                  });
                }, t4.onclose = function(t5) {
                  e6.debug && s3.debug("websocketRequest.onclose", t5), n.default(function() {
                    e6.onEnd();
                  });
                }, t4.onerror = function(t5) {
                  e6.debug && s3.debug("websocketRequest.onerror", t5);
                }, t4.onmessage = function(t5) {
                  n.default(function() {
                    e6.onChunk(new Uint8Array(t5.data));
                  });
                };
              }, cancel: function() {
                e6.debug && s3.debug("websocket.abort"), n.default(function() {
                  t4.close();
                });
              } };
            }(e5);
          };
        };
      }, function(e4, t3, o) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r2 = o(3);
        t3.invoke = function(e5, t4) {
          if (e5.requestStream)
            throw new Error(".invoke cannot be used with client-streaming methods. Use .client instead.");
          var o2 = r2.client(e5, { host: t4.host, transport: t4.transport, debug: t4.debug });
          return t4.onHeaders && o2.onHeaders(t4.onHeaders), t4.onMessage && o2.onMessage(t4.onMessage), t4.onEnd && o2.onEnd(t4.onEnd), o2.start(t4.metadata), o2.send(t4.request), o2.finishSend(), { close: function() {
            o2.close();
          } };
        };
      }, function(e4, t3, o) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.frameRequest = function(e5) {
          var t4 = e5.serializeBinary(), o2 = new ArrayBuffer(t4.byteLength + 5);
          return new DataView(o2, 1, 4).setUint32(0, t4.length, false), new Uint8Array(o2, 5).set(t4), new Uint8Array(o2);
        };
      }, function(e4, t3, o) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var r2 = o(0), s3 = o(3);
        t3.unary = function(e5, t4) {
          if (e5.responseStream)
            throw new Error(".unary cannot be used with server-streaming methods. Use .invoke or .client instead.");
          if (e5.requestStream)
            throw new Error(".unary cannot be used with client-streaming methods. Use .client instead.");
          var o2 = null, n = null, i2 = s3.client(e5, { host: t4.host, transport: t4.transport, debug: t4.debug });
          return i2.onHeaders(function(e6) {
            o2 = e6;
          }), i2.onMessage(function(e6) {
            n = e6;
          }), i2.onEnd(function(e6, s4, i3) {
            t4.onEnd({ status: e6, statusMessage: s4, headers: o2 || new r2.Metadata(), message: n, trailers: i3 });
          }), i2.start(t4.metadata), i2.send(t4.request), i2.finishSend(), { close: function() {
            i2.close();
          } };
        };
      }]));
    }, function(e3, t2) {
    }, function(e3, t2) {
    }, function(e3, t2) {
    }, function(e3, t2) {
    }, function(e3, t2) {
    }, function(e3, t2) {
    }, function(e3, t2) {
    }, function(e3, t2, o) {
      var r2 = o(10), s3 = o(12).grpc, n = function() {
        function e4() {
        }
        return e4.serviceName = "flow.execution.ExecutionAPI", e4;
      }();
      function i2(e4, t3) {
        this.serviceHost = e4, this.options = t3 || {};
      }
      n.Ping = { methodName: "Ping", service: n, requestStream: false, responseStream: false, requestType: r2.PingRequest, responseType: r2.PingResponse }, n.GetAccountAtBlockID = { methodName: "GetAccountAtBlockID", service: n, requestStream: false, responseStream: false, requestType: r2.GetAccountAtBlockIDRequest, responseType: r2.GetAccountAtBlockIDResponse }, n.ExecuteScriptAtBlockID = { methodName: "ExecuteScriptAtBlockID", service: n, requestStream: false, responseStream: false, requestType: r2.ExecuteScriptAtBlockIDRequest, responseType: r2.ExecuteScriptAtBlockIDResponse }, n.GetEventsForBlockIDs = { methodName: "GetEventsForBlockIDs", service: n, requestStream: false, responseStream: false, requestType: r2.GetEventsForBlockIDsRequest, responseType: r2.GetEventsForBlockIDsResponse }, n.GetTransactionResult = { methodName: "GetTransactionResult", service: n, requestStream: false, responseStream: false, requestType: r2.GetTransactionResultRequest, responseType: r2.GetTransactionResultResponse }, t2.ExecutionAPI = n, i2.prototype.ping = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.Ping, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getAccountAtBlockID = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetAccountAtBlockID, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.executeScriptAtBlockID = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.ExecuteScriptAtBlockID, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getEventsForBlockIDs = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetEventsForBlockIDs, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, i2.prototype.getTransactionResult = function(e4, t3, o2) {
        arguments.length === 2 && (o2 = arguments[1]);
        var r3 = s3.unary(n.GetTransactionResult, { request: e4, host: this.serviceHost, metadata: t3, transport: this.options.transport, debug: this.options.debug, onEnd: function(e5) {
          if (o2)
            if (e5.status !== s3.Code.OK) {
              var t4 = new Error(e5.statusMessage);
              t4.code = e5.status, t4.metadata = e5.trailers, o2(t4, null);
            } else
              o2(null, e5.message);
        } });
        return { cancel: function() {
          o2 = null, r3.close();
        } };
      }, t2.ExecutionAPIClient = i2;
    }, function(e3, t2, o) {
      "use strict";
      o.r(t2);
      var r2 = o(11);
      for (var s3 in r2)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return r2[e4];
          });
        }(s3);
      var n = o(4);
      for (var s3 in n)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return n[e4];
          });
        }(s3);
      var i2 = o(13);
      for (var s3 in i2)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return i2[e4];
          });
        }(s3);
      var a2 = o(1);
      for (var s3 in a2)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return a2[e4];
          });
        }(s3);
      var g = o(14);
      for (var s3 in g)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return g[e4];
          });
        }(s3);
      var l = o(5);
      for (var s3 in l)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return l[e4];
          });
        }(s3);
      var c2 = o(15);
      for (var s3 in c2)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return c2[e4];
          });
        }(s3);
      var u = o(7);
      for (var s3 in u)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return u[e4];
          });
        }(s3);
      var p = o(16);
      for (var s3 in p)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return p[e4];
          });
        }(s3);
      var d3 = o(8);
      for (var s3 in d3)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return d3[e4];
          });
        }(s3);
      var f4 = o(17);
      for (var s3 in f4)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return f4[e4];
          });
        }(s3);
      var h2 = o(2);
      for (var s3 in h2)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return h2[e4];
          });
        }(s3);
      var y = o(18);
      for (var s3 in y)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return y[e4];
          });
        }(s3);
      var b2 = o(3);
      for (var s3 in b2)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return b2[e4];
          });
        }(s3);
      var m2 = o(19);
      for (var s3 in m2)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return m2[e4];
          });
        }(s3);
      var _ = o(9);
      for (var s3 in _)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return _[e4];
          });
        }(s3);
      var E = o(20);
      for (var s3 in E)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return E[e4];
          });
        }(s3);
      var S2 = o(10);
      for (var s3 in S2)
        s3 !== "default" && function(e4) {
          o.d(t2, e4, function() {
            return S2[e4];
          });
        }(s3);
    }]);
  }
});

// node_modules/@onflow/util-address/dist/util-address.js
var require_util_address = __commonJS({
  "node_modules/@onflow/util-address/dist/util-address.js"(exports2) {
    init_shims();
    function n(n2) {
      return n2 == null ? null : n2.replace(/^0x/, "").replace(/^Fx/, "");
    }
    function r2(r3) {
      return r3 == null ? null : "0x" + n(r3);
    }
    exports2.display = function(n2) {
      return r2(n2);
    }, exports2.sansPrefix = n, exports2.withPrefix = r2;
  }
});

// node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.js
var require_grpc_web_client = __commonJS({
  "node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.js"(exports2) {
    init_shims();
    !function(e3, t2) {
      for (var r2 in t2)
        e3[r2] = t2[r2];
      t2.__esModule && Object.defineProperty(e3, "__esModule", { value: true });
    }(exports2, function() {
      var e3 = { 418: function(e4, t3) {
        !function(e5, t4) {
          for (var r2 in t4)
            e5[r2] = t4[r2];
        }(t3, function(e5) {
          var t4 = {};
          function r2(n) {
            if (t4[n])
              return t4[n].exports;
            var o = t4[n] = { i: n, l: false, exports: {} };
            return e5[n].call(o.exports, o, o.exports, r2), o.l = true, o.exports;
          }
          return r2.m = e5, r2.c = t4, r2.i = function(e6) {
            return e6;
          }, r2.d = function(e6, t5, n) {
            r2.o(e6, t5) || Object.defineProperty(e6, t5, { configurable: false, enumerable: true, get: n });
          }, r2.n = function(e6) {
            var t5 = e6 && e6.__esModule ? function() {
              return e6.default;
            } : function() {
              return e6;
            };
            return r2.d(t5, "a", t5), t5;
          }, r2.o = function(e6, t5) {
            return Object.prototype.hasOwnProperty.call(e6, t5);
          }, r2.p = "", r2(r2.s = 1);
        }([function(e5, t4, r2) {
          "use strict";
          Object.defineProperty(t4, "__esModule", { value: true });
          var n = r2(3), o = function() {
            function e6(e7, t5) {
              e7 === void 0 && (e7 = {}), t5 === void 0 && (t5 = { splitValues: false });
              var r3, o2 = this;
              this.headersMap = {}, e7 && (typeof Headers != "undefined" && e7 instanceof Headers ? n.getHeaderKeys(e7).forEach(function(r4) {
                n.getHeaderValues(e7, r4).forEach(function(e8) {
                  t5.splitValues ? o2.append(r4, n.splitHeaderValue(e8)) : o2.append(r4, e8);
                });
              }) : typeof (r3 = e7) == "object" && typeof r3.headersMap == "object" && typeof r3.forEach == "function" ? e7.forEach(function(e8, t6) {
                o2.append(e8, t6);
              }) : typeof Map != "undefined" && e7 instanceof Map ? e7.forEach(function(e8, t6) {
                o2.append(t6, e8);
              }) : typeof e7 == "string" ? this.appendFromString(e7) : typeof e7 == "object" && Object.getOwnPropertyNames(e7).forEach(function(t6) {
                var r4 = e7[t6];
                Array.isArray(r4) ? r4.forEach(function(e8) {
                  o2.append(t6, e8);
                }) : o2.append(t6, r4);
              }));
            }
            return e6.prototype.appendFromString = function(e7) {
              for (var t5 = e7.split("\r\n"), r3 = 0; r3 < t5.length; r3++) {
                var n2 = t5[r3], o2 = n2.indexOf(":");
                if (o2 > 0) {
                  var s3 = n2.substring(0, o2).trim(), i2 = n2.substring(o2 + 1).trim();
                  this.append(s3, i2);
                }
              }
            }, e6.prototype.delete = function(e7, t5) {
              var r3 = n.normalizeName(e7);
              if (t5 === void 0)
                delete this.headersMap[r3];
              else {
                var o2 = this.headersMap[r3];
                if (o2) {
                  var s3 = o2.indexOf(t5);
                  s3 >= 0 && o2.splice(s3, 1), o2.length === 0 && delete this.headersMap[r3];
                }
              }
            }, e6.prototype.append = function(e7, t5) {
              var r3 = this, o2 = n.normalizeName(e7);
              Array.isArray(this.headersMap[o2]) || (this.headersMap[o2] = []), Array.isArray(t5) ? t5.forEach(function(e8) {
                r3.headersMap[o2].push(n.normalizeValue(e8));
              }) : this.headersMap[o2].push(n.normalizeValue(t5));
            }, e6.prototype.set = function(e7, t5) {
              var r3 = n.normalizeName(e7);
              if (Array.isArray(t5)) {
                var o2 = [];
                t5.forEach(function(e8) {
                  o2.push(n.normalizeValue(e8));
                }), this.headersMap[r3] = o2;
              } else
                this.headersMap[r3] = [n.normalizeValue(t5)];
            }, e6.prototype.has = function(e7, t5) {
              var r3 = this.headersMap[n.normalizeName(e7)];
              if (!Array.isArray(r3))
                return false;
              if (t5 !== void 0) {
                var o2 = n.normalizeValue(t5);
                return r3.indexOf(o2) >= 0;
              }
              return true;
            }, e6.prototype.get = function(e7) {
              var t5 = this.headersMap[n.normalizeName(e7)];
              return t5 !== void 0 ? t5.concat() : [];
            }, e6.prototype.forEach = function(e7) {
              var t5 = this;
              Object.getOwnPropertyNames(this.headersMap).forEach(function(r3) {
                e7(r3, t5.headersMap[r3]);
              }, this);
            }, e6.prototype.toHeaders = function() {
              if (typeof Headers != "undefined") {
                var e7 = new Headers();
                return this.forEach(function(t5, r3) {
                  r3.forEach(function(r4) {
                    e7.append(t5, r4);
                  });
                }), e7;
              }
              throw new Error("Headers class is not defined");
            }, e6;
          }();
          t4.BrowserHeaders = o;
        }, function(e5, t4, r2) {
          "use strict";
          Object.defineProperty(t4, "__esModule", { value: true });
          var n = r2(0);
          t4.BrowserHeaders = n.BrowserHeaders;
        }, function(e5, t4, r2) {
          "use strict";
          Object.defineProperty(t4, "__esModule", { value: true }), t4.iterateHeaders = function(e6, t5) {
            for (var r3 = e6[Symbol.iterator](), n = r3.next(); !n.done; )
              t5(n.value[0]), n = r3.next();
          }, t4.iterateHeadersKeys = function(e6, t5) {
            for (var r3 = e6.keys(), n = r3.next(); !n.done; )
              t5(n.value), n = r3.next();
          };
        }, function(e5, t4, r2) {
          "use strict";
          Object.defineProperty(t4, "__esModule", { value: true });
          var n = r2(2);
          t4.normalizeName = function(e6) {
            if (typeof e6 != "string" && (e6 = String(e6)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e6))
              throw new TypeError("Invalid character in header field name");
            return e6.toLowerCase();
          }, t4.normalizeValue = function(e6) {
            return typeof e6 != "string" && (e6 = String(e6)), e6;
          }, t4.getHeaderValues = function(e6, t5) {
            var r3 = e6;
            if (r3 instanceof Headers && r3.getAll)
              return r3.getAll(t5);
            var n2 = r3.get(t5);
            return n2 && typeof n2 == "string" ? [n2] : n2;
          }, t4.getHeaderKeys = function(e6) {
            var t5 = e6, r3 = {}, o = [];
            return t5.keys ? n.iterateHeadersKeys(t5, function(e7) {
              r3[e7] || (r3[e7] = true, o.push(e7));
            }) : t5.forEach ? t5.forEach(function(e7, t6) {
              r3[t6] || (r3[t6] = true, o.push(t6));
            }) : n.iterateHeaders(t5, function(e7) {
              var t6 = e7[0];
              r3[t6] || (r3[t6] = true, o.push(t6));
            }), o;
          }, t4.splitHeaderValue = function(e6) {
            var t5 = [];
            return e6.split(", ").forEach(function(e7) {
              e7.split(",").forEach(function(e8) {
                t5.push(e8);
              });
            }), t5;
          };
        }]));
      }, 617: function(e4, t3, r2) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.ChunkParser = t3.ChunkType = t3.encodeASCII = t3.decodeASCII = void 0;
        var n, o = r2(65);
        function s3(e5) {
          return (t4 = e5) === 9 || t4 === 10 || t4 === 13 || e5 >= 32 && e5 <= 126;
          var t4;
        }
        function i2(e5) {
          for (var t4 = 0; t4 !== e5.length; ++t4)
            if (!s3(e5[t4]))
              throw new Error("Metadata is not valid (printable) ASCII");
          return String.fromCharCode.apply(String, Array.prototype.slice.call(e5));
        }
        function a2(e5) {
          return (128 & e5.getUint8(0)) == 128;
        }
        function u(e5) {
          return e5.getUint32(1, false);
        }
        function d3(e5, t4, r3) {
          return e5.byteLength - t4 >= r3;
        }
        function c2(e5, t4, r3) {
          if (e5.slice)
            return e5.slice(t4, r3);
          var n2 = e5.length;
          r3 !== void 0 && (n2 = r3);
          for (var o2 = new Uint8Array(n2 - t4), s4 = 0, i3 = t4; i3 < n2; i3++)
            o2[s4++] = e5[i3];
          return o2;
        }
        t3.decodeASCII = i2, t3.encodeASCII = function(e5) {
          for (var t4 = new Uint8Array(e5.length), r3 = 0; r3 !== e5.length; ++r3) {
            var n2 = e5.charCodeAt(r3);
            if (!s3(n2))
              throw new Error("Metadata contains invalid ASCII");
            t4[r3] = n2;
          }
          return t4;
        }, function(e5) {
          e5[e5.MESSAGE = 1] = "MESSAGE", e5[e5.TRAILERS = 2] = "TRAILERS";
        }(n = t3.ChunkType || (t3.ChunkType = {}));
        var p = function() {
          function e5() {
            this.buffer = null, this.position = 0;
          }
          return e5.prototype.parse = function(e6, t4) {
            if (e6.length === 0 && t4)
              return [];
            var r3, s4 = [];
            if (this.buffer == null)
              this.buffer = e6, this.position = 0;
            else if (this.position === this.buffer.byteLength)
              this.buffer = e6, this.position = 0;
            else {
              var p2 = this.buffer.byteLength - this.position, h2 = new Uint8Array(p2 + e6.byteLength), f4 = c2(this.buffer, this.position);
              h2.set(f4, 0);
              var l = new Uint8Array(e6);
              h2.set(l, p2), this.buffer = h2, this.position = 0;
            }
            for (; ; ) {
              if (!d3(this.buffer, this.position, 5))
                return s4;
              var g = c2(this.buffer, this.position, this.position + 5), b2 = new DataView(g.buffer, g.byteOffset, g.byteLength), y = u(b2);
              if (!d3(this.buffer, this.position, 5 + y))
                return s4;
              var v = c2(this.buffer, this.position + 5, this.position + 5 + y);
              if (this.position += 5 + y, a2(b2))
                return s4.push({ chunkType: n.TRAILERS, trailers: (r3 = v, new o.Metadata(i2(r3))) }), s4;
              s4.push({ chunkType: n.MESSAGE, data: v });
            }
          }, e5;
        }();
        t3.ChunkParser = p;
      }, 8: function(e4, t3) {
        "use strict";
        var r2;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.httpStatusToCode = t3.Code = void 0, function(e5) {
          e5[e5.OK = 0] = "OK", e5[e5.Canceled = 1] = "Canceled", e5[e5.Unknown = 2] = "Unknown", e5[e5.InvalidArgument = 3] = "InvalidArgument", e5[e5.DeadlineExceeded = 4] = "DeadlineExceeded", e5[e5.NotFound = 5] = "NotFound", e5[e5.AlreadyExists = 6] = "AlreadyExists", e5[e5.PermissionDenied = 7] = "PermissionDenied", e5[e5.ResourceExhausted = 8] = "ResourceExhausted", e5[e5.FailedPrecondition = 9] = "FailedPrecondition", e5[e5.Aborted = 10] = "Aborted", e5[e5.OutOfRange = 11] = "OutOfRange", e5[e5.Unimplemented = 12] = "Unimplemented", e5[e5.Internal = 13] = "Internal", e5[e5.Unavailable = 14] = "Unavailable", e5[e5.DataLoss = 15] = "DataLoss", e5[e5.Unauthenticated = 16] = "Unauthenticated";
        }(r2 = t3.Code || (t3.Code = {})), t3.httpStatusToCode = function(e5) {
          switch (e5) {
            case 0:
              return r2.Internal;
            case 200:
              return r2.OK;
            case 400:
              return r2.InvalidArgument;
            case 401:
              return r2.Unauthenticated;
            case 403:
              return r2.PermissionDenied;
            case 404:
              return r2.NotFound;
            case 409:
              return r2.Aborted;
            case 412:
              return r2.FailedPrecondition;
            case 429:
              return r2.ResourceExhausted;
            case 499:
              return r2.Canceled;
            case 500:
              return r2.Unknown;
            case 501:
              return r2.Unimplemented;
            case 503:
              return r2.Unavailable;
            case 504:
              return r2.DeadlineExceeded;
            default:
              return r2.Unknown;
          }
        };
      }, 934: function(e4, t3, r2) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.client = void 0;
        var n = r2(65), o = r2(617), s3 = r2(8), i2 = r2(346), a2 = r2(57), u = r2(882);
        t3.client = function(e5, t4) {
          return new d3(e5, t4);
        };
        var d3 = function() {
          function e5(e6, t4) {
            this.started = false, this.sentFirstMessage = false, this.completed = false, this.closed = false, this.finishedSending = false, this.onHeadersCallbacks = [], this.onMessageCallbacks = [], this.onEndCallbacks = [], this.parser = new o.ChunkParser(), this.methodDefinition = e6, this.props = t4, this.createTransport();
          }
          return e5.prototype.createTransport = function() {
            var e6 = this.props.host + "/" + this.methodDefinition.service.serviceName + "/" + this.methodDefinition.methodName, t4 = { methodDefinition: this.methodDefinition, debug: this.props.debug || false, url: e6, onHeaders: this.onTransportHeaders.bind(this), onChunk: this.onTransportChunk.bind(this), onEnd: this.onTransportEnd.bind(this) };
            this.props.transport ? this.transport = this.props.transport(t4) : this.transport = a2.makeDefaultTransport(t4);
          }, e5.prototype.onTransportHeaders = function(e6, t4) {
            if (this.props.debug && i2.debug("onHeaders", e6, t4), this.closed)
              this.props.debug && i2.debug("grpc.onHeaders received after request was closed - ignoring");
            else if (t4 === 0)
              ;
            else {
              this.responseHeaders = e6, this.props.debug && i2.debug("onHeaders.responseHeaders", JSON.stringify(this.responseHeaders, null, 2));
              var r3 = c2(e6);
              this.props.debug && i2.debug("onHeaders.gRPCStatus", r3);
              var n2 = r3 && r3 >= 0 ? r3 : s3.httpStatusToCode(t4);
              this.props.debug && i2.debug("onHeaders.code", n2);
              var o2 = e6.get("grpc-message") || [];
              if (this.props.debug && i2.debug("onHeaders.gRPCMessage", o2), this.rawOnHeaders(e6), n2 !== s3.Code.OK) {
                var a3 = this.decodeGRPCStatus(o2[0]);
                this.rawOnError(n2, a3, e6);
              }
            }
          }, e5.prototype.onTransportChunk = function(e6) {
            var t4 = this;
            if (this.closed)
              this.props.debug && i2.debug("grpc.onChunk received after request was closed - ignoring");
            else {
              var r3 = [];
              try {
                r3 = this.parser.parse(e6);
              } catch (e7) {
                return this.props.debug && i2.debug("onChunk.parsing error", e7, e7.message), void this.rawOnError(s3.Code.Internal, "parsing error: " + e7.message);
              }
              r3.forEach(function(e7) {
                if (e7.chunkType === o.ChunkType.MESSAGE) {
                  var r4 = t4.methodDefinition.responseType.deserializeBinary(e7.data);
                  t4.rawOnMessage(r4);
                } else
                  e7.chunkType === o.ChunkType.TRAILERS && (t4.responseHeaders ? (t4.responseTrailers = new n.Metadata(e7.trailers), t4.props.debug && i2.debug("onChunk.trailers", t4.responseTrailers)) : (t4.responseHeaders = new n.Metadata(e7.trailers), t4.rawOnHeaders(t4.responseHeaders)));
              });
            }
          }, e5.prototype.onTransportEnd = function() {
            if (this.props.debug && i2.debug("grpc.onEnd"), this.closed)
              this.props.debug && i2.debug("grpc.onEnd received after request was closed - ignoring");
            else if (this.responseTrailers !== void 0) {
              var e6 = c2(this.responseTrailers);
              if (e6 !== null) {
                var t4 = this.responseTrailers.get("grpc-message"), r3 = this.decodeGRPCStatus(t4[0]);
                this.rawOnEnd(e6, r3, this.responseTrailers);
              } else
                this.rawOnError(s3.Code.Internal, "Response closed without grpc-status (Trailers provided)");
            } else {
              if (this.responseHeaders === void 0)
                return void this.rawOnError(s3.Code.Unknown, "Response closed without headers");
              var n2 = c2(this.responseHeaders), o2 = this.responseHeaders.get("grpc-message");
              if (this.props.debug && i2.debug("grpc.headers only response ", n2, o2), n2 === null)
                return void this.rawOnEnd(s3.Code.Unknown, "Response closed without grpc-status (Headers only)", this.responseHeaders);
              var a3 = this.decodeGRPCStatus(o2[0]);
              this.rawOnEnd(n2, a3, this.responseHeaders);
            }
          }, e5.prototype.decodeGRPCStatus = function(e6) {
            if (!e6)
              return "";
            try {
              return decodeURIComponent(e6);
            } catch (t4) {
              return e6;
            }
          }, e5.prototype.rawOnEnd = function(e6, t4, r3) {
            var n2 = this;
            this.props.debug && i2.debug("rawOnEnd", e6, t4, r3), this.completed || (this.completed = true, this.onEndCallbacks.forEach(function(o2) {
              if (!n2.closed)
                try {
                  o2(e6, t4, r3);
                } catch (e7) {
                  setTimeout(function() {
                    throw e7;
                  }, 0);
                }
            }));
          }, e5.prototype.rawOnHeaders = function(e6) {
            this.props.debug && i2.debug("rawOnHeaders", e6), this.completed || this.onHeadersCallbacks.forEach(function(t4) {
              try {
                t4(e6);
              } catch (e7) {
                setTimeout(function() {
                  throw e7;
                }, 0);
              }
            });
          }, e5.prototype.rawOnError = function(e6, t4, r3) {
            var o2 = this;
            r3 === void 0 && (r3 = new n.Metadata()), this.props.debug && i2.debug("rawOnError", e6, t4), this.completed || (this.completed = true, this.onEndCallbacks.forEach(function(n2) {
              if (!o2.closed)
                try {
                  n2(e6, t4, r3);
                } catch (e7) {
                  setTimeout(function() {
                    throw e7;
                  }, 0);
                }
            }));
          }, e5.prototype.rawOnMessage = function(e6) {
            var t4 = this;
            this.props.debug && i2.debug("rawOnMessage", e6.toObject()), this.completed || this.closed || this.onMessageCallbacks.forEach(function(r3) {
              if (!t4.closed)
                try {
                  r3(e6);
                } catch (e7) {
                  setTimeout(function() {
                    throw e7;
                  }, 0);
                }
            });
          }, e5.prototype.onHeaders = function(e6) {
            this.onHeadersCallbacks.push(e6);
          }, e5.prototype.onMessage = function(e6) {
            this.onMessageCallbacks.push(e6);
          }, e5.prototype.onEnd = function(e6) {
            this.onEndCallbacks.push(e6);
          }, e5.prototype.start = function(e6) {
            if (this.started)
              throw new Error("Client already started - cannot .start()");
            this.started = true;
            var t4 = new n.Metadata(e6 || {});
            t4.set("content-type", "application/grpc-web+proto"), t4.set("x-grpc-web", "1"), this.transport.start(t4);
          }, e5.prototype.send = function(e6) {
            if (!this.started)
              throw new Error("Client not started - .start() must be called before .send()");
            if (this.closed)
              throw new Error("Client already closed - cannot .send()");
            if (this.finishedSending)
              throw new Error("Client already finished sending - cannot .send()");
            if (!this.methodDefinition.requestStream && this.sentFirstMessage)
              throw new Error("Message already sent for non-client-streaming method - cannot .send()");
            this.sentFirstMessage = true;
            var t4 = u.frameRequest(e6);
            this.transport.sendMessage(t4);
          }, e5.prototype.finishSend = function() {
            if (!this.started)
              throw new Error("Client not started - .finishSend() must be called before .close()");
            if (this.closed)
              throw new Error("Client already closed - cannot .send()");
            if (this.finishedSending)
              throw new Error("Client already finished sending - cannot .finishSend()");
            this.finishedSending = true, this.transport.finishSend();
          }, e5.prototype.close = function() {
            if (!this.started)
              throw new Error("Client not started - .start() must be called before .close()");
            if (this.closed)
              throw new Error("Client already closed - cannot .close()");
            this.closed = true, this.props.debug && i2.debug("request.abort aborting request"), this.transport.cancel();
          }, e5;
        }();
        function c2(e5) {
          var t4 = e5.get("grpc-status") || [];
          if (t4.length > 0)
            try {
              var r3 = t4[0];
              return parseInt(r3, 10);
            } catch (e6) {
              return null;
            }
          return null;
        }
      }, 346: function(e4, t3) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.debug = void 0, t3.debug = function() {
          for (var e5 = [], t4 = 0; t4 < arguments.length; t4++)
            e5[t4] = arguments[t4];
          console.debug ? console.debug.apply(null, e5) : console.log.apply(null, e5);
        };
      }, 607: function(e4, t3, r2) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.grpc = void 0;
        var n, o = r2(418), s3 = r2(57), i2 = r2(229), a2 = r2(540), u = r2(210), d3 = r2(859), c2 = r2(8), p = r2(938), h2 = r2(35), f4 = r2(934);
        (n = t3.grpc || (t3.grpc = {})).setDefaultTransport = s3.setDefaultTransportFactory, n.CrossBrowserHttpTransport = d3.CrossBrowserHttpTransport, n.FetchReadableStreamTransport = i2.FetchReadableStreamTransport, n.XhrTransport = u.XhrTransport, n.WebsocketTransport = a2.WebsocketTransport, n.Code = c2.Code, n.Metadata = o.BrowserHeaders, n.client = function(e5, t4) {
          return f4.client(e5, t4);
        }, n.invoke = p.invoke, n.unary = h2.unary;
      }, 938: function(e4, t3, r2) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.invoke = void 0;
        var n = r2(934);
        t3.invoke = function(e5, t4) {
          if (e5.requestStream)
            throw new Error(".invoke cannot be used with client-streaming methods. Use .client instead.");
          var r3 = n.client(e5, { host: t4.host, transport: t4.transport, debug: t4.debug });
          return t4.onHeaders && r3.onHeaders(t4.onHeaders), t4.onMessage && r3.onMessage(t4.onMessage), t4.onEnd && r3.onEnd(t4.onEnd), r3.start(t4.metadata), r3.send(t4.request), r3.finishSend(), { close: function() {
            r3.close();
          } };
        };
      }, 65: function(e4, t3, r2) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Metadata = void 0;
        var n = r2(418);
        Object.defineProperty(t3, "Metadata", { enumerable: true, get: function() {
          return n.BrowserHeaders;
        } });
      }, 57: function(e4, t3, r2) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.makeDefaultTransport = t3.setDefaultTransportFactory = void 0;
        var n = r2(859), o = function(e5) {
          return n.CrossBrowserHttpTransport({ withCredentials: false })(e5);
        };
        t3.setDefaultTransportFactory = function(e5) {
          o = e5;
        }, t3.makeDefaultTransport = function(e5) {
          return o(e5);
        };
      }, 229: function(e4, t3, r2) {
        "use strict";
        var n = this && this.__assign || function() {
          return (n = Object.assign || function(e5) {
            for (var t4, r3 = 1, n2 = arguments.length; r3 < n2; r3++)
              for (var o2 in t4 = arguments[r3])
                Object.prototype.hasOwnProperty.call(t4, o2) && (e5[o2] = t4[o2]);
            return e5;
          }).apply(this, arguments);
        };
        Object.defineProperty(t3, "__esModule", { value: true }), t3.detectFetchSupport = t3.FetchReadableStreamTransport = void 0;
        var o = r2(65), s3 = r2(346);
        t3.FetchReadableStreamTransport = function(e5) {
          return function(t4) {
            return function(e6, t5) {
              return e6.debug && s3.debug("fetchRequest", e6), new i2(e6, t5);
            }(t4, e5);
          };
        };
        var i2 = function() {
          function e5(e6, t4) {
            this.cancelled = false, this.controller = self.AbortController && new AbortController(), this.options = e6, this.init = t4;
          }
          return e5.prototype.pump = function(e6, t4) {
            var r3 = this;
            if (this.reader = e6, this.cancelled)
              return this.options.debug && s3.debug("Fetch.pump.cancel at first pump"), void this.reader.cancel().catch(function(e7) {
                r3.options.debug && s3.debug("Fetch.pump.reader.cancel exception", e7);
              });
            this.reader.read().then(function(e7) {
              if (e7.done)
                return r3.options.onEnd(), t4;
              r3.options.onChunk(e7.value), r3.pump(r3.reader, t4);
            }).catch(function(e7) {
              r3.cancelled ? r3.options.debug && s3.debug("Fetch.catch - request cancelled") : (r3.cancelled = true, r3.options.debug && s3.debug("Fetch.catch", e7.message), r3.options.onEnd(e7));
            });
          }, e5.prototype.send = function(e6) {
            var t4 = this;
            fetch(this.options.url, n(n({}, this.init), { headers: this.metadata.toHeaders(), method: "POST", body: e6, signal: this.controller && this.controller.signal })).then(function(e7) {
              if (t4.options.debug && s3.debug("Fetch.response", e7), t4.options.onHeaders(new o.Metadata(e7.headers), e7.status), !e7.body)
                return e7;
              t4.pump(e7.body.getReader(), e7);
            }).catch(function(e7) {
              t4.cancelled ? t4.options.debug && s3.debug("Fetch.catch - request cancelled") : (t4.cancelled = true, t4.options.debug && s3.debug("Fetch.catch", e7.message), t4.options.onEnd(e7));
            });
          }, e5.prototype.sendMessage = function(e6) {
            this.send(e6);
          }, e5.prototype.finishSend = function() {
          }, e5.prototype.start = function(e6) {
            this.metadata = e6;
          }, e5.prototype.cancel = function() {
            var e6 = this;
            this.cancelled ? this.options.debug && s3.debug("Fetch.cancel already cancelled") : (this.cancelled = true, this.controller ? (this.options.debug && s3.debug("Fetch.cancel.controller.abort"), this.controller.abort()) : this.options.debug && s3.debug("Fetch.cancel.missing abort controller"), this.reader ? (this.options.debug && s3.debug("Fetch.cancel.reader.cancel"), this.reader.cancel().catch(function(t4) {
              e6.options.debug && s3.debug("Fetch.cancel.reader.cancel exception", t4);
            })) : this.options.debug && s3.debug("Fetch.cancel before reader"));
          }, e5;
        }();
        t3.detectFetchSupport = function() {
          return typeof Response != "undefined" && Response.prototype.hasOwnProperty("body") && typeof Headers == "function";
        };
      }, 859: function(e4, t3, r2) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.CrossBrowserHttpTransport = void 0;
        var n = r2(229), o = r2(210);
        t3.CrossBrowserHttpTransport = function(e5) {
          if (n.detectFetchSupport()) {
            var t4 = { credentials: e5.withCredentials ? "include" : "same-origin" };
            return n.FetchReadableStreamTransport(t4);
          }
          return o.XhrTransport({ withCredentials: e5.withCredentials });
        };
      }, 210: function(e4, t3, r2) {
        "use strict";
        var n, o = this && this.__extends || (n = function(e5, t4) {
          return (n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e6, t5) {
            e6.__proto__ = t5;
          } || function(e6, t5) {
            for (var r3 in t5)
              Object.prototype.hasOwnProperty.call(t5, r3) && (e6[r3] = t5[r3]);
          })(e5, t4);
        }, function(e5, t4) {
          function r3() {
            this.constructor = e5;
          }
          n(e5, t4), e5.prototype = t4 === null ? Object.create(t4) : (r3.prototype = t4.prototype, new r3());
        });
        Object.defineProperty(t3, "__esModule", { value: true }), t3.stringToArrayBuffer = t3.MozChunkedArrayBufferXHR = t3.XHR = t3.XhrTransport = void 0;
        var s3 = r2(65), i2 = r2(346), a2 = r2(849);
        t3.XhrTransport = function(e5) {
          return function(t4) {
            if (a2.detectMozXHRSupport())
              return new d3(t4, e5);
            if (a2.detectXHROverrideMimeTypeSupport())
              return new u(t4, e5);
            throw new Error("This environment's XHR implementation cannot support binary transfer.");
          };
        };
        var u = function() {
          function e5(e6, t4) {
            this.options = e6, this.init = t4;
          }
          return e5.prototype.onProgressEvent = function() {
            this.options.debug && i2.debug("XHR.onProgressEvent.length: ", this.xhr.response.length);
            var e6 = this.xhr.response.substr(this.index);
            this.index = this.xhr.response.length;
            var t4 = p(e6);
            this.options.onChunk(t4);
          }, e5.prototype.onLoadEvent = function() {
            this.options.debug && i2.debug("XHR.onLoadEvent"), this.options.onEnd();
          }, e5.prototype.onStateChange = function() {
            this.options.debug && i2.debug("XHR.onStateChange", this.xhr.readyState), this.xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED && this.options.onHeaders(new s3.Metadata(this.xhr.getAllResponseHeaders()), this.xhr.status);
          }, e5.prototype.sendMessage = function(e6) {
            this.xhr.send(e6);
          }, e5.prototype.finishSend = function() {
          }, e5.prototype.start = function(e6) {
            var t4 = this;
            this.metadata = e6;
            var r3 = new XMLHttpRequest();
            this.xhr = r3, r3.open("POST", this.options.url), this.configureXhr(), this.metadata.forEach(function(e7, t5) {
              r3.setRequestHeader(e7, t5.join(", "));
            }), r3.withCredentials = Boolean(this.init.withCredentials), r3.addEventListener("readystatechange", this.onStateChange.bind(this)), r3.addEventListener("progress", this.onProgressEvent.bind(this)), r3.addEventListener("loadend", this.onLoadEvent.bind(this)), r3.addEventListener("error", function(e7) {
              t4.options.debug && i2.debug("XHR.error", e7), t4.options.onEnd(e7.error);
            });
          }, e5.prototype.configureXhr = function() {
            this.xhr.responseType = "text", this.xhr.overrideMimeType("text/plain; charset=x-user-defined");
          }, e5.prototype.cancel = function() {
            this.options.debug && i2.debug("XHR.abort"), this.xhr.abort();
          }, e5;
        }();
        t3.XHR = u;
        var d3 = function(e5) {
          function t4() {
            return e5 !== null && e5.apply(this, arguments) || this;
          }
          return o(t4, e5), t4.prototype.configureXhr = function() {
            this.options.debug && i2.debug("MozXHR.configureXhr: setting responseType to 'moz-chunked-arraybuffer'"), this.xhr.responseType = "moz-chunked-arraybuffer";
          }, t4.prototype.onProgressEvent = function() {
            var e6 = this.xhr.response;
            this.options.debug && i2.debug("MozXHR.onProgressEvent: ", new Uint8Array(e6)), this.options.onChunk(new Uint8Array(e6));
          }, t4;
        }(u);
        function c2(e5, t4) {
          var r3 = e5.charCodeAt(t4);
          if (r3 >= 55296 && r3 <= 56319) {
            var n2 = e5.charCodeAt(t4 + 1);
            n2 >= 56320 && n2 <= 57343 && (r3 = 65536 + (r3 - 55296 << 10) + (n2 - 56320));
          }
          return r3;
        }
        function p(e5) {
          for (var t4 = new Uint8Array(e5.length), r3 = 0, n2 = 0; n2 < e5.length; n2++) {
            var o2 = String.prototype.codePointAt ? e5.codePointAt(n2) : c2(e5, n2);
            t4[r3++] = 255 & o2;
          }
          return t4;
        }
        t3.MozChunkedArrayBufferXHR = d3, t3.stringToArrayBuffer = p;
      }, 849: function(e4, t3) {
        "use strict";
        var r2;
        function n() {
          if (r2 !== void 0)
            return r2;
          if (XMLHttpRequest) {
            r2 = new XMLHttpRequest();
            try {
              r2.open("GET", "https://localhost");
            } catch (e5) {
            }
          }
          return r2;
        }
        function o(e5) {
          var t4 = n();
          if (!t4)
            return false;
          try {
            return t4.responseType = e5, t4.responseType === e5;
          } catch (e6) {
          }
          return false;
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.detectXHROverrideMimeTypeSupport = t3.detectMozXHRSupport = t3.xhrSupportsResponseType = void 0, t3.xhrSupportsResponseType = o, t3.detectMozXHRSupport = function() {
          return typeof XMLHttpRequest != "undefined" && o("moz-chunked-arraybuffer");
        }, t3.detectXHROverrideMimeTypeSupport = function() {
          return typeof XMLHttpRequest != "undefined" && XMLHttpRequest.prototype.hasOwnProperty("overrideMimeType");
        };
      }, 540: function(e4, t3, r2) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.WebsocketTransport = void 0;
        var n, o = r2(346), s3 = r2(617);
        !function(e5) {
          e5[e5.FINISH_SEND = 1] = "FINISH_SEND";
        }(n || (n = {}));
        var i2 = new Uint8Array([1]);
        t3.WebsocketTransport = function() {
          return function(e5) {
            return function(e6) {
              e6.debug && o.debug("websocketRequest", e6);
              var t4, r3 = function(e7) {
                if (e7.substr(0, 8) === "https://")
                  return "wss://" + e7.substr(8);
                if (e7.substr(0, 7) === "http://")
                  return "ws://" + e7.substr(7);
                throw new Error("Websocket transport constructed with non-https:// or http:// host.");
              }(e6.url), a2 = [];
              function u(e7) {
                if (e7 === n.FINISH_SEND)
                  t4.send(i2);
                else {
                  var r4 = e7, o2 = new Int8Array(r4.byteLength + 1);
                  o2.set(new Uint8Array([0])), o2.set(r4, 1), t4.send(o2);
                }
              }
              return { sendMessage: function(e7) {
                t4 && t4.readyState !== t4.CONNECTING ? u(e7) : a2.push(e7);
              }, finishSend: function() {
                t4 && t4.readyState !== t4.CONNECTING ? u(n.FINISH_SEND) : a2.push(n.FINISH_SEND);
              }, start: function(n2) {
                (t4 = new WebSocket(r3, ["grpc-websockets"])).binaryType = "arraybuffer", t4.onopen = function() {
                  var r4;
                  e6.debug && o.debug("websocketRequest.onopen"), t4.send((r4 = "", n2.forEach(function(e7, t5) {
                    r4 += e7 + ": " + t5.join(", ") + "\r\n";
                  }), s3.encodeASCII(r4))), a2.forEach(function(e7) {
                    u(e7);
                  });
                }, t4.onclose = function(t5) {
                  e6.debug && o.debug("websocketRequest.onclose", t5), e6.onEnd();
                }, t4.onerror = function(t5) {
                  e6.debug && o.debug("websocketRequest.onerror", t5);
                }, t4.onmessage = function(t5) {
                  e6.onChunk(new Uint8Array(t5.data));
                };
              }, cancel: function() {
                e6.debug && o.debug("websocket.abort"), t4.close();
              } };
            }(e5);
          };
        };
      }, 35: function(e4, t3, r2) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.unary = void 0;
        var n = r2(65), o = r2(934);
        t3.unary = function(e5, t4) {
          if (e5.responseStream)
            throw new Error(".unary cannot be used with server-streaming methods. Use .invoke or .client instead.");
          if (e5.requestStream)
            throw new Error(".unary cannot be used with client-streaming methods. Use .client instead.");
          var r3 = null, s3 = null, i2 = o.client(e5, { host: t4.host, transport: t4.transport, debug: t4.debug });
          return i2.onHeaders(function(e6) {
            r3 = e6;
          }), i2.onMessage(function(e6) {
            s3 = e6;
          }), i2.onEnd(function(e6, o2, i3) {
            t4.onEnd({ status: e6, statusMessage: o2, headers: r3 || new n.Metadata(), message: s3, trailers: i3 });
          }), i2.start(t4.metadata), i2.send(t4.request), i2.finishSend(), { close: function() {
            i2.close();
          } };
        };
      }, 882: function(e4, t3) {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.frameRequest = void 0, t3.frameRequest = function(e5) {
          var t4 = e5.serializeBinary(), r2 = new ArrayBuffer(t4.byteLength + 5);
          return new DataView(r2, 1, 4).setUint32(0, t4.length, false), new Uint8Array(r2, 5).set(t4), new Uint8Array(r2);
        };
      } }, t2 = {};
      return function r2(n) {
        if (t2[n])
          return t2[n].exports;
        var o = t2[n] = { exports: {} };
        return e3[n].call(o.exports, o, o.exports, r2), o.exports;
      }(607);
    }());
  }
});

// node_modules/@improbable-eng/grpc-web-node-http-transport/lib/index.js
var require_lib = __commonJS({
  "node_modules/@improbable-eng/grpc-web-node-http-transport/lib/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.NodeHttpTransport = void 0;
    var http2 = require("http");
    var https2 = require("https");
    var url = require("url");
    var grpc_web_1 = require_grpc_web_client();
    function NodeHttpTransport() {
      return function(opts) {
        return new NodeHttp(opts);
      };
    }
    exports2.NodeHttpTransport = NodeHttpTransport;
    var NodeHttp = function() {
      function NodeHttp2(transportOptions) {
        this.options = transportOptions;
      }
      NodeHttp2.prototype.sendMessage = function(msgBytes) {
        if (!this.options.methodDefinition.requestStream && !this.options.methodDefinition.responseStream) {
          this.request.setHeader("Content-Length", msgBytes.byteLength);
        }
        this.request.write(toBuffer(msgBytes));
        this.request.end();
      };
      NodeHttp2.prototype.finishSend = function() {
      };
      NodeHttp2.prototype.responseCallback = function(response) {
        var _this = this;
        this.options.debug && console.log("NodeHttp.response", response.statusCode);
        var headers = filterHeadersForUndefined(response.headers);
        this.options.onHeaders(new grpc_web_1.grpc.Metadata(headers), response.statusCode);
        response.on("data", function(chunk) {
          _this.options.debug && console.log("NodeHttp.data", chunk);
          _this.options.onChunk(toArrayBuffer(chunk));
        });
        response.on("end", function() {
          _this.options.debug && console.log("NodeHttp.end");
          _this.options.onEnd();
        });
      };
      ;
      NodeHttp2.prototype.start = function(metadata) {
        var _this = this;
        var headers = {};
        metadata.forEach(function(key, values) {
          headers[key] = values.join(", ");
        });
        var parsedUrl = url.parse(this.options.url);
        var httpOptions = {
          host: parsedUrl.hostname,
          port: parsedUrl.port ? parseInt(parsedUrl.port) : void 0,
          path: parsedUrl.path,
          headers,
          method: "POST"
        };
        if (parsedUrl.protocol === "https:") {
          this.request = https2.request(httpOptions, this.responseCallback.bind(this));
        } else {
          this.request = http2.request(httpOptions, this.responseCallback.bind(this));
        }
        this.request.on("error", function(err) {
          _this.options.debug && console.log("NodeHttp.error", err);
          _this.options.onEnd(err);
        });
      };
      NodeHttp2.prototype.cancel = function() {
        this.options.debug && console.log("NodeHttp.abort");
        this.request.abort();
      };
      return NodeHttp2;
    }();
    function filterHeadersForUndefined(headers) {
      var filteredHeaders = {};
      for (var key in headers) {
        var value = headers[key];
        if (headers.hasOwnProperty(key)) {
          if (value !== void 0) {
            filteredHeaders[key] = value;
          }
        }
      }
      return filteredHeaders;
    }
    function toArrayBuffer(buf) {
      var view = new Uint8Array(buf.length);
      for (var i2 = 0; i2 < buf.length; i2++) {
        view[i2] = buf[i2];
      }
      return view;
    }
    function toBuffer(ab) {
      var buf = Buffer.alloc(ab.byteLength);
      for (var i2 = 0; i2 < buf.length; i2++) {
        buf[i2] = ab[i2];
      }
      return buf;
    }
  }
});

// node_modules/sha3/sponge/permute/copy/index.js
var require_copy = __commonJS({
  "node_modules/sha3/sponge/permute/copy/index.js"(exports2, module2) {
    init_shims();
    "use strict";
    var copy = function copy2(I, i2) {
      return function(O, o) {
        var oi = o * 2;
        var ii = i2 * 2;
        O[oi] = I[ii];
        O[oi + 1] = I[ii + 1];
      };
    };
    module2.exports = copy;
  }
});

// node_modules/sha3/sponge/permute/chi/index.js
var require_chi = __commonJS({
  "node_modules/sha3/sponge/permute/chi/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var _copy = _interopRequireDefault(require_copy());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var chi = function chi2(_ref) {
      var A2 = _ref.A, C = _ref.C;
      for (var y = 0; y < 25; y += 5) {
        for (var x2 = 0; x2 < 5; x2++) {
          (0, _copy["default"])(A2, y + x2)(C, x2);
        }
        for (var _x = 0; _x < 5; _x++) {
          var xy = (y + _x) * 2;
          var x1 = (_x + 1) % 5 * 2;
          var x22 = (_x + 2) % 5 * 2;
          A2[xy] ^= ~C[x1] & C[x22];
          A2[xy + 1] ^= ~C[x1 + 1] & C[x22 + 1];
        }
      }
    };
    var _default = chi;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/iota/round-constants/index.js
var require_round_constants = __commonJS({
  "node_modules/sha3/sponge/permute/iota/round-constants/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var ROUND_CONSTANTS = new Uint32Array([0, 1, 0, 32898, 2147483648, 32906, 2147483648, 2147516416, 0, 32907, 0, 2147483649, 2147483648, 2147516545, 2147483648, 32777, 0, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 2147483648, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 0, 32778, 2147483648, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 0, 2147483649, 2147483648, 2147516424]);
    var _default = ROUND_CONSTANTS;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/iota/index.js
var require_iota = __commonJS({
  "node_modules/sha3/sponge/permute/iota/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var _roundConstants = _interopRequireDefault(require_round_constants());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var iota = function iota2(_ref) {
      var A2 = _ref.A, roundIndex = _ref.roundIndex;
      var i2 = roundIndex * 2;
      A2[0] ^= _roundConstants["default"][i2];
      A2[1] ^= _roundConstants["default"][i2 + 1];
    };
    var _default = iota;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js
var require_pi_shuffles = __commonJS({
  "node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var PI_SHUFFLES = [10, 7, 11, 17, 18, 3, 5, 16, 8, 21, 24, 4, 15, 23, 19, 13, 12, 2, 20, 14, 22, 9, 6, 1];
    var _default = PI_SHUFFLES;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js
var require_rho_offsets = __commonJS({
  "node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var RHO_OFFSETS = [1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 2, 14, 27, 41, 56, 8, 25, 43, 62, 18, 39, 61, 20, 44];
    var _default = RHO_OFFSETS;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/rho-pi/index.js
var require_rho_pi = __commonJS({
  "node_modules/sha3/sponge/permute/rho-pi/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var _piShuffles = _interopRequireDefault(require_pi_shuffles());
    var _rhoOffsets = _interopRequireDefault(require_rho_offsets());
    var _copy = _interopRequireDefault(require_copy());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var rhoPi = function rhoPi2(_ref) {
      var A2 = _ref.A, C = _ref.C, W = _ref.W;
      (0, _copy["default"])(A2, 1)(W, 0);
      var H = 0;
      var L = 0;
      var Wi = 0;
      var ri = 32;
      for (var i2 = 0; i2 < 24; i2++) {
        var j = _piShuffles["default"][i2];
        var r2 = _rhoOffsets["default"][i2];
        (0, _copy["default"])(A2, j)(C, 0);
        H = W[0];
        L = W[1];
        ri = 32 - r2;
        Wi = r2 < 32 ? 0 : 1;
        W[Wi] = H << r2 | L >>> ri;
        W[(Wi + 1) % 2] = L << r2 | H >>> ri;
        (0, _copy["default"])(W, 0)(A2, j);
        (0, _copy["default"])(C, 0)(W, 0);
      }
    };
    var _default = rhoPi;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/theta/index.js
var require_theta = __commonJS({
  "node_modules/sha3/sponge/permute/theta/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var _copy = _interopRequireDefault(require_copy());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var theta = function theta2(_ref) {
      var A2 = _ref.A, C = _ref.C, D = _ref.D, W = _ref.W;
      var H = 0;
      var L = 0;
      for (var x2 = 0; x2 < 5; x2++) {
        var x20 = x2 * 2;
        var x21 = (x2 + 5) * 2;
        var x22 = (x2 + 10) * 2;
        var x23 = (x2 + 15) * 2;
        var x24 = (x2 + 20) * 2;
        C[x20] = A2[x20] ^ A2[x21] ^ A2[x22] ^ A2[x23] ^ A2[x24];
        C[x20 + 1] = A2[x20 + 1] ^ A2[x21 + 1] ^ A2[x22 + 1] ^ A2[x23 + 1] ^ A2[x24 + 1];
      }
      for (var _x = 0; _x < 5; _x++) {
        (0, _copy["default"])(C, (_x + 1) % 5)(W, 0);
        H = W[0];
        L = W[1];
        W[0] = H << 1 | L >>> 31;
        W[1] = L << 1 | H >>> 31;
        D[_x * 2] = C[(_x + 4) % 5 * 2] ^ W[0];
        D[_x * 2 + 1] = C[(_x + 4) % 5 * 2 + 1] ^ W[1];
        for (var y = 0; y < 25; y += 5) {
          A2[(y + _x) * 2] ^= D[_x * 2];
          A2[(y + _x) * 2 + 1] ^= D[_x * 2 + 1];
        }
      }
    };
    var _default = theta;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/index.js
var require_permute = __commonJS({
  "node_modules/sha3/sponge/permute/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var _chi = _interopRequireDefault(require_chi());
    var _iota = _interopRequireDefault(require_iota());
    var _rhoPi = _interopRequireDefault(require_rho_pi());
    var _theta = _interopRequireDefault(require_theta());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var permute = function permute2() {
      var C = new Uint32Array(10);
      var D = new Uint32Array(10);
      var W = new Uint32Array(2);
      return function(A2) {
        for (var roundIndex = 0; roundIndex < 24; roundIndex++) {
          (0, _theta["default"])({ A: A2, C, D, W });
          (0, _rhoPi["default"])({ A: A2, C, W });
          (0, _chi["default"])({ A: A2, C });
          (0, _iota["default"])({ A: A2, roundIndex });
        }
        C.fill(0);
        D.fill(0);
        W.fill(0);
      };
    };
    var _default = permute;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/index.js
var require_sponge = __commonJS({
  "node_modules/sha3/sponge/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var _buffer = require("buffer");
    var _permute = _interopRequireDefault(require_permute());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var xorWords = function xorWords2(I, O) {
      for (var i2 = 0; i2 < I.length; i2 += 8) {
        var o = i2 / 4;
        O[o] ^= I[i2 + 7] << 24 | I[i2 + 6] << 16 | I[i2 + 5] << 8 | I[i2 + 4];
        O[o + 1] ^= I[i2 + 3] << 24 | I[i2 + 2] << 16 | I[i2 + 1] << 8 | I[i2];
      }
      return O;
    };
    var readWords = function readWords2(I, O) {
      for (var o = 0; o < O.length; o += 8) {
        var i2 = o / 4;
        O[o] = I[i2 + 1];
        O[o + 1] = I[i2 + 1] >>> 8;
        O[o + 2] = I[i2 + 1] >>> 16;
        O[o + 3] = I[i2 + 1] >>> 24;
        O[o + 4] = I[i2];
        O[o + 5] = I[i2] >>> 8;
        O[o + 6] = I[i2] >>> 16;
        O[o + 7] = I[i2] >>> 24;
      }
      return O;
    };
    var Sponge = function Sponge2(_ref) {
      var _this = this;
      var capacity = _ref.capacity, padding = _ref.padding;
      var keccak = (0, _permute["default"])();
      var stateSize = 200;
      var blockSize = capacity / 8;
      var queueSize = stateSize - capacity / 4;
      var queueOffset = 0;
      var state = new Uint32Array(stateSize / 4);
      var queue = _buffer.Buffer.allocUnsafe(queueSize);
      this.absorb = function(buffer) {
        for (var i2 = 0; i2 < buffer.length; i2++) {
          queue[queueOffset] = buffer[i2];
          queueOffset += 1;
          if (queueOffset >= queueSize) {
            xorWords(queue, state);
            keccak(state);
            queueOffset = 0;
          }
        }
        return _this;
      };
      this.squeeze = function() {
        var options2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var output = { buffer: options2.buffer || _buffer.Buffer.allocUnsafe(blockSize), padding: options2.padding || padding, queue: _buffer.Buffer.allocUnsafe(queue.length), state: new Uint32Array(state.length) };
        queue.copy(output.queue);
        for (var i2 = 0; i2 < state.length; i2++) {
          output.state[i2] = state[i2];
        }
        output.queue.fill(0, queueOffset);
        output.queue[queueOffset] |= output.padding;
        output.queue[queueSize - 1] |= 128;
        xorWords(output.queue, output.state);
        for (var offset = 0; offset < output.buffer.length; offset += queueSize) {
          keccak(output.state);
          readWords(output.state, output.buffer.slice(offset, offset + queueSize));
        }
        return output.buffer;
      };
      this.reset = function() {
        queue.fill(0);
        state.fill(0);
        queueOffset = 0;
        return _this;
      };
      return this;
    };
    var _default = Sponge;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/index.js
var require_sha3 = __commonJS({
  "node_modules/sha3/index.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = exports2.SHAKE = exports2.SHA3Hash = exports2.SHA3 = exports2.Keccak = void 0;
    var _buffer = require("buffer");
    var _sponge = _interopRequireDefault(require_sponge());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var createHash = function createHash2(_ref) {
      var allowedSizes = _ref.allowedSizes, defaultSize = _ref.defaultSize, padding = _ref.padding;
      return function Hash() {
        var _this = this;
        var size = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : defaultSize;
        if (!this || this.constructor !== Hash) {
          return new Hash(size);
        }
        if (allowedSizes && !allowedSizes.includes(size)) {
          throw new Error("Unsupported hash length");
        }
        var sponge = new _sponge["default"]({ capacity: size });
        this.update = function(input) {
          var encoding = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "utf8";
          if (_buffer.Buffer.isBuffer(input)) {
            sponge.absorb(input);
            return _this;
          }
          if (typeof input === "string") {
            return _this.update(_buffer.Buffer.from(input, encoding));
          }
          throw new TypeError("Not a string or buffer");
        };
        this.digest = function() {
          var formatOrOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "binary";
          var options2 = typeof formatOrOptions === "string" ? { format: formatOrOptions } : formatOrOptions;
          var buffer = sponge.squeeze({ buffer: options2.buffer, padding: options2.padding || padding });
          if (options2.format && options2.format !== "binary") {
            return buffer.toString(options2.format);
          }
          return buffer;
        };
        this.reset = function() {
          sponge.reset();
          return _this;
        };
        return this;
      };
    };
    var Keccak = createHash({ allowedSizes: [224, 256, 384, 512], defaultSize: 512, padding: 1 });
    exports2.Keccak = Keccak;
    var SHA3 = createHash({ allowedSizes: [224, 256, 384, 512], defaultSize: 512, padding: 6 });
    exports2.SHA3 = SHA3;
    var SHAKE = createHash({ allowedSizes: [128, 256], defaultSize: 256, padding: 31 });
    exports2.SHAKE = SHAKE;
    var SHA3Hash = Keccak;
    exports2.SHA3Hash = SHA3Hash;
    SHA3.SHA3Hash = SHA3Hash;
    var _default = SHA3;
    exports2["default"] = _default;
  }
});

// node_modules/@onflow/rlp/dist/rlp.js
var require_rlp = __commonJS({
  "node_modules/@onflow/rlp/dist/rlp.js"(exports2) {
    init_shims();
    function r2(r3, e4) {
      if (r3 < 56)
        return Buffer.from([r3 + e4]);
      var f5 = n(r3), t2 = n(e4 + 55 + f5.length / 2);
      return Buffer.from(t2 + f5, "hex");
    }
    function e3(r3) {
      return r3.slice(0, 2) === "0x";
    }
    function n(r3) {
      if (r3 < 0)
        throw new Error("Invalid integer as argument, must be unsigned!");
      var e4 = r3.toString(16);
      return e4.length % 2 ? "0" + e4 : e4;
    }
    function f4(r3) {
      if (!Buffer.isBuffer(r3)) {
        if (typeof r3 == "string")
          return e3(r3) ? Buffer.from((t2 = typeof (u = r3) != "string" ? u : e3(u) ? u.slice(2) : u).length % 2 ? "0" + t2 : t2, "hex") : Buffer.from(r3);
        if (typeof r3 == "number")
          return r3 ? (f5 = n(r3), Buffer.from(f5, "hex")) : Buffer.from([]);
        if (r3 == null)
          return Buffer.from([]);
        if (r3 instanceof Uint8Array)
          return Buffer.from(r3);
        throw new Error("invalid type");
      }
      var f5, t2, u;
      return r3;
    }
    exports2.encode = function e4(n2) {
      if (Array.isArray(n2)) {
        for (var t2 = [], u = 0; u < n2.length; u++)
          t2.push(e4(n2[u]));
        var i2 = Buffer.concat(t2);
        return Buffer.concat([r2(i2.length, 192), i2]);
      }
      var o = f4(n2);
      return o.length === 1 && o[0] < 128 ? o : Buffer.concat([r2(o.length, 128), o]);
    }, exports2.getLength = function(r3) {
      if (!r3 || r3.length === 0)
        return Buffer.from([]);
      var e4 = f4(r3), n2 = e4[0];
      if (n2 <= 127)
        return e4.length;
      if (n2 <= 183)
        return n2 - 127;
      if (n2 <= 191)
        return n2 - 182;
      if (n2 <= 247)
        return n2 - 191;
      var t2 = n2 - 246;
      return t2 + function(r4, e5) {
        if (r4.slice(0, 2) === "00")
          throw new Error("invalid RLP: extra zeros");
        return parseInt(r4, 16);
      }(e4.slice(1, t2).toString("hex"));
    }, exports2.toBuffer = f4;
  }
});

// node_modules/@onflow/util-template/dist/template.js
var require_template = __commonJS({
  "node_modules/@onflow/util-template/dist/template.js"(exports2) {
    init_shims();
    function n(t3, e3, o) {
      if (t3 === void 0 && (t3 = []), e3 === void 0 && (e3 = []), o === void 0 && (o = []), !t3.length && !e3.length)
        return o;
      if (!t3.length)
        return o;
      if (!e3.length)
        return [].concat(o, [t3[0]]);
      var r2 = t3[0], i2 = t3.slice(1), a2 = e3[0], u = e3.slice(1);
      return r2 !== void 0 && o.push(r2), a2 !== void 0 && o.push(a2), n(i2, u, o);
    }
    function t2(n2) {
      return function(e3) {
        return typeof e3 == "function" ? (console.warn("\n        %cFCL/SDK Deprecation Notice\n        ============================\n\n        Interopolation of functions into template literals will not be a thing in future versions of the Flow-JS-SDK or FCL.\n        You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\n\n        ============================\n      ", "font-weight:bold;font-family:monospace;"), t2(n2)(e3(n2))) : String(e3);
      };
    }
    exports2.interleave = n, exports2.template = function(e3) {
      for (var o = arguments.length, r2 = new Array(o > 1 ? o - 1 : 0), i2 = 1; i2 < o; i2++)
        r2[i2 - 1] = arguments[i2];
      return typeof e3 == "string" ? function() {
        return e3;
      } : Array.isArray(e3) ? function(o2) {
        return n(e3, r2.map(t2(o2))).join("").trim();
      } : e3;
    };
  }
});

// node_modules/@onflow/sdk/dist/sdk.js
var require_sdk = __commonJS({
  "node_modules/@onflow/sdk/dist/sdk.js"(exports2) {
    init_shims();
    var e3 = require_util_invariant();
    var t2 = require_actor();
    var n = require_dist();
    var r2 = require_util_address();
    var o = require_grpc_web_client();
    var i2 = require_lib();
    var s3 = require_sha3();
    var u = require_rlp();
    var a2 = require_template();
    function c2() {
      return c2 = Object.assign || function(e4) {
        for (var t3 = 1; t3 < arguments.length; t3++) {
          var n2 = arguments[t3];
          for (var r3 in n2)
            Object.prototype.hasOwnProperty.call(n2, r3) && (e4[r3] = n2[r3]);
        }
        return e4;
      }, c2.apply(this, arguments);
    }
    function l(e4) {
      return l = Object.setPrototypeOf ? Object.getPrototypeOf : function(e5) {
        return e5.__proto__ || Object.getPrototypeOf(e5);
      }, l(e4);
    }
    function f4(e4, t3) {
      return f4 = Object.setPrototypeOf || function(e5, t4) {
        return e5.__proto__ = t4, e5;
      }, f4(e4, t3);
    }
    function d3() {
      if (typeof Reflect == "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy == "function")
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e4) {
        return false;
      }
    }
    function m2(e4, t3, n2) {
      return m2 = d3() ? Reflect.construct : function(e5, t4, n3) {
        var r3 = [null];
        r3.push.apply(r3, t4);
        var o2 = new (Function.bind.apply(e5, r3))();
        return n3 && f4(o2, n3.prototype), o2;
      }, m2.apply(null, arguments);
    }
    function p(e4) {
      var t3 = typeof Map == "function" ? new Map() : void 0;
      return p = function(e5) {
        if (e5 === null || Function.toString.call(e5).indexOf("[native code]") === -1)
          return e5;
        if (typeof e5 != "function")
          throw new TypeError("Super expression must either be null or a function");
        if (t3 !== void 0) {
          if (t3.has(e5))
            return t3.get(e5);
          t3.set(e5, n2);
        }
        function n2() {
          return m2(e5, arguments, l(this).constructor);
        }
        return n2.prototype = Object.create(e5.prototype, { constructor: { value: n2, enumerable: false, writable: true, configurable: true } }), f4(n2, e5);
      }, p(e4);
    }
    function g(e4, t3) {
      (t3 == null || t3 > e4.length) && (t3 = e4.length);
      for (var n2 = 0, r3 = new Array(t3); n2 < t3; n2++)
        r3[n2] = e4[n2];
      return r3;
    }
    var h2;
    var v = '{\n  "tag":"UNKNOWN",\n  "assigns":{},\n  "status":"OK",\n  "reason":null,\n  "accounts":{},\n  "params":{},\n  "arguments":{},\n  "message": {\n    "cadence":null,\n    "refBlock":null,\n    "computeLimit":null,\n    "proposer":null,\n    "payer":null,\n    "authorizations":[],\n    "params":[],\n    "arguments":[]\n  },\n  "proposer":null,\n  "authorizations":[],\n  "payer":null,\n  "events": {\n    "eventType":null,\n    "start":null,\n    "end":null,\n    "blockIds":[]\n  },\n  "transaction": {\n    "id":null\n  },\n  "block": {\n    "id":null,\n    "height":null,\n    "isSealed":null\n  },\n  "account": {\n    "addr":null\n  },\n  "collection": {\n    "id":null\n  }\n}';
    var y = new Set(Object.keys(JSON.parse(v)));
    var k = function() {
      return JSON.parse(v);
    };
    var b2 = "abcdefghijklmnopqrstuvwxyz0123456789".split("");
    var I = function() {
      return b2[~~(Math.random() * b2.length)];
    };
    var P = function() {
      return Array.from({ length: 10 }, I).join("");
    };
    var S2 = function(e4) {
      return Array.isArray(e4);
    };
    var x2 = function(e4) {
      return e4 == null;
    };
    var B = function(e4) {
      return typeof e4 == "function";
    };
    var A2 = function(e4) {
      return e4.status = "OK", e4;
    };
    var w = function(e4, t3) {
      return e4.status = "BAD", e4.reason = t3, e4;
    };
    var E = function(e4) {
      return function(t3) {
        return t3.tag = e4, A2(t3);
      };
    };
    var T = function(t3, n2) {
      return n2 === void 0 && (n2 = {}), function(r3) {
        var o2;
        e3.invariant(typeof t3 == "function" || typeof t3 == "object", "prepAccount must be passed an authorization function or an account object"), e3.invariant(n2.role != null, "Account must have a role");
        var i3 = JSON.parse('{\n  "kind":"ACCOUNT",\n  "tempId":null,\n  "addr":null,\n  "keyId":null,\n  "sequenceNum":null,\n  "signature":null,\n  "signingFunction":null,\n  "resolve":null,\n  "role": {\n    "proposer":false,\n    "authorizer":false,\n    "payer":false,\n    "param":false\n  }\n}'), s4 = n2.role, u2 = P();
        return t3.authorization && B(t3.authorization) && (t3 = { resolve: t3.authorization }), !t3.authorization && B(t3) && (t3 = { resolve: t3 }), r3.accounts[u2] = c2({}, i3, { tempId: u2 }, t3, { role: c2({}, i3.role, typeof t3.role == "object" ? t3.role : {}, (o2 = {}, o2[s4] = true, o2)) }), s4 === "authorizer" ? r3.authorizations.push(u2) : r3[s4] = u2, r3;
      };
    };
    var G = function(e4) {
      return function(t3) {
        var n2 = P();
        return t3.message.arguments.push(n2), t3.arguments[n2] = JSON.parse('{\n  "kind":"ARGUMENT",\n  "tempId":null,\n  "value":null,\n  "asArgument":null,\n  "xform":null,\n  "resolve": null,\n  "resolveArgument": null\n}'), t3.arguments[n2].tempId = n2, t3.arguments[n2].value = e4.value, t3.arguments[n2].asArgument = e4.asArgument, t3.arguments[n2].xform = e4.xform, t3.arguments[n2].resolve = e4.resolve, t3.arguments[n2].resolveArgument = B(e4.resolveArgument) ? e4.resolveArgument.bind(e4) : e4.resolveArgument, A2(t3);
      };
    };
    var N = E("SCRIPT");
    var O = E("TRANSACTION");
    var j = E("GET_TRANSACTION_STATUS");
    var L = E("GET_TRANSACTION");
    var _ = E("GET_ACCOUNT");
    var R = E("GET_EVENTS");
    var C = E("GET_LATEST_BLOCK");
    var D = E("GET_BLOCK_BY_ID");
    var U = E("GET_BLOCK_BY_HEIGHT");
    var K = E("PING");
    var H = E("GET_BLOCK");
    var q = E("GET_BLOCK_HEADER");
    var F2 = E("GET_COLLECTION");
    var z = function(e4) {
      return function(t3) {
        return t3.tag === e4;
      };
    };
    var M = z("UNKNOWN");
    var J = z("SCRIPT");
    var W = z("TRANSACTION");
    var V = z("GET_TRANSACTION_STATUS");
    var Y = z("GET_TRANSACTION");
    var X = z("GET_ACCOUNT");
    var $ = z("GET_EVENTS");
    var Z2 = z("GET_LATEST_BLOCK");
    var Q = z("GET_BLOCK_BY_ID");
    var ee = z("GET_BLOCK_BY_HEIGHT");
    var te = z("PING");
    var ne = z("GET_BLOCK");
    var re = z("GET_BLOCK_HEADER");
    var oe = z("GET_COLLECTION");
    var ie = function(e4) {
      return e4.status === "BAD";
    };
    var se = function e4(t3, n2) {
      n2 === void 0 && (n2 = []);
      try {
        return Promise.resolve(function(r3, o2) {
          try {
            var i3 = Promise.resolve(t3).then(function(r4) {
              if (t3 = function(e5) {
                for (var t4 = 0, n3 = Object.keys(e5); t4 < n3.length; t4++) {
                  var r5 = n3[t4];
                  if (!y.has(r5))
                    throw new Error('"' + r5 + '" is an invalid root level Interaction property.');
                }
                return e5;
              }(r4), ie(t3))
                throw new Error("Interaction Error: " + t3.reason);
              if (!n2.length)
                return t3;
              var o3 = n2[0], i4 = n2.slice(1);
              return Promise.resolve(o3).then(function(n3) {
                if (B(n3))
                  return e4(n3(t3), i4);
                if (x2(n3) || !n3)
                  return e4(t3, i4);
                if (function(e5) {
                  if ((t4 = e5) === null || typeof t4 != "object" || x2(e5) || function(e6) {
                    return typeof e6 == "number";
                  }(e5))
                    return false;
                  for (var t4, n4, r5 = function(e6, t5) {
                    var n5 = typeof Symbol != "undefined" && e6[Symbol.iterator] || e6["@@iterator"];
                    if (n5)
                      return (n5 = n5.call(e6)).next.bind(n5);
                    if (Array.isArray(e6) || (n5 = function(e7, t6) {
                      if (e7) {
                        if (typeof e7 == "string")
                          return g(e7, t6);
                        var n6 = Object.prototype.toString.call(e7).slice(8, -1);
                        return n6 === "Object" && e7.constructor && (n6 = e7.constructor.name), n6 === "Map" || n6 === "Set" ? Array.from(e7) : n6 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n6) ? g(e7, t6) : void 0;
                      }
                    }(e6))) {
                      n5 && (e6 = n5);
                      var r6 = 0;
                      return function() {
                        return r6 >= e6.length ? { done: true } : { done: false, value: e6[r6++] };
                      };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                  }(y); !(n4 = r5()).done; )
                    if (!e5.hasOwnProperty(n4.value))
                      return false;
                  return true;
                }(n3))
                  return e4(n3, i4);
                throw new Error("Invalid Interaction Composition");
              });
            });
          } catch (e5) {
            return o2(e5);
          }
          return i3 && i3.then ? i3.then(void 0, o2) : i3;
        }(0, function(e5) {
          throw e5;
        }));
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var ue = function e4() {
      var t3 = [].slice.call(arguments), n2 = t3[0], r3 = t3[1];
      return S2(n2) && r3 == null ? function(t4) {
        return e4(t4, n2);
      } : se(n2, r3);
    };
    var ae = function(e4) {
      return e4;
    };
    var ce = function(e4, t3, n2) {
      return e4.assigns[t3] == null ? n2 : e4.assigns[t3];
    };
    var le = function(e4, t3) {
      return function(n2) {
        return n2.assigns[e4] = t3, A2(n2);
      };
    };
    var fe = function(e4, t3) {
      return t3 === void 0 && (t3 = ae), function(n2) {
        return n2.assigns[e4] = t3(n2.assigns[e4], n2), A2(n2);
      };
    };
    function de(e4) {
      return e4 === void 0 && (e4 = []), ue(k(), e4);
    }
    var me = function e4(t3, n2) {
      t3 === void 0 && (t3 = []);
      try {
        if (!t3.length)
          return Promise.resolve(n2);
        var r3 = t3[0], o2 = t3.slice(1);
        return Promise.resolve(Ie(r3)).then(function(t4) {
          return t4 == null ? e4(o2, n2) : t4;
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var pe = "config";
    var ge = "PUT_CONFIG";
    var he = "GET_CONFIG";
    var ve = "CONFIG/UPDATED";
    var ye = function(e4) {
      return e4;
    };
    var ke = ((h2 = {})[ge] = function(e4, t3, n2) {
      var r3 = n2.key, o2 = n2.value;
      if (r3 == null)
        throw new Error("Missing 'key' for config/put.");
      e4.put(r3, o2), e4.broadcast(ve, c2({}, e4.all()));
    }, h2[he] = function(e4, t3, n2) {
      var r3 = n2.key, o2 = n2.fallback;
      if (r3 == null)
        throw new Error("Missing 'key' for config/get");
      t3.reply(e4.get(r3, o2));
    }, h2.GET_ALL_CONFIG = function(e4, t3) {
      t3.reply(c2({}, e4.all()));
    }, h2.UPDATE_CONFIG = function(e4, t3, n2) {
      var r3 = n2.key, o2 = n2.fn;
      if (r3 == null)
        throw new Error("Missing 'key' for config/update");
      e4.update(r3, o2 || ye), e4.broadcast(ve, c2({}, e4.all()));
    }, h2.DELETE_CONFIG = function(e4, t3, n2) {
      var r3 = n2.key;
      if (r3 == null)
        throw new Error("Missing 'key' for config/delete");
      e4.delete(r3), e4.broadcast(ve, c2({}, e4.all()));
    }, h2.CLEAR_CONFIG = function(e4, t3) {
      for (var n2 = 0, r3 = Object.keys(e4.all()); n2 < r3.length; n2++)
        e4.delete(r3[n2]);
      e4.broadcast(ve, c2({}, e4.all()));
    }, h2.WHERE_CONFIG = function(e4, t3, n2) {
      var r3 = n2.pattern;
      if (r3 == null)
        throw new Error("Missing 'pattern' for config/where");
      t3.reply(e4.where(r3));
    }, h2[t2.SUBSCRIBE] = function(e4, t3) {
      e4.subscribe(t3.from), e4.send(t3.from, ve, c2({}, e4.all()));
    }, h2[t2.UNSUBSCRIBE] = function(e4, t3) {
      e4.unsubscribe(t3.from);
    }, h2);
    function be(e4, n2) {
      return t2.send(pe, ge, { key: e4, value: n2 }), Ee();
    }
    function Ie(e4, n2) {
      return t2.send(pe, he, { key: e4, fallback: n2 }, { expectReply: true, timeout: 10 });
    }
    function Pe() {
      return t2.send(pe, "GET_ALL_CONFIG", null, { expectReply: true, timeout: 10 });
    }
    function Se(e4, n2) {
      return n2 === void 0 && (n2 = ye), t2.send(pe, "UPDATE_CONFIG", { key: e4, fn: n2 }), Ee();
    }
    function xe(e4) {
      return t2.send(pe, "DELETE_CONFIG", { key: e4 }), Ee();
    }
    function Be(e4) {
      return t2.send(pe, "WHERE_CONFIG", { pattern: e4 }, { expectReply: true, timeout: 10 });
    }
    function Ae(e4) {
      return t2.subscriber(pe, function() {
        return t2.spawn(ke, pe);
      }, e4);
    }
    function we() {
      return t2.send(pe, "CLEAR_CONFIG");
    }
    function Ee(e4) {
      return e4 != null && typeof e4 == "object" && Object.keys(e4).map(function(t3) {
        return be(t3, e4[t3]);
      }), { put: be, get: Ie, all: Pe, first: me, update: Se, delete: xe, where: Be, subscribe: Ae, overload: Ge };
    }
    t2.spawn(ke, pe), Ee.put = be, Ee.get = Ie, Ee.all = Pe, Ee.first = me, Ee.update = Se, Ee.delete = xe, Ee.where = Be, Ee.subscribe = Ae, Ee.overload = Ge;
    var Te = function(e4) {
      return e4;
    };
    function Ge(e4, t3) {
      return e4 === void 0 && (e4 = {}), t3 === void 0 && (t3 = Te), new Promise(function(n2, r3) {
        try {
          return Promise.resolve(Pe()).then(function(o2) {
            var i3 = function(r4, i4) {
              try {
                var s4 = function() {
                  Ee(e4);
                  var r5 = t3;
                  return Promise.resolve(Pe()).then(function(e5) {
                    return Promise.resolve(r5(e5)).then(function(e6) {
                      return Promise.resolve(we()).then(function() {
                        return Promise.resolve(Ee(o2)).then(function() {
                          n2(e6);
                        });
                      });
                    });
                  });
                }();
              } catch (e5) {
                return i4(e5);
              }
              return s4 && s4.then ? s4.then(void 0, i4) : s4;
            }(0, function(e5) {
              return Promise.resolve(we()).then(function() {
                return Promise.resolve(Ee(o2)).then(function() {
                  r3(e5);
                });
              });
            });
            if (i3 && i3.then)
              return i3.then(function() {
              });
          });
        } catch (e5) {
          return Promise.reject(e5);
        }
      });
    }
    var Ne = function() {
      return JSON.parse('{\n    "tag":null,\n    "transaction":null,\n    "transactionStatus":null,\n    "transactionId":null,\n    "encodedData":null,\n    "events":null,\n    "account":null,\n    "block":null,\n    "blockHeader":null,\n    "latestBlock":null,\n    "collection":null\n}');
    };
    var Oe = function(e4, t3, n2) {
      try {
        return Promise.resolve(Ee().get("grpc.metadata", {})).then(function(r3) {
          return new Promise(function(i3, s4) {
            o.grpc.unary(t3, { request: n2, host: e4, metadata: new o.grpc.Metadata(r3), onEnd: function(e5) {
              var t4 = e5.statusMessage;
              e5.status === o.grpc.Code.OK ? i3(e5.message) : s4(new Error(t4));
            } });
          });
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    o.grpc.setDefaultTransport(i2.NodeHttpTransport());
    var je = function(e4) {
      return Buffer.from(e4, "hex");
    };
    var Le = function(e4) {
      return Buffer.from(e4.padStart(16, 0), "hex");
    };
    var _e = { 0: "UNKNOWN", 1: "PENDING", 2: "FINALIZED", 3: "EXECUTED", 4: "SEALED", 5: "EXPIRED" };
    var Re = function(e4) {
      if (e4 != null)
        return _e[String(e4)];
    };
    var Ce = function(e4) {
      return Buffer.from(e4).toString("hex");
    };
    var De = function(e4) {
      return Buffer.from(JSON.stringify(e4), "utf8");
    };
    function Ue(e4, t3) {
      var n2 = Ne();
      return n2.tag = e4.tag, n2.encodedData = JSON.parse(Buffer.from(t3.getValue_asU8()).toString("utf8")), n2;
    }
    var Ke = function(e4) {
      return Buffer.from(e4).toString("hex");
    };
    var He = function(e4) {
      return Buffer.from(e4.padStart(16, 0), "hex");
    };
    function qe(e4, t3) {
      var n2 = Ne();
      n2.tag = e4.tag;
      var o2, i3 = t3.getAccount(), s4 = (o2 = i3.getContractsMap()) ? o2.getEntryList().reduce(function(e5, t4) {
        var n3;
        return c2({}, e5, ((n3 = {})[t4[0]] = Buffer.from(t4[1] || new UInt8Array()).toString("utf8"), n3));
      }, {}) : {};
      return n2.account = { address: r2.withPrefix(Ke(i3.getAddress_asU8())), balance: i3.getBalance(), code: Buffer.from(i3.getCode_asU8() || new UInt8Array()).toString("utf8"), contracts: s4, keys: i3.getKeysList().map(function(e5) {
        return { index: e5.getIndex(), publicKey: Ke(e5.getPublicKey_asU8()), signAlgo: e5.getSignAlgo(), hashAlgo: e5.getHashAlgo(), weight: e5.getWeight(), sequenceNumber: e5.getSequenceNumber(), revoked: e5.getRevoked() };
      }) }, n2;
    }
    var Fe = function(e4) {
      return Buffer.from(e4).toString("hex");
    };
    function ze(e4, t3) {
      var n2 = Ne();
      n2.tag = e4.tag;
      var r3 = t3.getResultsList();
      return n2.events = r3.reduce(function(e5, t4) {
        var n3 = Fe(t4.getBlockId_asU8()), r4 = t4.getBlockHeight(), o2 = t4.getBlockTimestamp().toDate().toISOString();
        return t4.getEventsList().forEach(function(t5) {
          e5.push({ blockId: n3, blockHeight: r4, blockTimestamp: o2, type: t5.getType(), transactionId: Fe(t5.getTransactionId_asU8()), transactionIndex: t5.getTransactionIndex(), eventIndex: t5.getEventIndex(), payload: JSON.parse(Buffer.from(t5.getPayload_asU8()).toString("utf8")) });
        }), e5;
      }, []), n2;
    }
    var Me = function(e4) {
      return Buffer.from(e4).toString("hex");
    };
    function Je(e4, t3) {
      var n2 = t3.getBlock(), r3 = n2.getCollectionGuaranteesList(), o2 = n2.getBlockSealsList(), i3 = n2.getSignaturesList().map(Me), s4 = Ne();
      return s4.tag = e4.tag, s4.block = { id: Me(n2.getId_asU8()), parentId: Me(n2.getParentId_asU8()), height: n2.getHeight(), timestamp: n2.getTimestamp().toDate().toISOString(), collectionGuarantees: r3.map(function(e5) {
        return { collectionId: Me(e5.getCollectionId_asU8()), signatures: e5.getSignaturesList().map(Me) };
      }), blockSeals: o2.map(function(e5) {
        return { blockId: Me(e5.getBlockId_asU8()), executionReceiptId: Me(e5.getExecutionReceiptId_asU8()), executionReceiptSignatures: e5.getExecutionReceiptSignaturesList().map(Me), resultApprovalSignatures: e5.getResultApprovalSignaturesList().map(Me) };
      }), signatures: i3 }, s4;
    }
    var We = function(e4) {
      return Buffer.from(e4).toString("hex");
    };
    function Ve(e4, t3) {
      var n2 = t3.getBlock(), r3 = Ne();
      return r3.tag = e4.tag, r3.blockHeader = { id: We(n2.getId_asU8()), parentId: We(n2.getParentId_asU8()), height: n2.getHeight(), timestamp: n2.getTimestamp().toDate().toISOString() }, r3;
    }
    var Ye = function(e4) {
      return Buffer.from(e4).toString("hex");
    };
    var Xe = function(e4) {
      return Buffer.from(e4).toString("hex");
    };
    var $e = function(e4) {
      return Buffer.from(e4).toString("hex");
    };
    var Ze = function(e4) {
      return Buffer.from(e4).toString("hex");
    };
    var Qe = function(t3, o2) {
      o2 === void 0 && (o2 = {});
      try {
        var i3 = function(i4) {
          return o2.node = i4, e3.invariant(o2.node, 'SDK Send Error: Either opts.node or "accessNode.api" in config must be defined.'), Promise.resolve(t3).then(function(i5) {
            switch (t3 = i5, true) {
              case W(t3):
                return o2.sendTransaction ? o2.sendTransaction(t3, o2) : function(t4, o3) {
                  o3 === void 0 && (o3 = {});
                  try {
                    e3.invariant(o3.node, "SDK Send Transaction Error: opts.node must be defined.");
                    var i6 = o3.unary || Oe;
                    return Promise.resolve(t4).then(function(e4) {
                      t4 = e4;
                      var s5 = new n.Transaction();
                      s5.setScript(Buffer.from(t4.message.cadence, "utf8")), s5.setGasLimit(t4.message.computeLimit), s5.setReferenceBlockId(t4.message.refBlock ? je(t4.message.refBlock) : null), s5.setPayer(Le(r2.sansPrefix(t4.accounts[t4.payer].addr))), t4.message.arguments.forEach(function(e5) {
                        return s5.addArguments(function(e6) {
                          return Buffer.from(JSON.stringify(e6), "utf8");
                        }(t4.arguments[e5].asArgument));
                      }), t4.authorizations.map(function(e5) {
                        return t4.accounts[e5].addr;
                      }).reduce(function(e5, t5) {
                        return e5.find(function(e6) {
                          return e6 === t5;
                        }) ? e5 : [].concat(e5, [t5]);
                      }, []).forEach(function(e5) {
                        return s5.addAuthorizers(Le(r2.sansPrefix(e5)));
                      });
                      var u2 = new n.Transaction.ProposalKey();
                      u2.setAddress(Le(r2.sansPrefix(t4.accounts[t4.proposer].addr))), u2.setKeyId(t4.accounts[t4.proposer].keyId), u2.setSequenceNumber(t4.accounts[t4.proposer].sequenceNum), s5.setProposalKey(u2);
                      for (var a3 = 0, c3 = Object.values(t4.accounts); a3 < c3.length; a3++) {
                        var l2 = c3[a3];
                        try {
                          if (!l2.role.payer && l2.signature != null) {
                            var f5 = new n.Transaction.Signature();
                            f5.setAddress(Le(r2.sansPrefix(l2.addr))), f5.setKeyId(l2.keyId), f5.setSignature(je(l2.signature)), s5.addPayloadSignatures(f5);
                          }
                        } catch (e5) {
                          throw console.error("Trouble applying payload signature", { acct: l2, ix: t4 }), e5;
                        }
                      }
                      for (var d4 = 0, m3 = Object.values(t4.accounts); d4 < m3.length; d4++) {
                        var p2 = m3[d4];
                        try {
                          if (p2.role.payer && p2.signature != null) {
                            var g2 = new n.Transaction.Signature();
                            g2.setAddress(Le(r2.sansPrefix(p2.addr))), g2.setKeyId(p2.keyId), g2.setSignature(je(p2.signature)), s5.addEnvelopeSignatures(g2);
                          }
                        } catch (e5) {
                          throw console.error("Trouble applying envelope signature", { acct: p2, ix: t4 }), e5;
                        }
                      }
                      var h3 = new n.SendTransactionRequest();
                      h3.setTransaction(s5);
                      var v2 = Date.now();
                      return Promise.resolve(i6(o3.node, n.AccessAPI.SendTransaction, h3)).then(function(e5) {
                        var n2, r3 = Date.now(), o4 = Ne();
                        return o4.tag = t4.tag, o4.transactionId = (n2 = e5.getId_asU8(), Buffer.from(n2).toString("hex")), typeof window != "undefined" && window.dispatchEvent(new CustomEvent("FLOW::TX", { detail: { txId: o4.transactionId, delta: r3 - v2 } })), o4;
                      });
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              case V(t3):
                return o2.sendGetTransactionStatus ? o2.sendGetTransactionStatus(t3, o2) : function(t4, r3) {
                  r3 === void 0 && (r3 = {});
                  try {
                    e3.invariant(r3.node, "SDK Send Get Transaction Status Error: opts.node must be defined.");
                    var o3 = r3.unary || Oe;
                    return Promise.resolve(t4).then(function(e4) {
                      t4 = e4;
                      var i6 = new n.GetTransactionRequest();
                      return i6.setId(Buffer.from(t4.transaction.id, "hex")), Promise.resolve(o3(r3.node, n.AccessAPI.GetTransactionResult, i6)).then(function(e5) {
                        var n2 = e5.getEventsList(), r4 = Ne(), o4 = e5.getStatus();
                        return r4.tag = t4.tag, r4.transactionStatus = { status: o4, statusString: Re(o4), statusCode: e5.getStatusCode(), errorMessage: e5.getErrorMessage(), events: n2.map(function(e6) {
                          return { type: e6.getType(), transactionId: (t5 = e6.getTransactionId_asU8(), Buffer.from(t5).toString("hex")), transactionIndex: e6.getTransactionIndex(), eventIndex: e6.getEventIndex(), payload: JSON.parse(Buffer.from(e6.getPayload_asU8()).toString("utf8")) };
                          var t5;
                        }) }, r4;
                      });
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              case Y(t3):
                return o2.sendGetTransaction ? o2.sendGetTransaction(t3, o2) : function(t4, r3) {
                  r3 === void 0 && (r3 = {});
                  try {
                    e3.invariant(r3.node, "SDK Send Get Transaction Error: opts.node must be defined.");
                    var o3 = r3.unary || Oe;
                    return Promise.resolve(t4).then(function(e4) {
                      t4 = e4;
                      var i6 = new n.GetTransactionRequest();
                      return i6.setId(Buffer.from(t4.transaction.id, "hex")), Promise.resolve(o3(r3.node, n.AccessAPI.GetTransaction, i6)).then(function(e5) {
                        var n2 = Ne();
                        n2.tag = t4.tag;
                        var r4, o4 = function(e6) {
                          return { address: Ce(e6.getAddress_asU8()), keyId: e6.getKeyId(), signature: Ce(e6.getSignature_asU8()) };
                        }, i7 = e5.getTransaction();
                        return n2.transaction = { script: Buffer.from(i7.getScript_asU8()).toString("utf8"), args: i7.getArgumentsList().map(function(e6) {
                          return JSON.parse(Buffer.from(e6).toString("utf8"));
                        }), referenceBlockId: Ce(i7.getReferenceBlockId_asU8()), gasLimit: i7.getGasLimit(), proposalKey: (r4 = i7.getProposalKey(), { address: Ce(r4.getAddress_asU8()), keyId: r4.getKeyId(), sequenceNumber: r4.getSequenceNumber() }), payer: Ce(i7.getPayer_asU8()), authorizers: i7.getAuthorizersList().map(Ce), payloadSignatures: i7.getPayloadSignaturesList().map(o4), envelopeSignatures: i7.getEnvelopeSignaturesList().map(o4) }, n2;
                      });
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              case J(t3):
                return o2.sendExecuteScript ? o2.sendExecuteScript(t3, o2) : function(t4, r3) {
                  r3 === void 0 && (r3 = {});
                  try {
                    return e3.invariant(r3.node, "SDK Send Execute Script Error: opts.node must be defined."), Promise.resolve(t4).then(function(e4) {
                      return t4 = e4, Promise.resolve(t4.block.id ? function(e5, t5) {
                        try {
                          var r4 = t5.unary || Oe, o3 = new n.ExecuteScriptAtBlockIDRequest();
                          o3.setBlockId(Buffer.from(e5.block.id, "hex"));
                          var i6 = Buffer.from(e5.message.cadence, "utf8");
                          return e5.message.arguments.forEach(function(t6) {
                            return o3.addArguments(De(e5.arguments[t6].asArgument));
                          }), o3.setScript(i6), Promise.resolve(r4(t5.node, n.AccessAPI.ExecuteScriptAtBlockID, o3)).then(function(t6) {
                            return Ue(e5, t6);
                          });
                        } catch (e6) {
                          return Promise.reject(e6);
                        }
                      }(t4, r3) : t4.block.height ? function(e5, t5) {
                        try {
                          var r4 = t5.unary || Oe, o3 = new n.ExecuteScriptAtBlockHeightRequest();
                          o3.setBlockHeight(Number(e5.block.height));
                          var i6 = Buffer.from(e5.message.cadence, "utf8");
                          return e5.message.arguments.forEach(function(t6) {
                            return o3.addArguments(De(e5.arguments[t6].asArgument));
                          }), o3.setScript(i6), Promise.resolve(r4(t5.node, n.AccessAPI.ExecuteScriptAtBlockHeight, o3)).then(function(t6) {
                            return Ue(e5, t6);
                          });
                        } catch (e6) {
                          return Promise.reject(e6);
                        }
                      }(t4, r3) : function(e5, t5) {
                        try {
                          var r4 = t5.unary || Oe, o3 = new n.ExecuteScriptAtLatestBlockRequest(), i6 = Buffer.from(e5.message.cadence, "utf8");
                          return e5.message.arguments.forEach(function(t6) {
                            return o3.addArguments(De(e5.arguments[t6].asArgument));
                          }), o3.setScript(i6), Promise.resolve(r4(t5.node, n.AccessAPI.ExecuteScriptAtLatestBlock, o3)).then(function(t6) {
                            return Ue(e5, t6);
                          });
                        } catch (e6) {
                          return Promise.reject(e6);
                        }
                      }(t4, r3));
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              case X(t3):
                return o2.sendGetAccount ? o2.sendGetAccount(t3, o2) : function(t4, o3) {
                  o3 === void 0 && (o3 = {});
                  try {
                    return e3.invariant(o3.node, "SDK Send Get Account Error: opts.node must be defined."), Promise.resolve(t4).then(function(e4) {
                      return t4 = e4, Promise.resolve(t4.block.height !== null ? function(e5, t5) {
                        try {
                          var o4 = t5.unary || Oe, i6 = new n.GetAccountAtBlockHeightRequest();
                          return i6.setBlockHeight(Number(e5.block.height)), i6.setAddress(He(r2.sansPrefix(e5.account.addr))), Promise.resolve(o4(t5.node, n.AccessAPI.GetAccountAtBlockHeight, i6)).then(function(t6) {
                            return qe(e5, t6);
                          });
                        } catch (e6) {
                          return Promise.reject(e6);
                        }
                      }(t4, o3) : function(e5, t5) {
                        try {
                          var o4 = t5.unary || Oe, i6 = new n.GetAccountAtLatestBlockRequest();
                          return i6.setAddress(He(r2.sansPrefix(e5.account.addr))), Promise.resolve(o4(t5.node, n.AccessAPI.GetAccountAtLatestBlock, i6)).then(function(t6) {
                            return qe(e5, t6);
                          });
                        } catch (e6) {
                          return Promise.reject(e6);
                        }
                      }(t4, o3));
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              case $(t3):
                return o2.sendGetEvents ? o2.sendGetEvents(t3, o2) : function(t4, r3) {
                  r3 === void 0 && (r3 = {});
                  try {
                    return e3.invariant(r3.node, "SDK Send Get Events Error: opts.node must be defined."), Promise.resolve(t4).then(function(o3) {
                      var i6 = (t4 = o3).events.start !== null, s5 = Array.isArray(t4.events.blockIds) && t4.events.blockIds.length > 0;
                      return e3.invariant(i6 || s5, "SendGetEventsError: Unable to determine which get events request to send. Either a block height range, or block IDs must be specified."), Promise.resolve(i6 ? function(e4, t5) {
                        try {
                          var r4 = t5.unary || Oe, o4 = new n.GetEventsForHeightRangeRequest();
                          return o4.setType(e4.events.eventType), o4.setStartHeight(Number(e4.events.start)), o4.setEndHeight(Number(e4.events.end)), Promise.resolve(r4(t5.node, n.AccessAPI.GetEventsForHeightRange, o4)).then(function(t6) {
                            return ze(e4, t6);
                          });
                        } catch (e5) {
                          return Promise.reject(e5);
                        }
                      }(t4, r3) : function(e4, t5) {
                        try {
                          var r4 = t5.unary || Oe, o4 = new n.GetEventsForBlockIDsRequest();
                          return o4.setType(e4.events.eventType), e4.events.blockIds.forEach(function(e5) {
                            return o4.addBlockIds(Buffer.from(e5, "hex"));
                          }), Promise.resolve(r4(t5.node, n.AccessAPI.GetEventsForBlockIDs, o4)).then(function(t6) {
                            return ze(e4, t6);
                          });
                        } catch (e5) {
                          return Promise.reject(e5);
                        }
                      }(t4, r3));
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              case Z2(t3):
                return o2.sendGetLatestBlock ? o2.sendGetLatestBlock(t3, o2) : function(t4, r3) {
                  r3 === void 0 && (r3 = {});
                  try {
                    return e3.invariant(r3.node, "SDK Send Get Latest Block Error: opts.node must be defined."), Promise.resolve(t4).then(function(e4) {
                      t4 = e4;
                      var o3 = new n.GetLatestBlockRequest();
                      return t4.latestBlock && t4.latestBlock.isSealed && (o3.setIsSealed(t4.latestBlock.isSealed), console.error("\n          %c@onflow/send Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        ".replace(/\n\s+/g, "\n").trim(), "font-weight:bold;font-family:monospace;")), t4.block && t4.block.isSealed && o3.setIsSealed(t4.block.isSealed), Promise.resolve(Oe(r3.node, n.AccessAPI.GetLatestBlock, o3)).then(function(e5) {
                        var n2 = e5.getBlock(), r4 = n2.getCollectionGuaranteesList(), o4 = n2.getBlockSealsList(), i6 = n2.getSignaturesList(), s5 = Ne();
                        return s5.tag = t4.tag, s5.block = { id: Ye(n2.getId_asU8()), parentId: Ye(n2.getParentId_asU8()), height: n2.getHeight(), timestamp: n2.getTimestamp(), collectionGuarantees: r4.map(function(e6) {
                          return { collectionId: Ye(e6.getCollectionId_asU8()), signatures: e6.getSignaturesList() };
                        }), blockSeals: o4.map(function(e6) {
                          return { blockId: Ye(e6.getBlockId_asU8()), executionReceiptId: Ye(e6.getExecutionReceiptId_asU8()), executionReceiptSignatures: e6.getExecutionReceiptSignaturesList(), resultApprovalSignatures: e6.getResultApprovalSignaturesList() };
                        }), signatures: i6 }, s5;
                      });
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              case ne(t3):
                return o2.sendGetBlock ? o2.sendGetBlock(t3, o2) : function(t4, r3) {
                  r3 === void 0 && (r3 = {});
                  try {
                    return e3.invariant(r3.node, "SDK Send Get Block Error: opts.node must be defined."), Promise.resolve(t4).then(function(e4) {
                      var o3 = (t4 = e4).block.height !== null;
                      return Promise.resolve(t4.block.id !== null ? function(e5, t5) {
                        try {
                          var r4 = t5.unary || Oe, o4 = new n.GetBlockByIDRequest();
                          return o4.setId(Buffer.from(e5.block.id, "hex")), Promise.resolve(r4(t5.node, n.AccessAPI.GetBlockByID, o4)).then(function(t6) {
                            return Je(e5, t6);
                          });
                        } catch (e6) {
                          return Promise.reject(e6);
                        }
                      }(t4, r3) : o3 ? function(e5, t5) {
                        try {
                          var r4 = t5.unary || Oe, o4 = new n.GetBlockByHeightRequest();
                          return o4.setHeight(Number(e5.block.height)), Promise.resolve(r4(t5.node, n.AccessAPI.GetBlockByHeight, o4)).then(function(t6) {
                            return Je(e5, t6);
                          });
                        } catch (e6) {
                          return Promise.reject(e6);
                        }
                      }(t4, r3) : function(e5, t5) {
                        try {
                          var r4, o4 = t5.unary || Oe, i6 = new n.GetLatestBlockRequest();
                          return (r4 = e5.block) != null && r4.isSealed && i6.setIsSealed(e5.block.isSealed), Promise.resolve(o4(t5.node, n.AccessAPI.GetLatestBlock, i6)).then(function(t6) {
                            return Je(e5, t6);
                          });
                        } catch (e6) {
                          return Promise.reject(e6);
                        }
                      }(t4, r3));
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              case re(t3):
                return o2.sendGetBlockHeader ? o2.sendGetBlockHeader(t3, o2) : function(t4, r3) {
                  r3 === void 0 && (r3 = {});
                  try {
                    return e3.invariant(r3.node, "SDK Send Get Block Header Error: opts.node must be defined."), Promise.resolve(t4).then(function(e4) {
                      var o3 = (t4 = e4).block.height !== null;
                      return Promise.resolve(t4.block.id !== null ? function(e5, t5) {
                        try {
                          var r4 = t5.unary || Oe, o4 = new n.GetBlockHeaderByIDRequest();
                          return o4.setId(Buffer.from(e5.block.id, "hex")), Promise.resolve(r4(t5.node, n.AccessAPI.GetBlockHeaderByID, o4)).then(function(t6) {
                            return Ve(e5, t6);
                          });
                        } catch (e6) {
                          return Promise.reject(e6);
                        }
                      }(t4, r3) : o3 ? function(e5, t5) {
                        try {
                          var r4 = t5.unary || Oe, o4 = new n.GetBlockHeaderByHeightRequest();
                          return o4.setHeight(Number(e5.block.height)), Promise.resolve(r4(t5.node, n.AccessAPI.GetBlockHeaderByHeight, o4)).then(function(t6) {
                            return Ve(e5, t6);
                          });
                        } catch (e6) {
                          return Promise.reject(e6);
                        }
                      }(t4, r3) : function(e5, t5) {
                        try {
                          var r4, o4 = t5.unary || Oe, i6 = new n.GetLatestBlockHeaderRequest();
                          return (r4 = e5.block) != null && r4.isSealed && i6.setIsSealed(e5.block.isSealed), Promise.resolve(o4(t5.node, n.AccessAPI.GetLatestBlockHeader, i6)).then(function(t6) {
                            return Ve(e5, t6);
                          });
                        } catch (e6) {
                          return Promise.reject(e6);
                        }
                      }(t4, r3));
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              case Q(t3):
                return o2.sendGetBlockById ? o2.sendGetBlockById(t3, o2) : function(t4, r3) {
                  r3 === void 0 && (r3 = {});
                  try {
                    return e3.invariant(r3.node, "SDK Send Get Block By ID Error: opts.node must be defined."), Promise.resolve(t4).then(function(e4) {
                      t4 = e4;
                      var o3 = new n.GetBlockByIDRequest();
                      return o3.setId(Buffer.from(t4.block.id, "hex")), Promise.resolve(Oe(r3.node, n.AccessAPI.GetBlockByID, o3)).then(function(e5) {
                        var n2 = e5.getBlock(), r4 = n2.getCollectionGuaranteesList(), o4 = n2.getBlockSealsList(), i6 = n2.getSignaturesList(), s5 = Ne();
                        return s5.tag = t4.tag, s5.block = { id: Xe(n2.getId_asU8()), parentId: Xe(n2.getParentId_asU8()), height: n2.getHeight(), timestamp: n2.getTimestamp(), collectionGuarantees: r4.map(function(e6) {
                          return { collectionId: Xe(e6.getCollectionId_asU8()), signatures: e6.getSignaturesList() };
                        }), blockSeals: o4.map(function(e6) {
                          return { blockId: Xe(e6.getBlockId_asU8()), executionReceiptId: Xe(e6.getExecutionReceiptId_asU8()), executionReceiptSignatures: e6.getExecutionReceiptSignaturesList(), resultApprovalSignatures: e6.getResultApprovalSignaturesList() };
                        }), signatures: i6 }, s5;
                      });
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              case ee(t3):
                return o2.sendGetBlockByHeight ? o2.sendGetBlockByHeight(t3, o2) : function(t4, r3) {
                  r3 === void 0 && (r3 = {});
                  try {
                    return e3.invariant(r3.node, "SDK Send Get Block By Height Error: opts.node must be defined."), Promise.resolve(t4).then(function(e4) {
                      t4 = e4;
                      var o3 = new n.GetBlockByHeightRequest();
                      return o3.setHeight(Number(t4.block.height)), Promise.resolve(Oe(r3.node, n.AccessAPI.GetBlockByHeight, o3)).then(function(e5) {
                        var n2 = e5.getBlock(), r4 = n2.getCollectionGuaranteesList(), o4 = n2.getBlockSealsList(), i6 = n2.getSignaturesList(), s5 = Ne();
                        return s5.tag = t4.tag, s5.block = { id: $e(n2.getId_asU8()), parentId: $e(n2.getParentId_asU8()), height: n2.getHeight(), timestamp: n2.getTimestamp(), collectionGuarantees: r4.map(function(e6) {
                          return { collectionId: $e(e6.getCollectionId_asU8()), signatures: e6.getSignaturesList() };
                        }), blockSeals: o4.map(function(e6) {
                          return { blockId: $e(e6.getBlockId_asU8()), executionReceiptId: $e(e6.getExecutionReceiptId_asU8()), executionReceiptSignatures: e6.getExecutionReceiptSignaturesList(), resultApprovalSignatures: e6.getResultApprovalSignaturesList() };
                        }), signatures: i6 }, s5;
                      });
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              case oe(t3):
                return o2.sendGetCollection ? o2.sendGetCollection(t3, o2) : function(t4, r3) {
                  r3 === void 0 && (r3 = {});
                  try {
                    e3.invariant(r3.node, "SDK Send Get Collection Error: opts.node must be defined.");
                    var o3 = r3.unary || Oe;
                    return Promise.resolve(t4).then(function(e4) {
                      t4 = e4;
                      var i6 = new n.GetCollectionByIDRequest();
                      return i6.setId(Buffer.from(t4.collection.id, "hex")), Promise.resolve(o3(r3.node, n.AccessAPI.GetCollectionByID, i6)).then(function(e5) {
                        var n2 = e5.getCollection(), r4 = Ne();
                        return r4.tag = t4.tag, r4.collection = { id: Ze(n2.getId_asU8()), transactionIds: n2.getTransactionIdsList().map(Ze) }, r4;
                      });
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              case te(t3):
                return o2.sendPing ? o2.sendPing(t3, o2) : function(t4, r3) {
                  r3 === void 0 && (r3 = {});
                  try {
                    e3.invariant(r3.node, "SDK Send Ping Error: opts.node must be defined.");
                    var o3 = r3.unary || Oe;
                    return Promise.resolve(t4).then(function(e4) {
                      t4 = e4;
                      var i6 = new n.PingRequest();
                      return Promise.resolve(o3(r3.node, n.AccessAPI.Ping, i6)).then(function(e5) {
                        var n2 = Ne();
                        return n2.tag = t4.tag, n2;
                      });
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }(t3, o2);
              default:
                return t3;
            }
          });
        }, s4 = o2.node;
        return Promise.resolve(s4 ? i3(s4) : Promise.resolve(Ee().get("accessNode.api")).then(i3));
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    function et(e4) {
      return e4 === void 0 && (e4 = null), ue([H, function(t3) {
        return t3.block.isSealed = e4, A2(t3);
      }]);
    }
    function tt(e4) {
      return ue([_, function(t3) {
        return t3.account.addr = r2.sansPrefix(e4), A2(t3);
      }]);
    }
    var nt = function(e4, t3, n2) {
      try {
        try {
          return Promise.resolve(Number(e4));
        } catch (e5) {
          throw new Error("Decode Number Error : " + n2.join("."));
        }
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var rt = function(e4) {
      return Promise.resolve(e4);
    };
    var ot = function(e4, t3, n2) {
      try {
        return Promise.resolve(e4.fields.reduce(function(e5, r3) {
          return Promise.resolve(e5).then(function(o2) {
            return e5 = o2, Promise.resolve(ut(r3.value, t3, [].concat(n2, [r3.name]))).then(function(t4) {
              return e5[r3.name] = t4, e5;
            });
          });
        }, Promise.resolve({}))).then(function(n3) {
          var r3 = e4.id && st(t3, e4.id);
          return r3 ? Promise.resolve(r3(n3)) : n3;
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var it = { UInt: nt, Int: nt, UInt8: nt, Int8: nt, UInt16: nt, Int16: nt, UInt32: nt, Int32: nt, UInt64: nt, Int64: nt, UInt128: nt, Int128: nt, UInt256: nt, Int256: nt, Word8: nt, Word16: nt, Word32: nt, Word64: nt, UFix64: rt, Fix64: rt, String: rt, Character: rt, Bool: rt, Address: rt, Void: function() {
      return Promise.resolve(null);
    }, Optional: function(e4, t3, n2) {
      return Promise.resolve(e4 ? ut(e4, t3, n2) : null);
    }, Reference: function(e4) {
      try {
        return Promise.resolve({ address: e4.address, type: e4.type });
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, Array: function(e4, t3, n2) {
      try {
        return Promise.resolve(Promise.all(e4.map(function(e5) {
          return new Promise(function(r3) {
            try {
              return Promise.resolve(ut(e5, t3, [].concat(n2, [e5.type]))).then(r3);
            } catch (e6) {
              return Promise.reject(e6);
            }
          });
        })));
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, Dictionary: function(e4, t3, n2) {
      try {
        return Promise.resolve(e4.reduce(function(e5, r3) {
          return Promise.resolve(e5).then(function(o2) {
            return e5 = o2, Promise.resolve(ut(r3.key, t3, [].concat(n2, [r3.key]))).then(function(o3) {
              return Promise.resolve(ut(r3.value, t3, [].concat(n2, [r3.key]))).then(function(t4) {
                return e5[o3] = t4, e5;
              });
            });
          });
        }, Promise.resolve({})));
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, Event: ot, Resource: ot, Struct: ot, Enum: ot, Type: function(e4) {
      try {
        return Promise.resolve(e4.staticType);
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, Path: function(e4) {
      try {
        return Promise.resolve({ domain: e4.domain, identifier: e4.identifier });
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, Capability: function(e4) {
      try {
        return Promise.resolve({ path: e4.path, address: e4.address, borrowType: e4.borrowType });
      } catch (e5) {
        return Promise.reject(e5);
      }
    } };
    var st = function(e4, t3) {
      var n2 = Object.keys(e4).find(function(e5) {
        return /^\/.*\/$/.test(e5) ? new RegExp(e5.substring(1, e5.length - 1)).test(t3) : e5 === t3;
      });
      return t3 && n2 && e4[n2];
    };
    var ut = function(e4, t3, n2) {
      try {
        var r3 = st(t3, e4.type);
        if (!r3)
          throw new Error("Undefined Decoder Error: " + e4.type + "@" + n2.join("."));
        return Promise.resolve(r3(e4.value, t3, n2));
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var at = function(e4, t3, n2) {
      t3 === void 0 && (t3 = {}), n2 === void 0 && (n2 = []);
      var r3 = c2({}, it, t3);
      return Promise.resolve(ut(e4, r3, n2));
    };
    var ct = function(e4, t3) {
      t3 === void 0 && (t3 = {});
      try {
        var n2, r3 = c2({}, it, t3), o2 = e4.encodedData ? Promise.resolve(at(e4.encodedData, r3)).then(function(e5) {
          return n2 = 1, e5;
        }) : e4.transactionStatus ? Promise.resolve(Promise.all(e4.transactionStatus.events.map(function(e5) {
          try {
            var t4 = e5.eventIndex, n3 = e5.transactionIndex, o3 = e5.transactionId, i3 = e5.type;
            return Promise.resolve(at(e5.payload, r3)).then(function(e6) {
              return { type: i3, transactionId: o3, transactionIndex: n3, eventIndex: t4, data: e6 };
            });
          } catch (e6) {
            return Promise.reject(e6);
          }
        }))).then(function(t4) {
          var r4 = c2({}, e4.transactionStatus, { events: t4 });
          return n2 = 1, r4;
        }) : e4.transaction ? (n2 = 1, e4.transaction) : e4.events ? Promise.resolve(Promise.all(e4.events.map(function(e5) {
          try {
            var t4 = e5.eventIndex, n3 = e5.transactionIndex, o3 = e5.transactionId, i3 = e5.type, s4 = e5.blockTimestamp, u2 = e5.blockHeight, a3 = e5.blockId;
            return Promise.resolve(at(e5.payload, r3)).then(function(e6) {
              return { blockId: a3, blockHeight: u2, blockTimestamp: s4, type: i3, transactionId: o3, transactionIndex: n3, eventIndex: t4, data: e6 };
            });
          } catch (e6) {
            return Promise.reject(e6);
          }
        }))).then(function(e5) {
          return n2 = 1, e5;
        }) : e4.account ? (n2 = 1, e4.account) : e4.block ? (n2 = 1, e4.block) : e4.blockHeader ? (n2 = 1, e4.blockHeader) : e4.latestBlock ? (console.error("\n          %c@onflow/decode Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        ".replace(/\n\s+/g, "\n").trim(), "font-weight:bold;font-family:monospace;"), n2 = 1, e4.latestBlock) : e4.transactionId ? (n2 = 1, e4.transactionId) : e4.collection ? (n2 = 1, e4.collection) : void 0;
        return Promise.resolve(o2 && o2.then ? o2.then(function(e5) {
          return n2 ? e5 : null;
        }) : n2 ? o2 : null);
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var lt = function(t3) {
      try {
        var n2 = function() {
          if (W(t3) || J(t3)) {
            var n3 = function() {
              return e3.invariant(dt(r3), "Cadence needs to be a string at this point."), Promise.resolve(Ee().where(/^0x/).then(function(e4) {
                return Object.entries(e4).reduce(function(e5, t4) {
                  var n4 = t4[1], r4 = new RegExp("(\\b" + t4[0] + "\\b)", "g");
                  return e5.replace(r4, n4);
                }, r3);
              })).then(function(e4) {
                t3.message.cadence = e4;
              });
            }, r3 = ce(t3, "ix.cadence");
            e3.invariant(ft(r3) || dt(r3), "Cadence needs to be a function or a string.");
            var o2 = function() {
              if (ft(r3))
                return Promise.resolve(r3({})).then(function(e4) {
                  r3 = e4;
                });
            }();
            return o2 && o2.then ? o2.then(n3) : n3();
          }
        }();
        return Promise.resolve(n2 && n2.then ? n2.then(function() {
          return t3;
        }) : t3);
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    var ft = function(e4) {
      return typeof e4 == "function";
    };
    var dt = function(e4) {
      return typeof e4 == "string";
    };
    var mt = typeof Symbol != "undefined" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";
    function pt(e4, t3, n2) {
      if (!e4.s) {
        if (n2 instanceof gt) {
          if (!n2.s)
            return void (n2.o = pt.bind(null, e4, t3));
          1 & t3 && (t3 = n2.s), n2 = n2.v;
        }
        if (n2 && n2.then)
          return void n2.then(pt.bind(null, e4, t3), pt.bind(null, e4, 2));
        e4.s = t3, e4.v = n2;
        var r3 = e4.o;
        r3 && r3(e4);
      }
    }
    var gt = function() {
      function e4() {
      }
      return e4.prototype.then = function(t3, n2) {
        var r3 = new e4(), o2 = this.s;
        if (o2) {
          var i3 = 1 & o2 ? t3 : n2;
          if (i3) {
            try {
              pt(r3, 1, i3(this.v));
            } catch (e5) {
              pt(r3, 2, e5);
            }
            return r3;
          }
          return this;
        }
        return this.o = function(e5) {
          try {
            var o3 = e5.v;
            1 & e5.s ? pt(r3, 1, t3 ? t3(o3) : o3) : n2 ? pt(r3, 1, n2(o3)) : pt(r3, 2, o3);
          } catch (e6) {
            pt(r3, 2, e6);
          }
        }, r3;
      }, e4;
    }();
    function ht(e4) {
      return e4 instanceof gt && 1 & e4.s;
    }
    var vt;
    var yt = function(t3) {
      try {
        var n2 = function() {
          if (W(t3) || J(t3)) {
            var n3 = function(e4, t4, n4) {
              if (typeof e4[mt] == "function") {
                var r3, o2, i3, s4 = e4[mt]();
                if (function e5(n5) {
                  try {
                    for (; !(r3 = s4.next()).done; )
                      if ((n5 = t4(r3.value)) && n5.then) {
                        if (!ht(n5))
                          return void n5.then(e5, i3 || (i3 = pt.bind(null, o2 = new gt(), 2)));
                        n5 = n5.v;
                      }
                    o2 ? pt(o2, 1, n5) : o2 = n5;
                  } catch (e6) {
                    pt(o2 || (o2 = new gt()), 2, e6);
                  }
                }(), s4.return) {
                  var u2 = function(e5) {
                    try {
                      r3.done || s4.return();
                    } catch (e6) {
                    }
                    return e5;
                  };
                  if (o2 && o2.then)
                    return o2.then(u2, function(e5) {
                      throw u2(e5);
                    });
                  u2();
                }
                return o2;
              }
              if (!("length" in e4))
                throw new TypeError("Object is not iterable");
              for (var a3 = [], c3 = 0; c3 < e4.length; c3++)
                a3.push(e4[c3]);
              return function(e5, t5, n5) {
                var r4, o3, i4 = -1;
                return function n6(s5) {
                  try {
                    for (; ++i4 < e5.length; )
                      if ((s5 = t5(i4)) && s5.then) {
                        if (!ht(s5))
                          return void s5.then(n6, o3 || (o3 = pt.bind(null, r4 = new gt(), 2)));
                        s5 = s5.v;
                      }
                    r4 ? pt(r4, 1, s5) : r4 = s5;
                  } catch (e6) {
                    pt(r4 || (r4 = new gt()), 2, e6);
                  }
                }(), r4;
              }(a3, function(e5) {
                return t4(a3[e5]);
              });
            }(Object.entries(t3.arguments), function(n4) {
              var r3 = n4[0];
              return Promise.resolve(kt(n4[1])).then(function(n5) {
                var o2;
                t3.arguments[r3].asArgument = (e3.invariant(typeof (o2 = n5).xform != null, "No type specified for argument: " + o2.value), bt(o2.xform) ? o2.xform(o2.value) : bt(o2.xform.asArgument) ? o2.xform.asArgument(o2.value) : void e3.invariant(false, "Invalid Argument", o2));
              });
            });
            if (n3 && n3.then)
              return n3.then(function() {
              });
          }
        }();
        return Promise.resolve(n2 && n2.then ? n2.then(function() {
          return t3;
        }) : t3);
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    var kt = function t3(n2, r3) {
      r3 === void 0 && (r3 = 3);
      try {
        return e3.invariant(r3 > 0, "Argument Resolve Recursion Limit Exceeded for Arg: " + n2.tempId), bt(n2.resolveArgument) ? Promise.resolve(n2.resolveArgument()).then(function(e4) {
          return t3(e4, r3 - 1);
        }) : Promise.resolve(n2);
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    var bt = function(e4) {
      return typeof e4 == "function";
    };
    var It = function(e4) {
      return Bt(Nt(Ot(e4)));
    };
    var Pt = function(e4) {
      return Bt(Nt(jt(e4)));
    };
    var St = function(e4, t3) {
      return Buffer.from(e4.padStart(2 * t3, 0), "hex");
    };
    var xt = (vt = Buffer.from("FLOW-V0.0-transaction").toString("hex"), Buffer.from(vt.padEnd(64, 0), "hex")).toString("hex");
    var Bt = function(e4) {
      return xt + e4;
    };
    var At = function(e4) {
      return St(e4, 8);
    };
    var wt = function(e4) {
      return St(e4, 32);
    };
    var Et = function(e4) {
      return Buffer.from(JSON.stringify(e4), "utf8");
    };
    var Tt = function(e4) {
      return Buffer.from(e4, "utf8");
    };
    var Gt = function(e4) {
      return Buffer.from(e4, "hex");
    };
    var Nt = function(e4) {
      return u.encode(e4).toString("hex");
    };
    var Ot = function(e4) {
      return Rt(e4), [Tt(e4.cadence), e4.arguments.map(Et), wt(e4.refBlock), e4.computeLimit, At(e4.proposalKey.address), e4.proposalKey.keyId, e4.proposalKey.sequenceNum, At(e4.payer), e4.authorizers.map(At)];
    };
    var jt = function(e4) {
      return Ct(e4), [Ot(e4), Lt(e4)];
    };
    var Lt = function(e4) {
      var t3 = _t(e4);
      return e4.payloadSigs.map(function(e5) {
        return { signerIndex: t3.get(e5.address), keyId: e5.keyId, sig: e5.sig };
      }).sort(function(e5, t4) {
        return e5.signerIndex > t4.signerIndex ? 1 : e5.signerIndex < t4.signerIndex ? -1 : e5.keyId > t4.keyId ? 1 : e5.keyId < t4.keyId ? -1 : void 0;
      }).map(function(e5) {
        return [e5.signerIndex, e5.keyId, Gt(e5.sig)];
      });
    };
    var _t = function(e4) {
      var t3 = new Map(), n2 = 0, r3 = function(e5) {
        t3.has(e5) || (t3.set(e5, n2), n2++);
      };
      return r3(e4.proposalKey.address), r3(e4.payer), e4.authorizers.forEach(r3), t3;
    };
    var Rt = function(e4) {
      qt.forEach(function(t3) {
        return Vt(e4, t3);
      }), Ft.forEach(function(t3) {
        return Vt(e4.proposalKey, t3, "proposalKey");
      });
    };
    var Ct = function(e4) {
      zt.forEach(function(t3) {
        return Vt(e4, t3);
      }), e4.payloadSigs.forEach(function(e5, t3) {
        Mt.forEach(function(n2) {
          return Vt(e5, n2, "payloadSigs", t3);
        });
      });
    };
    var Dt = function(e4) {
      return typeof e4 == "number";
    };
    var Ut = function(e4) {
      return typeof e4 == "string";
    };
    var Kt = function(e4) {
      return e4 !== null && typeof e4 == "object";
    };
    var Ht = function(e4) {
      return Kt(e4) && e4 instanceof Array;
    };
    var qt = [{ name: "cadence", check: Ut }, { name: "arguments", check: Ht }, { name: "refBlock", check: Ut, defaultVal: "0" }, { name: "computeLimit", check: Dt }, { name: "proposalKey", check: Kt }, { name: "payer", check: Ut }, { name: "authorizers", check: Ht }];
    var Ft = [{ name: "address", check: Ut }, { name: "keyId", check: Dt }, { name: "sequenceNum", check: Dt }];
    var zt = [{ name: "payloadSigs", check: Ht }];
    var Mt = [{ name: "address", check: Ut }, { name: "keyId", check: Dt }, { name: "sig", check: Ut }];
    var Jt = [{ name: "envelopeSigs", check: Ht }];
    var Wt = [{ name: "address", check: Ut }, { name: "keyId", check: Dt }, { name: "sig", check: Ut }];
    var Vt = function(e4, t3, n2, r3) {
      var o2 = t3.name, i3 = t3.check, s4 = t3.defaultVal;
      if (e4[o2] == null && s4 != null && (e4[o2] = s4), e4[o2] == null)
        throw Xt(o2, n2, r3);
      if (!i3(e4[o2]))
        throw $t(o2, n2, r3);
    };
    var Yt = function(e4, t3, n2) {
      return t3 ? n2 == null ? t3 + "." + e4 : t3 + "." + n2 + "." + e4 : e4;
    };
    var Xt = function(e4, t3, n2) {
      return new Error("Missing field " + Yt(e4, t3, n2));
    };
    var $t = function(e4, t3, n2) {
      return new Error("Invalid field " + Yt(e4, t3, n2));
    };
    function Zt(e4) {
      var t3 = new Set(e4.authorizations);
      return t3.add(e4.proposer), t3.delete(e4.payer), Array.from(t3);
    }
    function Qt(e4) {
      var t3 = new Set([e4.payer]);
      return Array.from(t3);
    }
    var en = function(e4) {
      return { cadence: e4.message.cadence, refBlock: e4.message.refBlock || null, computeLimit: e4.message.computeLimit, arguments: e4.message.arguments.map(function(t4) {
        return e4.arguments[t4].asArgument;
      }), proposalKey: { address: r2.withPrefix(e4.accounts[e4.proposer].addr), keyId: e4.accounts[e4.proposer].keyId, sequenceNum: e4.accounts[e4.proposer].sequenceNum }, payer: r2.withPrefix(e4.accounts[e4.payer].addr), authorizers: (t3 = e4.authorizations.map(function(t4) {
        return r2.withPrefix(e4.accounts[t4].addr);
      }).reduce(function(e5, t4) {
        return e5.find(function(e6) {
          return e6 === t4;
        }) ? e5 : [].concat(e5, [t4]);
      }, []), t3[0] ? t3 : []), payloadSigs: Zt(e4).map(function(t4) {
        return { address: r2.withPrefix(e4.accounts[t4].addr), keyId: e4.accounts[t4].keyId, sig: e4.accounts[t4].signature };
      }), envelopeSigs: Qt(e4).map(function(t4) {
        return { address: r2.withPrefix(e4.accounts[t4].addr), keyId: e4.accounts[t4].keyId, sig: e4.accounts[t4].signature };
      }) };
      var t3;
    };
    var tn = typeof Symbol != "undefined" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";
    function nn(e4, t3, n2) {
      if (!e4.s) {
        if (n2 instanceof rn) {
          if (!n2.s)
            return void (n2.o = nn.bind(null, e4, t3));
          1 & t3 && (t3 = n2.s), n2 = n2.v;
        }
        if (n2 && n2.then)
          return void n2.then(nn.bind(null, e4, t3), nn.bind(null, e4, 2));
        e4.s = t3, e4.v = n2;
        var r3 = e4.o;
        r3 && r3(e4);
      }
    }
    var rn = function() {
      function e4() {
      }
      return e4.prototype.then = function(t3, n2) {
        var r3 = new e4(), o2 = this.s;
        if (o2) {
          var i3 = 1 & o2 ? t3 : n2;
          if (i3) {
            try {
              nn(r3, 1, i3(this.v));
            } catch (e5) {
              nn(r3, 2, e5);
            }
            return r3;
          }
          return this;
        }
        return this.o = function(e5) {
          try {
            var o3 = e5.v;
            1 & e5.s ? nn(r3, 1, t3 ? t3(o3) : o3) : n2 ? nn(r3, 1, n2(o3)) : nn(r3, 2, o3);
          } catch (e6) {
            nn(r3, 2, e6);
          }
        }, r3;
      }, e4;
    }();
    function on(e4) {
      return e4 instanceof rn && 1 & e4.s;
    }
    var sn = function(e4) {
      try {
        var t3 = function() {
          if (W(e4))
            return function(t4, n2) {
              try {
                var r3 = Promise.resolve(un(e4, Object.values(e4.accounts))).then(function() {
                  return Promise.resolve(un(e4, Object.values(e4.accounts))).then(function() {
                  });
                });
              } catch (e5) {
                return n2(e5);
              }
              return r3 && r3.then ? r3.then(void 0, n2) : r3;
            }(0, function(e5) {
              throw console.error("=== SAD PANDA ===\n\n", e5, "\n\n=== SAD PANDA ==="), e5;
            });
        }();
        return Promise.resolve(t3 && t3.then ? t3.then(function(t4) {
          return e4;
        }) : e4);
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var un = function t3(n2, r3, o2, i3) {
      i3 === void 0 && (i3 = 3);
      try {
        var s4 = function() {
          o2 && (n2.authorizations = n2.authorizations.map(function(e4) {
            return e4 === o2.tempId ? u2 : e4;
          }).reduce(function(e4, t4) {
            return Array.isArray(t4) ? [].concat(e4, t4) : [].concat(e4, [t4]);
          }, []));
        };
        e3.invariant(i3, "Account Resolve Recursion Limit Exceeded", { ix: n2, accounts: r3 });
        var u2 = [], a3 = function(e4, t4, n3) {
          if (typeof e4[tn] == "function") {
            var r4, o3, i4, s5 = e4[tn]();
            if (function e5(n4) {
              try {
                for (; !(r4 = s5.next()).done; )
                  if ((n4 = t4(r4.value)) && n4.then) {
                    if (!on(n4))
                      return void n4.then(e5, i4 || (i4 = nn.bind(null, o3 = new rn(), 2)));
                    n4 = n4.v;
                  }
                o3 ? nn(o3, 1, n4) : o3 = n4;
              } catch (e6) {
                nn(o3 || (o3 = new rn()), 2, e6);
              }
            }(), s5.return) {
              var u3 = function(e5) {
                try {
                  r4.done || s5.return();
                } catch (e6) {
                }
                return e5;
              };
              if (o3 && o3.then)
                return o3.then(u3, function(e5) {
                  throw u3(e5);
                });
              u3();
            }
            return o3;
          }
          if (!("length" in e4))
            throw new TypeError("Object is not iterable");
          for (var a4 = [], c3 = 0; c3 < e4.length; c3++)
            a4.push(e4[c3]);
          return function(e5, t5, n4) {
            var r5, o4, i5 = -1;
            return function n5(s6) {
              try {
                for (; ++i5 < e5.length; )
                  if ((s6 = t5(i5)) && s6.then) {
                    if (!on(s6))
                      return void s6.then(n5, o4 || (o4 = nn.bind(null, r5 = new rn(), 2)));
                    s6 = s6.v;
                  }
                r5 ? nn(r5, 1, s6) : r5 = s6;
              } catch (e6) {
                nn(r5 || (r5 = new rn()), 2, e6);
              }
            }(), r5;
          }(a4, function(e5) {
            return t4(a4[e5]);
          });
        }(r3, function(e4) {
          function r4() {
            function r5() {
              s5.tempId != e4.tempId && delete n2.accounts[s5.tempId];
            }
            var a5 = function() {
              if (Array.isArray(e4))
                return Promise.resolve(t3(n2, e4, s5, i3 - 1)).then(function() {
                });
              e4.addr != null && e4.keyId != null && (e4.tempId = e4.addr + "-" + e4.keyId), n2.accounts[e4.tempId] = n2.accounts[e4.tempId] || e4, n2.accounts[e4.tempId].role.proposer = n2.accounts[e4.tempId].role.proposer || e4.role.proposer, n2.accounts[e4.tempId].role.payer = n2.accounts[e4.tempId].role.payer || e4.role.payer, n2.accounts[e4.tempId].role.authorizer = n2.accounts[e4.tempId].role.authorizer || e4.role.authorizer, n2.accounts[e4.tempId].role.proposer && n2.proposer === s5.tempId && (n2.proposer = e4.tempId), n2.accounts[e4.tempId].role.payer && n2.payer === s5.tempId && (n2.payer = e4.tempId), n2.accounts[e4.tempId].role.authorizer && (o2 ? u2 = Array.from(new Set([].concat(u2, [e4.tempId]))) : n2.authorizations = n2.authorizations.map(function(t4) {
                return t4 === s5.tempId ? e4.tempId : t4;
              }));
            }();
            return a5 && a5.then ? a5.then(r5) : r5();
          }
          var s5 = o2 || e4, a4 = function() {
            if (an(e4.resolve))
              return Promise.resolve(e4.resolve(e4, function(e5, t4) {
                try {
                  return { f_type: "PreSignable", f_vsn: "1.0.1", roles: e5.role, cadence: t4.message.cadence, args: t4.message.arguments.map(function(e6) {
                    return t4.arguments[e6].asArgument;
                  }), data: {}, interaction: t4, voucher: en(t4) };
                } catch (e6) {
                  throw console.error("buildPreSignable", e6), e6;
                }
              }(e4, n2))).then(function(t4) {
                e4 = t4;
              });
          }();
          return a4 && a4.then ? a4.then(r4) : r4();
        });
        return Promise.resolve(a3 && a3.then ? a3.then(s4) : s4());
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    var an = function(e4) {
      return typeof e4 == "function";
    };
    var cn = function(e4) {
      try {
        var t3 = function() {
          if (W(e4))
            return function(t4, n2) {
              try {
                var r3 = (o2 = Zt(e4), i3 = It(fn(e4)), Promise.resolve(Promise.all(o2.map(ln(e4, i3)))).then(function() {
                  var t5 = Qt(e4), n3 = Pt(c2({}, fn(e4), { payloadSigs: o2.map(function(t6) {
                    return { address: e4.accounts[t6].addr, keyId: e4.accounts[t6].keyId, sig: e4.accounts[t6].signature };
                  }) }));
                  return Promise.resolve(Promise.all(t5.map(ln(e4, n3)))).then(function() {
                  });
                }));
              } catch (e5) {
                return n2(e5);
              }
              var o2, i3;
              return r3 && r3.then ? r3.then(void 0, n2) : r3;
            }(0, function(t4) {
              throw console.error("Signatures", t4, { ix: e4 }), t4;
            });
        }();
        return Promise.resolve(t3 && t3.then ? t3.then(function(t4) {
          return e4;
        }) : e4);
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    function ln(e4, t3) {
      return function(n2) {
        try {
          var o2 = e4.accounts[n2];
          return o2.signature != null ? Promise.resolve() : Promise.resolve(o2.signingFunction(function(e5, t4, n3) {
            try {
              return { f_type: "Signable", f_vsn: "1.0.1", message: t4, addr: r2.sansPrefix(e5.addr), keyId: e5.keyId, roles: e5.role, cadence: n3.message.cadence, args: n3.message.arguments.map(function(e6) {
                return n3.arguments[e6].asArgument;
              }), data: {}, interaction: n3, voucher: en(n3) };
            } catch (e6) {
              throw console.error("buildSignable", e6), e6;
            }
          }(o2, t3, e4))).then(function(t4) {
            e4.accounts[n2].signature = t4.signature;
          });
        } catch (e5) {
          return Promise.reject(e5);
        }
      };
    }
    function fn(e4) {
      return { cadence: e4.message.cadence, refBlock: e4.message.refBlock || null, computeLimit: e4.message.computeLimit, arguments: e4.message.arguments.map(function(t3) {
        return e4.arguments[t3].asArgument;
      }), proposalKey: { address: r2.sansPrefix(e4.accounts[e4.proposer].addr), keyId: e4.accounts[e4.proposer].keyId, sequenceNum: e4.accounts[e4.proposer].sequenceNum }, payer: r2.sansPrefix(e4.accounts[e4.payer].addr), authorizers: e4.authorizations.map(function(t3) {
        return r2.sansPrefix(e4.accounts[t3].addr);
      }).reduce(function(e5, t3) {
        return e5.find(function(e6) {
          return e6 === t3;
        }) ? e5 : [].concat(e5, [t3]);
      }, []) };
    }
    var dn = function(e4) {
      try {
        var t3 = ce(e4, "ix.validators", []);
        return Promise.resolve(ue(e4, t3.map(function(e5) {
          return function(t4) {
            return e5(t4, { Ok: A2, Bad: w });
          };
        })));
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var mn = function(e4) {
      try {
        for (var t3 = 0, n2 = Object.keys(e4.accounts); t3 < n2.length; t3++) {
          var o2 = n2[t3];
          e4.accounts[o2].addr = r2.sansPrefix(e4.accounts[o2].addr);
        }
        return Promise.resolve(e4);
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var pn = function(e4) {
      return e4;
    };
    var gn = function(e4, t3) {
      return t3 === void 0 && (t3 = pn), function(n2) {
        try {
          var r3 = function(e5) {
            return ["\nAccounts:", { proposer: e5.proposer, authorizations: e5.authorizations, payer: e5.payer }, "\n\nDetails:", e5.accounts].filter(Boolean);
          }, o2 = function() {
            var t4;
            (t4 = console).log.apply(t4, ["debug[" + e4 + "] ---\n"].concat([].slice.call(arguments), ["\n\n\n---"]));
          };
          return Promise.resolve(Ee.get("debug." + e4)).then(function(e5) {
            var i3 = function() {
              if (e5)
                return Promise.resolve(t3(n2, o2, r3)).then(function() {
                });
            }();
            return i3 && i3.then ? i3.then(function() {
              return n2;
            }) : n2;
          });
        } catch (e5) {
          return Promise.reject(e5);
        }
      };
    };
    var hn = ue([lt, gn("cadence", function(e4, t3) {
      return t3(e4.message.cadence);
    }), yt, gn("arguments", function(e4, t3) {
      return t3(e4.message.arguments, e4.message);
    }), sn, gn("accounts", function(e4, t3, n2) {
      return t3.apply(void 0, n2(e4));
    }), function(e4) {
      try {
        var t3 = function() {
          if (W(e4) && e4.message.refBlock == null)
            return Promise.resolve(Ee.first(["sdk.transport", "sdk.send"], Qe)).then(function(t4) {
              return Promise.resolve(t4(de([et()])).then(ct)).then(function(t5) {
                e4.message.refBlock = t5.id;
              });
            });
        }();
        return Promise.resolve(t3 && t3.then ? t3.then(function() {
          return e4;
        }) : e4);
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, function(t3) {
      try {
        var n2 = function() {
          if (W(t3))
            return Promise.resolve(Ee.first(["sdk.transport", "sdk.send"], Qe)).then(function(n3) {
              var r3 = Object.values(t3.accounts).find(function(e4) {
                return e4.role.proposer;
              });
              e3.invariant(r3, "Transactions require a proposer");
              var o2 = function() {
                if (r3.sequenceNum == null)
                  return Promise.resolve(de([tt(r3.addr)])).then(function(e4) {
                    return Promise.resolve(n3(e4).then(ct).then(function(e5) {
                      return e5.keys;
                    }).then(function(e5) {
                      return e5.find(function(e6) {
                        return e6.index === r3.keyId;
                      });
                    }).then(function(e5) {
                      return e5.sequenceNumber;
                    })).then(function(e5) {
                      t3.accounts[r3.tempId].sequenceNum = e5;
                    });
                  });
              }();
              if (o2 && o2.then)
                return o2.then(function() {
                });
            });
        }();
        return Promise.resolve(n2 && n2.then ? n2.then(function() {
          return t3;
        }) : t3);
      } catch (e4) {
        return Promise.reject(e4);
      }
    }, cn, gn("signatures", function(e4, t3, n2) {
      return t3.apply(void 0, n2(e4));
    }), mn, dn, function(e4) {
      try {
        var t3 = ce(e4, "ix.pre-send-check"), n2 = function() {
          if (B(t3))
            return Promise.resolve(t3(en(e4))).then(function() {
            });
        }();
        return Promise.resolve(n2 && n2.then ? n2.then(function() {
          return e4;
        }) : e4);
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, gn("resolved", function(e4, t3) {
      return t3(e4);
    })]);
    var vn = function(e4, t3) {
      e4 === void 0 && (e4 = []), t3 === void 0 && (t3 = {});
      try {
        return Promise.resolve(Ee.first(["sdk.transport", "sdk.send"], t3.send || Qe)).then(function(n2) {
          return Promise.resolve(Ee.first(["sdk.resolve"], t3.resolve || hn)).then(function(r3) {
            return Array.isArray(e4) && (e4 = ue(k(), e4)), Promise.resolve(r3(e4)).then(function(e5) {
              return n2(e5, t3);
            });
          });
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var yn = function(e4) {
      var t3, n2;
      function r3(t4) {
        var n3, r4 = ("\n        Encode Message From Signable Error: Unable to determine message encoding for signer addresss: " + t4 + ". \n        Please ensure the address: " + t4 + " is intended to sign the given transaction as specified by the transaction signable.\n      ").trim();
        return (n3 = e4.call(this, r4) || this).name = "Unable To Determine Message Encoding For Signer Addresss", n3;
      }
      return n2 = e4, (t3 = r3).prototype = Object.create(n2.prototype), t3.prototype.constructor = t3, f4(t3, n2), r3;
    }(p(Error));
    function kn(e4) {
      return fe("ix.validators", function(t3) {
        return Array.isArray(t3) ? t3.push(e4) : [e4];
      });
    }
    function bn(e4) {
      return ue([function(t3) {
        return t3.block.height = e4, t3;
      }, kn(function(e5) {
        if (typeof e5.block.isSealed == "boolean")
          throw new Error("Unable to specify both block height and isSealed.");
        if (e5.block.id)
          throw new Error("Unable to specify both block height and block id.");
        return e5;
      })]);
    }
    function In(e4) {
      return ue([function(t3) {
        return t3.block.id = e4, A2(t3);
      }, kn(function(e5, t3) {
        var n2 = t3.Ok, r3 = t3.Bad;
        return X(e5) ? r3(e5, "Unable to specify a block id with a Get Account interaction.") : typeof e5.block.isSealed == "boolean" ? r3(e5, "Unable to specify both block id and isSealed.") : e5.block.height ? r3(e5, "Unable to specify both block id and block height.") : n2(e5);
      })]);
    }
    function Pn(e4) {
      return ue([function(t3) {
        return t3.message.refBlock = e4, A2(t3);
      }]);
    }
    var Sn = [];
    var xn = function(e4) {
      return e4;
    };
    var Bn = ["tempId"];
    function An(e4) {
      return ["SIGNATURE", e4.addr, e4.keyId].join(".");
    }
    function wn(e4) {
      return e4 === void 0 && (e4 = {}), function(t3) {
        var n2 = c2({}, t3, e4, { signingFunction: e4.signingFunction || t3.signingFunction || function(e5) {
          return { addr: n2.addr, keyId: n2.keyId, signature: An(n2) };
        } });
        return n2;
      };
    }
    var En = { proposer: false, authorizer: false, payer: false };
    var Tn = { __proto__: null, mockSend: function(t3) {
      return t3 === void 0 && (t3 = xn), function(n2) {
        return Promise.resolve(n2).then(function(r3) {
          switch (n2 = r3, true) {
            case X(n2):
              return function(t4, n3) {
                return n3 === void 0 && (n3 = 5), e3.invariant(t4.account, "mockAccountResponse(ix) -- ix.account is missing", t4), e3.invariant(t4.account.addr, "mockAccountResponse(ix) -- ix.account.addr is missing", t4), { account: { addr: t4.account.addr, keys: Array.from({ length: n3 }, function(e4, t5) {
                  return { index: t5, sequenceNumber: 42 };
                }) } };
              }(n2);
            case ne(n2):
              return { tag: "GET_BLOCK", block: { id: "32" } };
            default:
              return t3(n2);
          }
        });
      };
    }, authzFn: wn, authzResolve: function(e4) {
      return e4 === void 0 && (e4 = {}), function(t3) {
        return c2({}, t3, { tempId: e4.tempId || "WITH_RESOLVE", resolve: wn(function(e5, t4) {
          if (e5 == null)
            return {};
          var n2, r3, o2 = {}, i3 = Object.keys(e5);
          for (r3 = 0; r3 < i3.length; r3++)
            t4.indexOf(n2 = i3[r3]) >= 0 || (o2[n2] = e5[n2]);
          return o2;
        }(e4, Bn)) });
      };
    }, authzResolveMany: function(e4) {
      return e4 === void 0 && (e4 = {}), function(t3) {
        return c2({}, t3, { tempId: e4.tempId || "AUTHZ_RESOLVE_MANY", resolve: function() {
          return [e4.proposer && wn(e4.proposer)({ role: c2({}, En, { proposer: true }) })].concat(e4.authorizations.map(wn).map(function(e5) {
            return e5({ role: c2({}, En, { authorizer: true }) });
          }), [e4.payer && wn(e4.payer)({ role: c2({}, En, { payer: true }) })]).filter(Boolean);
        } });
      };
    }, sig: An, idof: function(e4) {
      return e4.addr + "-" + e4.keyId;
    }, run: function(e4) {
      return e4 === void 0 && (e4 = []), de([Pn("123")].concat(e4)).then(hn);
    } };
    Object.defineProperty(exports2, "cadence", { enumerable: true, get: function() {
      return a2.template;
    } }), Object.defineProperty(exports2, "cdc", { enumerable: true, get: function() {
      return a2.template;
    } }), exports2.TestUtils = Tn, exports2.VERSION = "0.0.56", exports2.account = function(e4, t3) {
      return vn([tt(e4)], t3).then(ct);
    }, exports2.arg = function(e4, t3) {
      return { value: e4, xform: t3 };
    }, exports2.args = function(e4) {
      return e4 === void 0 && (e4 = []), ue(e4.map(G));
    }, exports2.atBlockHeight = bn, exports2.atBlockId = In, exports2.authorization = function(e4, t3, n2, r3) {
      return { addr: e4, signingFunction: t3, keyId: n2, sequenceNum: r3 };
    }, exports2.authorizations = function(e4) {
      return e4 === void 0 && (e4 = []), ue(e4.map(function(e5) {
        return T(e5, { role: "authorizer" });
      }));
    }, exports2.block = function(t3, n2) {
      var r3 = t3 === void 0 ? {} : t3, o2 = r3.sealed, i3 = o2 !== void 0 && o2, s4 = r3.id, u2 = r3.height;
      return n2 === void 0 && (n2 = {}), e3.invariant(!(i3 && s4 || i3 && u2), 'Method: block -- Cannot pass "sealed" with "id" or "height"'), e3.invariant(!(s4 && u2), 'Method: block -- Cannot pass "id" and "height" simultaneously'), s4 ? vn([et(), In(s4)], n2).then(ct) : u2 ? vn([et(), bn(u2)], n2).then(ct) : vn([et(i3)], n2).then(ct);
    }, exports2.build = de, exports2.config = Ee, exports2.createSignableVoucher = en, exports2.decode = function(e4) {
      try {
        return Promise.resolve(Ee().where(/^decoder\./)).then(function(t3) {
          var n2 = Object.entries(t3).map(function(e5) {
            var t4 = e5[0], n3 = e5[1];
            return [t4 = "/" + t4.replace(/^decoder\./, "") + "$/", n3];
          });
          return ct(e4, Object.fromEntries(n2));
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, exports2.destroy = function(e4) {
      return function(t3) {
        return delete t3.assigns[e4], A2(t3);
      };
    }, exports2.encodeMessageFromSignable = function(e4, t3) {
      var n2, o2, i3 = (n2 = e4.voucher, (o2 = new Set(n2.authorizers)).add(n2.proposalKey.address), o2.delete(n2.payer), Array.from(o2).map(r2.withPrefix)), s4 = function(e5) {
        var t4 = new Set([e5.payer]);
        return Array.from(t4).map(r2.withPrefix);
      }(e4.voucher), u2 = i3.includes(r2.withPrefix(t3)), a3 = s4.includes(r2.withPrefix(t3));
      if (!u2 && !a3)
        throw new yn(t3);
      var l2 = { cadence: e4.voucher.cadence, refBlock: e4.voucher.refBlock, computeLimit: e4.voucher.computeLimit, arguments: e4.voucher.arguments, proposalKey: c2({}, e4.voucher.proposalKey, { address: r2.sansPrefix(e4.voucher.proposalKey.address) }), payer: r2.sansPrefix(e4.voucher.payer), authorizers: e4.voucher.authorizers.map(r2.sansPrefix), payloadSigs: e4.voucher.payloadSigs.map(function(e5) {
        return c2({}, e5, { address: r2.sansPrefix(e5.address) });
      }) };
      return u2 ? It(l2) : Pt(l2);
    }, exports2.get = ce, exports2.getAccount = tt, exports2.getBlock = et, exports2.getBlockByHeight = function(e4) {
      return console.warn("\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\n\n    ============================\n  ", "font-weight:bold;font-family:monospace;"), ue([U, function(t3) {
        return t3.block.height = e4, A2(t3);
      }]);
    }, exports2.getBlockById = function(e4) {
      return console.warn("\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\n\n    ============================\n  ", "font-weight:bold;font-family:monospace;"), ue([D, function(t3) {
        return t3.block.ids = [e4], A2(t3);
      }]);
    }, exports2.getBlockHeader = function(e4) {
      return e4 === void 0 && (e4 = null), ue([q, function(t3) {
        return t3.block.isSealed = e4, A2(t3);
      }]);
    }, exports2.getCollection = function(e4) {
      return e4 === void 0 && (e4 = null), ue([F2, function(t3) {
        return t3.collection.id = e4, t3;
      }]);
    }, exports2.getEvents = function(e4, t3, n2) {
      return t3 === void 0 && n2 === void 0 || console.warn("\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\n  \n      ============================\n    ", "font-weight:bold;font-family:monospace;"), ue([R, function(r3) {
        return r3.events.eventType = e4, r3.events.start = t3, r3.events.end = n2, A2(r3);
      }]);
    }, exports2.getEventsAtBlockHeightRange = function(e4, t3, n2) {
      return ue([R, function(r3) {
        return r3.events.eventType = e4, r3.events.start = t3, r3.events.end = n2, A2(r3);
      }]);
    }, exports2.getEventsAtBlockIds = function(e4, t3) {
      return t3 === void 0 && (t3 = []), ue([R, function(n2) {
        return n2.events.eventType = e4, n2.events.blockIds = t3, A2(n2);
      }]);
    }, exports2.getLatestBlock = function(e4) {
      return e4 === void 0 && (e4 = false), console.warn("\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\n\n    ============================\n  ", "font-weight:bold;font-family:monospace;"), ue([C, function(t3) {
        return t3.block.isSealed = e4, A2(t3);
      }]);
    }, exports2.getTransaction = function(e4) {
      return ue([L, function(t3) {
        return t3.transaction.id = e4, A2(t3);
      }]);
    }, exports2.getTransactionStatus = function(e4) {
      return ue([j, function(t3) {
        return t3.transaction.id = e4, A2(t3);
      }]);
    }, exports2.interaction = k, exports2.invariant = function e4() {
      var t3 = [].slice.call(arguments);
      if (t3.length > 1) {
        var n2 = t3, r3 = n2[0], o2 = n2[1];
        return e4(function(e5, t4) {
          var n3 = t4.Bad;
          return r3 ? (0, t4.Ok)(e5) : n3(e5, o2);
        });
      }
      var i3 = t3[0];
      return function(e5) {
        return i3(e5, { Ok: A2, Bad: w });
      };
    }, exports2.isBad = ie, exports2.isGetAccount = X, exports2.isGetBlock = ne, exports2.isGetBlockByHeight = ee, exports2.isGetBlockById = Q, exports2.isGetBlockHeader = re, exports2.isGetCollection = oe, exports2.isGetEvents = $, exports2.isGetLatestBlock = Z2, exports2.isGetTransaction = Y, exports2.isGetTransactionStatus = V, exports2.isOk = function(e4) {
      return e4.status === "OK";
    }, exports2.isPing = te, exports2.isScript = J, exports2.isTransaction = W, exports2.isUnknown = M, exports2.latestBlock = function(e4, t3) {
      return console.warn('\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      "latestBlock()" is deprecated, please use "block()" for this and future versions of FCL\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0008-deprecate-latest-block-method\n  \n      ============================\n    ', "font-weight:bold;font-family:monospace;"), vn([et(e4)], t3).then(ct);
    }, exports2.limit = function(e4) {
      return function(t3) {
        return t3.message.computeLimit = e4, t3;
      };
    }, exports2.param = function(e4) {
      return t3 = { name: "param", transitionsPath: "https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params" }, void console.warn("\n    %cFCL/SDK Deprecation Notice\n    ============================\n    The " + t3.name + " builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: " + t3.transitionsPath + "\n    ============================\n  ", "font-weight:bold;font-family:monospace;");
      var t3;
    }, exports2.params = function(e4) {
      return t3 = { name: "params", transitionsPath: "https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params" }, void console.error("\n    %cFCL/SDK Deprecation Notice\n    ============================\n    The " + t3.name + " builder has been removed from the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: " + t3.transitionsPath + "\n    ============================\n  ", "font-weight:bold;font-family:monospace;");
      var t3;
    }, exports2.payer = function(e4) {
      try {
        return Promise.resolve(T(e4, { role: "payer" }));
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, exports2.ping = function() {
      return K;
    }, exports2.pipe = ue, exports2.proposer = function(e4) {
      try {
        return Promise.resolve(T(e4, { role: "proposer" }));
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, exports2.put = le, exports2.ref = Pn, exports2.resolve = hn, exports2.resolveAccounts = sn, exports2.resolveArguments = yt, exports2.resolveCadence = lt, exports2.resolveFinalNormalization = mn, exports2.resolveProposerSequenceNumber = function(e4) {
      var t3 = e4.node;
      return function(e5) {
        try {
          return W(e5) ? e5.accounts[e5.proposer].sequenceNum ? Promise.resolve(A2(e5)) : Promise.resolve(de([tt(e5.accounts[e5.proposer].addr)])).then(function(n2) {
            return Promise.resolve(Qe(n2, { node: t3 })).then(function(t4) {
              return Promise.resolve(ct(t4)).then(function(t5) {
                return e5.accounts[e5.proposer].sequenceNum = t5.keys[e5.accounts[e5.proposer].keyId].sequenceNumber, A2(e5);
              });
            });
          }) : Promise.resolve(A2(e5));
        } catch (e6) {
          return Promise.reject(e6);
        }
      };
    }, exports2.resolveRefBlockId = function(e4) {
      return function(t3) {
        try {
          return W(t3) ? t3.message.refBlock ? Promise.resolve(A2(t3)) : Promise.resolve(function(e5) {
            try {
              var t4;
              return Promise.resolve(ue(k(), [et()])).then(function(n2) {
                return t4 = n2, Promise.resolve(Qe(t4, e5)).then(function(e6) {
                  return t4 = e6, Promise.resolve(ct(t4)).then(function(e7) {
                    return (t4 = e7).id;
                  });
                });
              });
            } catch (e6) {
              return Promise.reject(e6);
            }
          }(e4)).then(function(e5) {
            return t3.message.refBlock = e5, A2(t3);
          }) : Promise.resolve(A2(t3));
        } catch (e5) {
          return Promise.reject(e5);
        }
      };
    }, exports2.resolveSignatures = cn, exports2.resolveValidators = dn, exports2.script = function() {
      return ue([N, le("ix.cadence", a2.template.apply(void 0, [].slice.call(arguments)))]);
    }, exports2.send = vn, exports2.transaction = function() {
      return ue([O, le("ix.cadence", a2.template.apply(void 0, [].slice.call(arguments))), function(e4) {
        return e4.message.computeLimit = e4.message.computeLimit || 10, e4.message.refBlock = e4.message.refBlock || null, e4.authorizations = e4.authorizations || Sn, A2(e4);
      }]);
    }, exports2.update = fe, exports2.validator = kn, exports2.voucherToTxId = function(e4) {
      return function(e5) {
        return t3 = Nt(function(e6) {
          !function(e7) {
            qt.forEach(function(t5) {
              return Vt(e7, t5);
            }), Ft.forEach(function(t5) {
              return Vt(e7.proposalKey, t5, "proposalKey");
            }), zt.forEach(function(t5) {
              return Vt(e7, t5);
            }), e7.payloadSigs.forEach(function(e8, t5) {
              Mt.forEach(function(n4) {
                return Vt(e8, n4, "payloadSigs", t5);
              });
            }), Jt.forEach(function(t5) {
              return Vt(e7, t5);
            }), e7.envelopeSigs.forEach(function(e8, t5) {
              Wt.forEach(function(n4) {
                return Vt(e8, n4, "envelopeSigs", t5);
              });
            });
          }(e6);
          var t4 = _t(e6), n3 = function(e7) {
            return e7.map(function(e8) {
              var n4 = e8.keyId, r3 = e8.sig;
              return { signerIndex: t4.get(e8.address), keyId: n4, sig: r3 };
            }).sort(function(e8, t5) {
              return e8.signerIndex > t5.signerIndex ? 1 : e8.signerIndex < t5.signerIndex ? -1 : e8.keyId > t5.keyId ? 1 : e8.keyId < t5.keyId ? -1 : void 0;
            }).map(function(e8) {
              return [e8.signerIndex, e8.keyId, Gt(e8.sig)];
            });
          };
          return [[Tt(e6.cadence), e6.arguments.map(Et), wt(e6.refBlock), e6.computeLimit, At(r2.sansPrefix(e6.proposalKey.address)), e6.proposalKey.keyId, e6.proposalKey.sequenceNum, At(r2.sansPrefix(e6.payer)), e6.authorizers.map(function(e7) {
            return At(r2.sansPrefix(e7));
          })], n3(e6.payloadSigs), n3(e6.envelopeSigs)];
        }(e5)), (n2 = new s3.SHA3(256)).update(Buffer.from(t3, "hex")), n2.digest().toString("hex");
        var t3, n2;
      }(e4);
    }, exports2.why = function(e4) {
      return e4.reason;
    };
  }
});

// node_modules/@onflow/types/dist/types.js
var require_types = __commonJS({
  "node_modules/@onflow/types/dist/types.js"(exports2) {
    init_shims();
    var t2 = function(t3, e4, n2) {
      return { label: t3, asArgument: e4, asInjection: n2 };
    };
    var e3 = function(t3) {
      return Array.isArray(t3);
    };
    var n = function(t3) {
      return typeof t3 == "object";
    };
    var r2 = function(t3) {
      return t3 == null;
    };
    var o = function(t3) {
      return typeof t3 == "number";
    };
    var i2 = function(t3) {
      return Number.isInteger(t3);
    };
    var u = function(t3) {
      return typeof t3 == "string";
    };
    var c2 = function(t3) {
      throw new Error("Type Error: " + t3);
    };
    var f4 = t2("Identity", function(t3) {
      return t3;
    }, function(t3) {
      return t3;
    });
    var a2 = t2("UInt", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "UInt", value: t3.toString() };
      c2("Expected Positive Integer for type Unsigned Int");
    }, function(t3) {
      return t3;
    });
    var p = t2("Int", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "Int", value: t3.toString() };
      c2("Expected Integer for type Int");
    }, function(t3) {
      return t3;
    });
    var d3 = t2("UInt8", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "UInt8", value: t3.toString() };
      c2("Expected integer for UInt8");
    }, function(t3) {
      return t3;
    });
    var s3 = t2("Int8", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "Int8", value: t3.toString() };
      c2("Expected positive integer for Int8");
    }, function(t3) {
      return t3;
    });
    var l = t2("UInt16", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "UInt16", value: t3.toString() };
      c2("Expected integer for UInt16");
    }, function(t3) {
      return t3;
    });
    var x2 = t2("Int16", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "Int16", value: t3.toString() };
      c2("Expected positive integer for Int16");
    }, function(t3) {
      return t3;
    });
    var g = t2("UInt32", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "UInt32", value: t3.toString() };
      c2("Expected integer for UInt32");
    }, function(t3) {
      return t3;
    });
    var v = t2("Int32", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "Int32", value: t3.toString() };
      c2("Expected positive integer for Int32");
    }, function(t3) {
      return t3;
    });
    var y = t2("UInt64", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "UInt64", value: t3.toString() };
      c2("Expected integer for UInt64");
    }, function(t3) {
      return t3;
    });
    var m2 = t2("Int64", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "Int64", value: t3.toString() };
      c2("Expected positive integer for Int64");
    }, function(t3) {
      return t3;
    });
    var I = t2("UInt128", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "UInt128", value: t3.toString() };
      c2("Expected integer for UInt128");
    }, function(t3) {
      return t3;
    });
    var h2 = t2("Int128", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "Int128", value: t3.toString() };
      c2("Expected positive integer for Int128");
    }, function(t3) {
      return t3;
    });
    var E = t2("UInt256", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "UInt256", value: t3.toString() };
      c2("Expected integer for UInt256");
    }, function(t3) {
      return t3;
    });
    var U = t2("Int256", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "Int256", value: t3.toString() };
      c2("Expected integer for Int256");
    }, function(t3) {
      return t3;
    });
    var b2 = t2("Word8", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "Word8", value: t3.toString() };
      c2("Expected positive number for Word8");
    }, function(t3) {
      return t3;
    });
    var S2 = t2("Word16", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "Word16", value: t3.toString() };
      c2("Expected positive number for Word16");
    }, function(t3) {
      return t3;
    });
    var F2 = t2("Word32", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "Word32", value: t3.toString() };
      c2("Expected positive number for Word32");
    }, function(t3) {
      return t3;
    });
    var A2 = t2("Word64", function(t3) {
      if (o(t3) && i2(t3))
        return { type: "Word64", value: t3.toString() };
      c2("Expected positive number for Word64");
    }, function(t3) {
      return t3;
    });
    var w = function() {
      console.error("\n          %c@onflow/types Deprecation Notice\n          ========================\n\n          Passing in Numbers as values for Fix64 and UFix64 types is deprecated and will cease to work in future releases of @onflow/types.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/types/WARNINGS.md#0001-[U]Fix64-as-Number\n\n          =======================\n        ".replace(/\n\s+/g, "\n").trim(), "font-weight:bold;font-family:monospace;");
    };
    var W = t2("UFix64", function(t3) {
      if (u(t3)) {
        var e4 = t3.split(".");
        return e4.length !== 2 && c2("Expected one decimal but found " + e4.length + " in the [U]Fix64 value. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers"), (e4[1].length == 0 || e4[1].length > 8) && c2("Expected at least one digit, and at most 8 digits following the decimal of the [U]Fix64 value but found " + e4[1].length + " digits. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers"), { type: "UFix64", value: t3 };
      }
      if (o(t3))
        return w(), { type: "UFix64", value: t3.toString() };
      c2("Expected String for UFix64");
    }, function(t3) {
      return t3;
    });
    var j = t2("Fix64", function(t3) {
      if (u(t3)) {
        var e4 = t3.split(".");
        return e4.length !== 2 && c2("Expected one decimal but found " + e4.length + " in the [U]Fix64 value. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers"), (e4[1].length == 0 || e4[1].length > 8) && c2("Expected at least one digit, and at most 8 digits following the decimal of the [U]Fix64 value but found " + e4[1].length + " digits. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers"), { type: "Fix64", value: t3 };
      }
      if (o(t3))
        return w(), { type: "Fix64", value: t3.toString() };
      c2("Expected String for Fix64");
    }, function(t3) {
      return t3;
    });
    var k = t2("String", function(t3) {
      if (u(t3))
        return { type: "String", value: t3 };
      c2("Expected String for type String");
    }, function(t3) {
      return t3;
    });
    var P = t2("Character", function(t3) {
      if (u(t3))
        return { type: "Character", value: t3 };
      c2("Expected Character for type Character");
    }, function(t3) {
      return t3;
    });
    var O = t2("Bool", function(t3) {
      if (typeof t3 == "boolean")
        return { type: "Bool", value: t3 };
      c2("Expected Boolean for type Bool");
    }, function(t3) {
      return t3;
    });
    var R = t2("Address", function(t3) {
      if (u(t3))
        return { type: "Address", value: t3 };
      c2("Expected Address for type Address");
    }, function(t3) {
      return t3;
    });
    var N = t2("Void", function(t3) {
      if (!t3 || r2(t3))
        return { type: "Void" };
      c2("Expected Void for type Void");
    }, function(t3) {
      return t3;
    });
    var B = t2("Reference", function(t3) {
      if (n(t3))
        return { type: "Reference", value: t3 };
      c2("Expected Object for type Reference");
    }, function(t3) {
      return t3;
    });
    var C = function(n2) {
      return n2 === void 0 && (n2 = []), t2("Array", function(t3) {
        return { type: "Array", value: e3(n2) ? n2.map(function(e4, n3) {
          return e4.asArgument(t3[n3]);
        }) : t3.map(function(t4) {
          return n2.asArgument(t4);
        }) };
      }, function(t3) {
        return t3;
      });
    };
    var D = t2("Path", function(t3) {
      if (n(t3))
        return u(t3.domain) || c2("Expected a string for the Path domain but found " + t3.domain + ". Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path"), t3.domain !== "storage" && t3.domain !== "private" && t3.domain !== "public" && c2('Expected either "storage", "private" or "public" as the Path domain but found ' + t3.domain + ". Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path"), u(t3.identifier) || c2("Expected a string for the Path identifier but found " + t3.identifier + ". Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path"), { type: "Path", value: { domain: t3.domain, identifier: t3.identifier } };
      c2("Expected Object for type Path");
    }, function(t3) {
      return t3;
    });
    exports2.Address = R, exports2.Array = C, exports2.Bool = O, exports2.Character = P, exports2.Dictionary = function(r3) {
      return r3 === void 0 && (r3 = []), t2("Dictionary", function(t3) {
        if (n(t3))
          return { type: "Dictionary", value: e3(r3) ? r3.map(function(e4, n2) {
            return { key: e4.key.asArgument(t3[n2].key), value: e4.value.asArgument(t3[n2].value) };
          }) : e3(t3) ? t3.map(function(t4) {
            return { key: r3.key.asArgument(t4.key), value: r3.value.asArgument(t4.value) };
          }) : [{ key: r3.key.asArgument(t3.key), value: r3.value.asArgument(t3.value) }] };
        c2("Expected Object for type Dictionary");
      }, function(t3) {
        return t3;
      });
    }, exports2.Event = function(r3, o2) {
      return o2 === void 0 && (o2 = []), t2("Event", function(t3) {
        if (n(t3))
          return { type: "Event", value: { id: r3, fields: e3(o2) ? o2.map(function(e4, n2) {
            return { name: t3.fields[n2].name, value: e4.value.asArgument(t3.fields[n2].value) };
          }) : t3.fields.map(function(t4) {
            return { name: t4.name, value: o2.value.asArgument(t4.value) };
          }) } };
        c2("Expected Object for type Event");
      }, function(t3) {
        return t3;
      });
    }, exports2.Fix64 = j, exports2.Identity = f4, exports2.Int = p, exports2.Int128 = h2, exports2.Int16 = x2, exports2.Int256 = U, exports2.Int32 = v, exports2.Int64 = m2, exports2.Int8 = s3, exports2.Optional = function(e4) {
      return t2("Optional", function(t3) {
        return { type: "Optional", value: r2(t3) ? null : e4.asArgument(t3) };
      }, function(t3) {
        return t3;
      });
    }, exports2.Path = D, exports2.Reference = B, exports2.Resource = function(r3, o2) {
      return o2 === void 0 && (o2 = []), t2("Resource", function(t3) {
        if (n(t3))
          return { type: "Resource", value: { id: r3, fields: e3(o2) ? o2.map(function(e4, n2) {
            return { name: t3.fields[n2].name, value: e4.value.asArgument(t3.fields[n2].value) };
          }) : t3.fields.map(function(t4) {
            return { name: t4.name, value: o2.value.asArgument(t4.value) };
          }) } };
        c2("Expected Object for type Resource");
      }, function(t3) {
        return t3;
      });
    }, exports2.String = k, exports2.Struct = function(r3, o2) {
      return o2 === void 0 && (o2 = []), t2("Struct", function(t3) {
        if (n(t3))
          return { type: "Struct", value: { id: r3, fields: e3(o2) ? o2.map(function(e4, n2) {
            return { name: t3.fields[n2].name, value: e4.value.asArgument(t3.fields[n2].value) };
          }) : t3.fields.map(function(t4) {
            return { name: t4.name, value: o2.value.asArgument(t4.value) };
          }) } };
        c2("Expected Object for type Struct");
      }, function(t3) {
        return t3;
      });
    }, exports2.UFix64 = W, exports2.UInt = a2, exports2.UInt128 = I, exports2.UInt16 = l, exports2.UInt256 = E, exports2.UInt32 = g, exports2.UInt64 = y, exports2.UInt8 = d3, exports2.Void = N, exports2.Word16 = S2, exports2.Word32 = F2, exports2.Word64 = A2, exports2.Word8 = b2, exports2._Array = C;
  }
});

// node_modules/@onflow/util-uid/dist/util-uid.js
var require_util_uid = __commonJS({
  "node_modules/@onflow/util-uid/dist/util-uid.js"(exports2) {
    init_shims();
    var r2 = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    var n = r2.length;
    exports2.uid = function() {
      for (var t2 = "", a2 = 32; a2--; )
        t2 += r2[Math.random() * n | 0];
      return t2;
    };
  }
});

// node_modules/@onflow/fcl/dist/fcl.js
var require_fcl = __commonJS({
  "node_modules/@onflow/fcl/dist/fcl.js"(exports2) {
    init_shims();
    var e3 = require_sdk();
    var n = require_util_invariant();
    var t2 = require_types();
    var r2 = require_actor();
    var o = require_util_address();
    var i2 = require_rlp();
    var a2 = require_util_uid();
    var s3 = require_template();
    function u(e4) {
      if (e4 && e4.__esModule)
        return e4;
      var n2 = Object.create(null);
      return e4 && Object.keys(e4).forEach(function(t3) {
        if (t3 !== "default") {
          var r3 = Object.getOwnPropertyDescriptor(e4, t3);
          Object.defineProperty(n2, t3, r3.get ? r3 : { enumerable: true, get: function() {
            return e4[t3];
          } });
        }
      }), n2.default = e4, n2;
    }
    var c2 = u(e3);
    var l = u(t2);
    var d3 = u(i2);
    var f4 = function(n2) {
      try {
        return Promise.resolve(e3.config().where(n2)).then(function(e4) {
          return Object.fromEntries(Object.entries(e4).map(function(e5) {
            var t3 = e5[1];
            return [e5[0].replace(n2, ""), t3];
          }));
        });
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    var p = { can: !(typeof window == "undefined"), get: function(e4) {
      try {
        return Promise.resolve(JSON.parse(sessionStorage.getItem(e4)));
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, put: function(e4, n2) {
      try {
        return Promise.resolve(sessionStorage.setItem(e4, JSON.stringify(n2)));
      } catch (e5) {
        return Promise.reject(e5);
      }
    } };
    e3.config({ "discovery.wallet.method.default": "IFRAME/RPC", "fcl.storage.default": p });
    var h2 = function(e4) {
      return function(n2) {
        return typeof n2 === e4;
      };
    };
    var v = function(e4) {
      return e4 != null;
    };
    var m2 = h2("object");
    var g = h2("string");
    var y = h2("function");
    var P = h2("number");
    function E(e4) {
      return y(e4) ? e4(c2.arg, l) : [];
    }
    var b2 = function(e4) {
      return e4 === void 0 && (e4 = {}), Promise.resolve(function(e5) {
        try {
          return n.invariant(v(e5.cadence), "query({ cadence }) -- cadence is required"), n.invariant(g(e5.cadence), "query({ cadence }) -- cadence must be a string"), Promise.resolve(c2.config.get("accessNode.api")).then(function(e6) {
            n.invariant(e6, 'Required value for "accessNode.api" not defined in config. See: https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration');
          });
        } catch (e6) {
          return Promise.reject(e6);
        }
      }(e4)).then(function() {
        return c2.send([c2.script(e4.cadence), c2.args(E(e4.args || [])), e4.limit && typeof e4.limit == "number" && c2.limit(e4.limit)]).then(c2.decode);
      });
    };
    function w() {
      return w = Object.assign || function(e4) {
        for (var n2 = 1; n2 < arguments.length; n2++) {
          var t3 = arguments[n2];
          for (var r3 in t3)
            Object.prototype.hasOwnProperty.call(t3, r3) && (e4[r3] = t3[r3]);
        }
        return e4;
      }, w.apply(this, arguments);
    }
    function S2(e4, n2) {
      (n2 == null || n2 > e4.length) && (n2 = e4.length);
      for (var t3 = 0, r3 = new Array(n2); t3 < n2; t3++)
        r3[t3] = e4[t3];
      return r3;
    }
    function R(e4, n2) {
      var t3 = typeof Symbol != "undefined" && e4[Symbol.iterator] || e4["@@iterator"];
      if (t3)
        return (t3 = t3.call(e4)).next.bind(t3);
      if (Array.isArray(e4) || (t3 = function(e5, n3) {
        if (e5) {
          if (typeof e5 == "string")
            return S2(e5, n3);
          var t4 = Object.prototype.toString.call(e5).slice(8, -1);
          return t4 === "Object" && e5.constructor && (t4 = e5.constructor.name), t4 === "Map" || t4 === "Set" ? Array.from(e5) : t4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t4) ? S2(e5, n3) : void 0;
        }
      }(e4)) || n2 && e4 && typeof e4.length == "number") {
        t3 && (e4 = t3);
        var r3 = 0;
        return function() {
          return r3 >= e4.length ? { done: true } : { done: false, value: e4[r3++] };
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var x2 = { f_type: "Service", f_vsn: "1.0.0" };
    var C = { f_type: "Identity", f_vsn: "1.0.0" };
    var I = { f_type: "USER", f_vsn: "1.0.0" };
    var A2 = { f_type: "PollingResponse", f_vsn: "1.0.0" };
    var O = { f_type: "CompositeSignature", f_vsn: "1.0.0" };
    function j(e4) {
      return e4 == null ? null : e4.f_vsn === "1.0.0" ? e4 : w({ old: e4 }, x2, { type: "frame", endpoint: e4.endpoint, params: e4.params || {}, data: e4.data || {} });
    }
    function D(e4) {
      return e4 == null ? null : e4.f_vsn === "1.0.0" ? e4 : w({}, x2, { type: "back-channel-rpc", endpoint: e4.endpoint, method: e4.method, params: e4.params || {}, data: e4.data || {} });
    }
    function N(e4) {
      return e4 == null ? null : (e4.method == null && (e4 = w({}, e4, { type: "local-view", method: "VIEW/IFRAME" })), e4.f_vsn === "1.0.0" ? e4 : w({}, x2, { type: e4.type || "local-view", method: e4.method, endpoint: e4.endpoint, data: e4.data || {}, params: e4.params || {} }));
    }
    var k = { "back-channel-rpc": D, "pre-authz": function(e4) {
      return e4 == null ? null : e4.f_vsn === "1.0.0" ? e4 : w({}, x2, { type: e4.type, uid: e4.id, endpoint: e4.endpoint, method: e4.method, identity: w({}, C, { address: o.withPrefix(e4.addr), keyId: e4.keyId }), params: e4.params, data: e4.data });
    }, authz: function(e4) {
      return e4 == null ? null : e4.f_vsn === "1.0.0" ? e4 : w({}, x2, { type: e4.type, uid: e4.id, endpoint: e4.endpoint, method: e4.method, identity: w({}, C, { address: o.withPrefix(e4.addr), keyId: e4.keyId }), params: e4.params, data: e4.data });
    }, authn: function(e4) {
      return e4 == null ? null : e4.f_vsn === "1.0.0" ? e4 : w({}, x2, { type: e4.type, uid: e4.id, endpoint: e4.authn, id: e4.pid, provider: { address: o.withPrefix(e4.addr), name: e4.name, icon: e4.icon } });
    }, frame: j, "open-id": function(e4) {
      return e4 == null ? null : e4.f_vsn === "1.0.0" ? e4 : null;
    }, "user-signature": function(e4) {
      if (e4 == null)
        return null;
      if (e4.f_vsn === "1.0.0")
        return e4;
      throw new Error("Invalid user-signature service");
    }, "local-view": N, "account-proof": function(e4) {
      if (e4 == null)
        return null;
      if (e4.f_vsn === "1.0.0")
        return e4;
      throw new Error("Invalid account-proof service");
    }, "authn-refresh": function(e4) {
      if (e4 == null)
        return null;
      if (e4.f_vsn === "1.0.0")
        return e4;
      throw new Error("Invalid authn-refresh service");
    } };
    function L(e4) {
      return d3.encode([e4.provider.address || e4.provider.name || "UNSPECIFIED", e4.id]).toString("hex");
    }
    var F2 = function(e4) {
      try {
        var n2 = (e4 = function(e5) {
          return e5.addr = e5.addr ? o.withPrefix(e5.addr) : null, e5.paddr = e5.paddr ? o.withPrefix(e5.paddr) : null, e5;
        }(e4)).services || [];
        return Promise.resolve(function(e5, n3) {
          try {
            if (e5 == null || n3 == null)
              return Promise.resolve([]);
            var t3 = new URL(e5);
            return t3.searchParams.append("code", n3), Promise.resolve(fetch(t3, { method: "GET", headers: { "Content-Type": "application/json" } }).then(function(e6) {
              return e6.json();
            })).then(function(e6) {
              if (Array.isArray(e6))
                return e6;
              var n4 = [];
              if (Array.isArray(e6.authorizations))
                for (var t4, r3 = R(e6.authorizations); !(t4 = r3()).done; )
                  n4.push(w({ type: "authz", keyId: e6.keyId }, t4.value));
              return e6.provider != null && n4.push(w({ type: "authn", id: "wallet-provider#authn" }, e6.provider)), n4;
            });
          } catch (e6) {
            return Promise.reject(e6);
          }
        }(e4.hks, e4.code)).then(function(t3) {
          var r3, i3, a3 = (r3 = n2, i3 = t3, r3 === void 0 && (r3 = []), i3 === void 0 && (i3 = []), [].concat(r3, i3)).map(function(n3) {
            return function(e5, n4) {
              try {
                return k[e5.type](e5, n4);
              } catch (n5) {
                return console.error("Unrecognized FCL Service Type [" + e5.type + "]", e5, n5), e5;
              }
            }(n3, e4);
          }), s4 = function(e5, n3) {
            return n3.find(function(e6) {
              return e6.type === "authn";
            });
          }(0, a3);
          return w({}, I, { addr: o.withPrefix(e4.addr), cid: L(s4), loggedIn: true, services: a3, expiresAt: e4.expires });
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    function T(e4, n2) {
      return e4 === void 0 && (e4 = []), e4.find(function(e5) {
        return e5.type === n2;
      });
    }
    function _(e4) {
      var n2 = new URL(e4.endpoint);
      if (n2.searchParams.append("l6n", window.location.origin), e4.params != null)
        for (var t3 = 0, r3 = Object.entries(e4.params || {}); t3 < r3.length; t3++) {
          var o2 = r3[t3];
          n2.searchParams.append(o2[0], o2[1]);
        }
      return n2;
    }
    function U(e4, n2) {
      n2 === void 0 && (n2 = {});
      var t3 = n2.method || "POST", r3 = t3 === "GET" ? void 0 : JSON.stringify(n2.data || e4.data || {});
      return fetch(_(e4), { method: t3, headers: w({}, e4.headers || {}, n2.headers || {}, { "Content-Type": "application/json" }), body: r3 }).then(function(e5) {
        return e5.json();
      });
    }
    function B(e4) {
      var n2, t3;
      return e4 == null ? null : e4.f_vsn === "1.0.0" ? e4 : w({}, A2, { status: (n2 = e4.status) != null ? n2 : "APPROVED", reason: (t3 = e4.reason) != null ? t3 : null, data: e4.compositeSignature || e4.data || w({}, e4) || {}, updates: D(e4.authorizationUpdates), local: j((e4.local || [])[0]) });
    }
    var V = function e4(t3, r3) {
      r3 === void 0 && (r3 = function() {
        return true;
      });
      try {
        if (n.invariant(t3, "Missing Polling Service", { service: t3 }), !r3())
          throw new Error("Externally Halted");
        return Promise.resolve(U(t3, { method: H(t3) }).then(B)).then(function(n2) {
          switch (n2.status) {
            case "APPROVED":
              return n2.data;
            case "DECLINED":
              throw new Error("Declined: " + (n2.reason || "No reason supplied."));
            default:
              return Promise.resolve(new Promise(function(e5) {
                return setTimeout(e5, 500);
              })).then(function() {
                return e4(n2.updates, r3);
              });
          }
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var M = { "HTTP/GET": "GET", "HTTP/POST": "POST" };
    var H = function(e4) {
      return n.invariant(M[e4.method], "Invalid Service Method for type back-channel-rpc", { service: e4 }), M[e4.method];
    };
    var z = "FCL_IFRAME";
    function W(e4) {
      n.invariant(!document.getElementById(z), "Attempt at triggering multiple Frames", { src: e4 });
      var t3 = document.createElement("iframe");
      return t3.src = e4, t3.id = z, t3.allow = "usb *; hid *", t3.frameBorder = "0", t3.style.cssText = "\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n", document.body.append(t3), [t3.contentWindow, function() {
        document.getElementById(z) && document.getElementById(z).remove();
      }];
    }
    var K = null;
    var Y = null;
    function q(e4) {
      var n2, t3;
      return K == null || (n2 = K) != null && n2.closed ? (t3 = window, K = t3.open(e4, "FCL_POP", "toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=640, height=770, top=" + (t3.top.outerHeight / 2 + t3.top.screenY - 385) + ", left=" + (t3.top.outerWidth / 2 + t3.top.screenX - 320))) : Y !== e4 ? (K.location.replace(e4), K.focus()) : K.focus(), Y = e4, [K, function() {
        K && !K.closed && K.close(), K = null;
      }];
    }
    var J = null;
    var G = null;
    function X(e4) {
      var n2;
      return J == null || (n2 = J) != null && n2.closed ? J = window.open(e4, "_blank") : G !== e4 ? (J.location.replace(e4), J.focus()) : J.focus(), G = e4, [J, function() {
        J && !J.closed && J.close(), J = null;
      }];
    }
    var Z2;
    var $ = { "VIEW/IFRAME": W, "VIEW/POP": q, "VIEW/TAB": X };
    var Q = function(e4, n2, t3, r3) {
      try {
        return Promise.resolve(U(e4, { data: w({ fclVersion: "0.0.78", service: { params: e4.params, data: e4.data, type: e4.type }, config: r3 }, n2) }).then(B)).then(function(n3) {
          if (n3.status === "APPROVED")
            return n3.data;
          if (n3.status === "DECLINED")
            throw new Error("Declined: " + (n3.reason || "No reason supplied."));
          if (n3.status === "REDIRECT")
            return n3;
          if (n3.status === "PENDING") {
            var t4 = true;
            return Promise.resolve(function(e5, n4) {
              n4 === void 0 && (n4 = {});
              try {
                try {
                  return Promise.resolve($[e5.method](_(e5), n4));
                } catch (t5) {
                  throw console.error("execLocal({service, opts = {}})", t5, { service: e5, opts: n4 }), t5;
                }
              } catch (e6) {
                return Promise.reject(e6);
              }
            }(N(n3.local))).then(function(e5) {
              var r4 = e5[1], o2 = function() {
                try {
                  r4(), t4 = false;
                } catch (e6) {
                  console.error("Frame Close Error", e6);
                }
              };
              return V(n3.updates, function() {
                return t4;
              }).then(function(e6) {
                return o2(), e6;
              }).catch(function(e6) {
                throw console.error(e6), o2(), e6;
              });
            });
          }
          throw console.error("Auto Decline: Invalid Response", { service: e4, resp: n3 }), new Error("Auto Decline: Invalid Response");
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var ee = function(e4) {
      return typeof e4 == "string" && e4.toLowerCase();
    };
    var ne = new Set(["monetizationstart", "monetizationpending", "monetizationprogress", "monetizationstop"]);
    var te = function(e4, n2) {
      return console.warn("DEPRECATION NOTICE", "Received " + e4 + ", please use " + n2 + " for this and future versions of FCL");
    };
    var re = function(e4) {
      var n2 = e4.close, t3 = e4.send, r3 = e4.onReady, o2 = e4.onResponse, i3 = e4.onMessage;
      return function(e5) {
        try {
          if (typeof e5.data != "object")
            return;
          if (ne.has(e5.data.type))
            return;
          ee(e5.data.type) === ee("FCL:VIEW:CLOSE") && n2(), ee(e5.data.type) === ee("FCL:VIEW:READY") && r3(e5, { send: t3, close: n2 }), ee(e5.data.type) === ee("FCL:VIEW:RESPONSE") && o2(e5, { send: t3, close: n2 }), i3(e5, { send: t3, close: n2 }), ee(e5.data.type) === ee("FCL:FRAME:READY") && (te(e5.data.type, "FCL:VIEW:READY"), r3(e5, { send: t3, close: n2 })), ee(e5.data.type) === ee("FCL:FRAME:RESPONSE") && (te(e5.data.type, "FCL:VIEW:RESPONSE"), o2(e5, { send: t3, close: n2 })), ee(e5.data.type) === ee("FCL:FRAME:CLOSE") && (te(e5.data.type, "FCL:VIEW:CLOSE"), n2()), ee(e5.data.type) === ee("FCL::CHALLENGE::RESPONSE") && (te(e5.data.type, "FCL:VIEW:RESPONSE"), o2(e5, { send: t3, close: n2 })), ee(e5.data.type) === ee("FCL::AUTHZ_READY") && (te(e5.data.type, "FCL:VIEW:READY"), r3(e5, { send: t3, close: n2 })), ee(e5.data.type) === ee("FCL::CHALLENGE::CANCEL") && (te(e5.data.type, "FCL:VIEW:CLOSE"), n2()), ee(e5.data.type) === ee("FCL::CANCEL") && (te(e5.data.type, "FCL:VIEW:CLOSE"), n2());
        } catch (e6) {
          console.error("Frame Callback Error", e6), n2();
        }
      };
    };
    var oe = function() {
    };
    var ie = function() {
    };
    var ae = function() {
    };
    var se = function() {
    };
    var ue = function e4(t3) {
      var r3 = t3.service, o2 = t3.msg, i3 = o2 === void 0 ? {} : o2, a3 = t3.opts, s4 = a3 === void 0 ? {} : a3, u2 = t3.config, c3 = u2 === void 0 ? {} : u2;
      try {
        return Promise.resolve(f4(/^service\./)).then(function(t4) {
          return Promise.resolve(f4(/^app\.detail\./)).then(function(o3) {
            var a4 = w({}, c3, { services: t4, app: o3 });
            return function(t5, o4) {
              try {
                var u3 = Promise.resolve(ce[r3.method](r3, i3, s4, a4)).then(function(t6) {
                  return t6.status === "REDIRECT" ? (n.invariant(r3.type === t6.data.type, "Cannot shift recursive service type in execService"), Promise.resolve(e4({ service: t6.data, msg: i3, opts: s4, config: a4 }))) : t6;
                });
              } catch (e5) {
                return o4(e5);
              }
              return u3 && u3.then ? u3.then(void 0, o4) : u3;
            }(0, function(e5) {
              throw console.error("execService({service, msg = {}, opts = {}, config = {}})", e5, { service: r3, msg: i3, opts: s4, config: c3 }), e5;
            });
          });
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var ce = { "HTTP/RPC": Q, "HTTP/POST": Q, "IFRAME/RPC": function(e4, n2, t3, r3) {
      return new Promise(function(o2, i3) {
        var s4, u2 = a2.uid(), c3 = t3.includeOlderJsonRpcCall;
        n2.data = (s4 = e4.data) != null ? s4 : null, function(e5, n3) {
          if (n3 === void 0 && (n3 = {}), e5 == null)
            return { send: oe, close: oe };
          var t4 = n3.onClose || oe;
          window.addEventListener("message", re({ close: a3, send: s5, onReady: n3.onReady || oe, onResponse: n3.onResponse || oe, onMessage: n3.onMessage || oe }));
          var r4 = W(_(e5)), o3 = r4[0], i4 = r4[1];
          return { send: s5, close: a3 };
          function a3() {
            try {
              window.removeEventListener("message", re), i4(), t4();
            } catch (e6) {
              console.error("Frame Close Error", e6);
            }
          }
          function s5(e6) {
            try {
              o3.postMessage(JSON.parse(JSON.stringify(e6 || {})), "*");
            } catch (n4) {
              console.error("Frame Send Error", e6, n4);
            }
          }
        }(e4, { onReady: function(t4, o3) {
          var i4 = o3.send;
          try {
            try {
              i4({ type: "FCL:VIEW:READY:RESPONSE", fclVersion: "0.0.78", body: n2, service: { params: e4.params, data: e4.data, type: e4.type }, config: r3 }), i4({ fclVersion: "0.0.78", type: "FCL:FRAME:READY:RESPONSE", body: n2, service: { params: e4.params, data: e4.data, type: e4.type }, config: r3, deprecated: { message: "FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE" } }), c3 && i4({ jsonrpc: "2.0", id: u2, method: "fcl:sign", params: [n2, e4.params], deprecated: { message: "jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE" } });
            } catch (e5) {
              throw e5;
            }
            return Promise.resolve();
          } catch (e5) {
            return Promise.reject(e5);
          }
        }, onResponse: function(e5, n3) {
          var t4 = n3.close;
          try {
            if (typeof e5.data != "object")
              return;
            var r4 = B(e5.data);
            switch (r4.status) {
              case "APPROVED":
                o2(r4.data), t4();
                break;
              case "DECLINED":
                i3("Declined: " + (r4.reason || "No reason supplied")), t4();
                break;
              case "REDIRECT":
                o2(r4), t4();
                break;
              default:
                i3("Declined: No reason supplied"), t4();
            }
          } catch (e6) {
            throw console.error("execIframeRPC onResponse error", e6), e6;
          }
        }, onMessage: function(e5, n3) {
          var t4 = n3.close;
          try {
            if (typeof e5.data != "object")
              return;
            if (e5.data.jsonrpc !== "2.0")
              return;
            if (e5.data.id !== u2)
              return;
            var r4 = B(e5.data.result);
            switch (r4.status) {
              case "APPROVED":
                o2(r4.data), t4();
                break;
              case "DECLINED":
                i3("Declined: " + (r4.reason || "No reason supplied")), t4();
                break;
              case "REDIRECT":
                o2(r4), t4();
                break;
              default:
                i3("Declined: No reason supplied"), t4();
            }
          } catch (e6) {
            throw console.error("execIframeRPC onMessage error", e6), e6;
          }
        }, onClose: function() {
          i3("Declined: Externally Halted");
        } });
      });
    }, "POP/RPC": function(e4, n2, t3, r3) {
      return new Promise(function(o2, i3) {
        var s4 = a2.uid(), u2 = t3.redir, c3 = t3.includeOlderJsonRpcCall;
        n2.data = e4.data, function(e5, n3) {
          if (n3 === void 0 && (n3 = {}), e5 == null)
            return { send: ie, close: ie };
          var t4 = n3.onClose || ie;
          window.addEventListener("message", re({ close: s5, send: u3, onReady: n3.onReady || ie, onResponse: n3.onResponse || ie, onMessage: n3.onMessage || ie }));
          var r4 = q(_(e5)), o3 = r4[0], i4 = r4[1], a3 = setInterval(function() {
            o3 && o3.closed && s5();
          }, 500);
          return { send: u3, close: s5 };
          function s5() {
            try {
              window.removeEventListener("message", re), clearInterval(a3), i4(), t4();
            } catch (e6) {
              console.error("Popup Close Error", e6);
            }
          }
          function u3(e6) {
            try {
              o3.postMessage(JSON.parse(JSON.stringify(e6 || {})), "*");
            } catch (n4) {
              console.error("Popup Send Error", e6, n4);
            }
          }
        }(e4, { onReady: function(t4, o3) {
          var i4 = o3.send;
          try {
            try {
              i4({ fclVersion: "0.0.78", type: "FCL:VIEW:READY:RESPONSE", body: n2, service: { params: e4.params, data: e4.data, type: e4.type }, config: r3 }), i4({ fclVersion: "0.0.78", type: "FCL:FRAME:READY:RESPONSE", body: n2, service: { params: e4.params, data: e4.data, type: e4.type }, config: r3, deprecated: { message: "FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE" } }), c3 && i4({ jsonrpc: "2.0", id: s4, method: "fcl:sign", params: [n2, e4.params] });
            } catch (e5) {
              throw e5;
            }
            return Promise.resolve();
          } catch (e5) {
            return Promise.reject(e5);
          }
        }, onResponse: function(e5, n3) {
          var t4 = n3.close;
          try {
            if (typeof e5.data != "object")
              return;
            var r4 = B(e5.data);
            switch (r4.status) {
              case "APPROVED":
                o2(r4.data), !u2 && t4();
                break;
              case "DECLINED":
                i3("Declined: " + (r4.reason || "No reason supplied")), t4();
                break;
              case "REDIRECT":
                o2(r4), t4();
                break;
              default:
                i3("Declined: No reason supplied"), t4();
            }
          } catch (e6) {
            throw console.error("execPopRPC onResponse error", e6), e6;
          }
        }, onMessage: function(e5, n3) {
          var t4 = n3.close;
          try {
            if (typeof e5.data != "object")
              return;
            if (e5.data.jsonrpc !== "2.0")
              return;
            if (e5.data.id !== s4)
              return;
            var r4 = B(e5.data.result);
            switch (r4.status) {
              case "APPROVED":
                o2(r4.data), !u2 && t4();
                break;
              case "DECLINED":
                i3("Declined: " + (r4.reason || "No reason supplied")), t4();
                break;
              case "REDIRECT":
                o2(r4), t4();
                break;
              default:
                i3("Declined: No reason supplied"), t4();
            }
          } catch (e6) {
            throw console.error("execPopRPC onMessage error", e6), e6;
          }
        }, onClose: function() {
          i3("Declined: Externally Halted");
        } });
      });
    }, "TAB/RPC": function(e4, n2, t3, r3) {
      return new Promise(function(o2, i3) {
        var s4 = a2.uid(), u2 = t3.redir, c3 = t3.includeOlderJsonRpcCall;
        n2.data = e4.data, function(e5, n3) {
          if (n3 === void 0 && (n3 = {}), e5 == null)
            return { send: ae, close: ae };
          var t4 = n3.onClose || ae;
          window.addEventListener("message", re({ close: s5, send: u3, onReady: n3.onReady || ae, onResponse: n3.onResponse || ae, onMessage: n3.onMessage || ae }));
          var r4 = X(_(e5)), o3 = r4[0], i4 = r4[1], a3 = setInterval(function() {
            o3 && o3.closed && s5();
          }, 500);
          return { send: u3, close: s5 };
          function s5() {
            try {
              window.removeEventListener("message", re), clearInterval(a3), i4(), t4();
            } catch (e6) {
              console.error("Tab Close Error", e6);
            }
          }
          function u3(e6) {
            try {
              o3.postMessage(JSON.parse(JSON.stringify(e6 || {})), "*");
            } catch (n4) {
              console.error("Tab Send Error", e6, n4);
            }
          }
        }(e4, { onReady: function(t4, o3) {
          var i4 = o3.send;
          try {
            try {
              i4({ fclVersion: "0.0.78", type: "FCL:VIEW:READY:RESPONSE", body: n2, service: { params: e4.params, data: e4.data, type: e4.type }, config: r3 }), i4({ fclVersion: "0.0.78", type: "FCL:FRAME:READY:RESPONSE", body: n2, service: { params: e4.params, data: e4.data, type: e4.type }, config: r3, deprecated: { message: "FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE" } }), c3 && i4({ jsonrpc: "2.0", id: s4, method: "fcl:sign", params: [n2, e4.params] });
            } catch (e5) {
              throw e5;
            }
            return Promise.resolve();
          } catch (e5) {
            return Promise.reject(e5);
          }
        }, onResponse: function(e5, n3) {
          var t4 = n3.close;
          try {
            if (typeof e5.data != "object")
              return;
            var r4 = B(e5.data);
            switch (r4.status) {
              case "APPROVED":
                o2(r4.data), !u2 && t4();
                break;
              case "DECLINED":
                i3("Declined: " + (r4.reason || "No reason supplied")), t4();
                break;
              case "REDIRECT":
                o2(r4), t4();
                break;
              default:
                i3("Declined: No reason supplied"), t4();
            }
          } catch (e6) {
            throw console.error("execPopRPC onResponse error", e6), e6;
          }
        }, onMessage: function(e5, n3) {
          var t4 = n3.close;
          try {
            if (typeof e5.data != "object")
              return;
            if (e5.data.jsonrpc !== "2.0")
              return;
            if (e5.data.id !== s4)
              return;
            var r4 = B(e5.data.result);
            switch (r4.status) {
              case "APPROVED":
                o2(r4.data), !u2 && t4();
                break;
              case "DECLINED":
                i3("Declined: " + (r4.reason || "No reason supplied")), t4();
                break;
              case "REDIRECT":
                o2(r4), t4();
                break;
              default:
                i3("Declined: No reason supplied"), t4();
            }
          } catch (e6) {
            throw console.error("execPopRPC onMessage error", e6), e6;
          }
        }, onClose: function() {
          i3("Declined: Externally Halted");
        } });
      });
    }, "EXT/RPC": function(e4, n2, t3, r3) {
      return new Promise(function(t4, o2) {
        !function(e5, n3) {
          n3 === void 0 && (n3 = {});
          try {
            var t5, r4 = function() {
              try {
                window.removeEventListener("message", re), a3();
              } catch (e6) {
                console.error("Extension Close Error", e6);
              }
            }, o3 = function(e6) {
              try {
                var n4;
                (n4 = window[i3]) == null || n4.flow.send(JSON.parse(JSON.stringify(e6 || {})));
              } catch (n5) {
                console.error("Extension Send Error", e6, n5);
              }
            };
            if (e5 == null)
              return Promise.resolve({ send: se, close: se });
            var i3 = e5.endpoint, a3 = n3.onClose || se;
            window.addEventListener("message", re({ close: r4, send: o3, onReady: n3.onReady || se, onResponse: n3.onResponse || se, onMessage: n3.onMessage || se })), Promise.resolve((t5 = window[i3]) == null ? void 0 : t5.flow.enable()).then(function() {
              return { send: o3, close: r4 };
            });
          } catch (e6) {
            return Promise.reject(e6);
          }
        }(e4, { onReady: function(t5, o3) {
          var i3 = o3.send;
          try {
            try {
              i3({ fclVersion: "0.0.78", type: "FCL:VIEW:READY:RESPONSE", body: n2, service: { params: e4.params, data: e4.data, type: e4.type }, config: r3 });
            } catch (e5) {
              throw e5;
            }
            return Promise.resolve();
          } catch (e5) {
            return Promise.reject(e5);
          }
        }, onResponse: function(e5, n3) {
          var r4 = n3.close;
          try {
            if (typeof e5.data != "object")
              return;
            var i3 = B(e5.data);
            switch (i3.status) {
              case "APPROVED":
                t4(i3.data), r4();
                break;
              case "DECLINED":
                o2("Declined: " + (i3.reason || "No reason supplied")), r4();
                break;
              case "REDIRECT":
                t4(i3), r4();
                break;
              default:
                o2("Declined: No reason supplied"), r4();
            }
          } catch (e6) {
            throw console.error("execExtRPC onResponse error", e6), e6;
          }
        }, onClose: function() {
          o2("Declined: Externally Halted");
        } });
      });
    } };
    var le = function(e4, n2) {
      try {
        de(e4, n2);
        var t3 = n2[0].addr, r3 = [], o2 = [];
        return n2.map(function(e5) {
          r3.push(e5.signature), o2.push(e5.keyId);
        }), Promise.resolve(b2({ cadence: fe, args: function(n3, i3) {
          return [n3(t3, i3.Address), n3(e4, i3.String), n3(o2, i3.Array([i3.Int])), n3(r3, i3.Array([i3.String]))];
        } }));
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var de = function(e4, t3) {
      return n.invariant(/^[0-9a-f]+$/i.test(e4), "Signed message must be a hex string"), n.invariant(Array.isArray(t3) && t3.every(function(e5, n2, t4) {
        return e5.f_type === "CompositeSignature";
      }), "Must include an Array of CompositeSignatures to verify"), n.invariant(t3.map(function(e5) {
        return e5.addr;
      }).every(function(e5, n2, t4) {
        return e5 === t4[0];
      }), "User signatures to be verified must be from a single account address"), true;
    };
    var fe = '\n  import Crypto\n\n  pub fun getHashAlgo(_ x: Int): HashAlgorithm {\n    switch x {\n    case 1:\n        return HashAlgorithm.SHA2_256\n    case 2:\n        return HashAlgorithm.SHA2_384\n    case 3:\n        return HashAlgorithm.SHA3_256\n    case 4:\n        return HashAlgorithm.SHA3_384\n    case 5:\n        return HashAlgorithm.KMAC128_BLS_BLS12_381\n    default:\n        return HashAlgorithm.SHA3_256\n    }\n  }\n      \n  pub fun main(\n    acctAddress: Address,\n    message: String,\n    keyIds: [Int],\n    signatures: [String],\n  ): Bool {\n\n    let keyList = Crypto.KeyList()\n    let account = getAccount(acctAddress)\n    \n    let rawPublicKeys: [String] = []\n    let weights: [UFix64] = []\n    let signAlgos: [UInt] = []\n    let hashAlgos: [UInt] = []\n    let uniqueKeys: {Int: Bool} = {}\n    \n    for id in keyIds {\n      uniqueKeys[id] = true\n    }\n\n    assert(uniqueKeys.keys.length == keyIds.length, message: "Invalid KeyId: Duplicate key found for account")\n\n    var counter = 0\n    while (counter < keyIds.length) {\n      let accountKey = account.keys.get(keyIndex: keyIds[counter]) ?? panic("Key provided does not exist on account")\n      rawPublicKeys.append(String.encodeHex(accountKey.publicKey.publicKey))\n      weights.append(accountKey.weight)\n      signAlgos.append(UInt(accountKey.publicKey.signatureAlgorithm.rawValue))\n      hashAlgos.append(UInt(accountKey.hashAlgorithm.rawValue))\n      counter = counter + 1\n    }\n\n    var totalWeight = 0.0\n    for weight in weights {\n      totalWeight = totalWeight + weight\n    }\n    \n    assert(totalWeight >= 1000.0, message: "Signature key weights do not meet threshold >= 1000.0")\n\n    var i = 0\n    for rawPublicKey in rawPublicKeys {\n      keyList.add(\n        PublicKey(\n          publicKey: rawPublicKey.decodeHex(),\n          signatureAlgorithm: signAlgos[i] == 2 ? SignatureAlgorithm.ECDSA_secp256k1  : SignatureAlgorithm.ECDSA_P256\n        ),\n        hashAlgorithm: getHashAlgo(Int(hashAlgos[i])),\n        weight: weights[i]\n      )\n      i = i + 1\n    }\n\n    let signatureSet: [Crypto.KeyListSignature] = []\n\n    var j = 0\n    for signature in signatures {\n      signatureSet.append(\n        Crypto.KeyListSignature(\n          keyIndex: j,\n          signature: signature.decodeHex()\n        )\n      )\n      j = j + 1\n    }\n      \n    let signedData = message.decodeHex()\n    \n    return keyList.verify(\n      signatureSet: signatureSet,\n      signedData: signedData\n    )\n  }\n';
    function pe(e4) {
      return e4 == null ? null : e4.f_vsn === "1.0.0" ? e4 : w({}, O, { addr: o.sansPrefix(e4.addr || e4.address), signature: e4.signature || e4.sig, keyId: e4.keyId });
    }
    function he(e4, n2, t3) {
      if (!e4.s) {
        if (t3 instanceof me) {
          if (!t3.s)
            return void (t3.o = he.bind(null, e4, n2));
          1 & n2 && (n2 = t3.s), t3 = t3.v;
        }
        if (t3 && t3.then)
          return void t3.then(he.bind(null, e4, n2), he.bind(null, e4, 2));
        e4.s = n2, e4.v = t3;
        var r3 = e4.o;
        r3 && r3(e4);
      }
    }
    var ve = function(e4, n2) {
      try {
        return console.warn("\n    %cFCL/SDK Deprecation Notice\n    ============================\n    verifyUserSignatures is no longer exported as fcl.currentUser().verifyUserSignatures\n    and is now available as fcl.verifyUserSignatures\n    ============================\n    ", "font-weight:bold;font-family:monospace;"), Promise.resolve(le(e4, n2));
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var me = function() {
      function e4() {
      }
      return e4.prototype.then = function(n2, t3) {
        var r3 = new e4(), o2 = this.s;
        if (o2) {
          var i3 = 1 & o2 ? n2 : t3;
          if (i3) {
            try {
              he(r3, 1, i3(this.v));
            } catch (e5) {
              he(r3, 2, e5);
            }
            return r3;
          }
          return this;
        }
        return this.o = function(e5) {
          try {
            var o3 = e5.v;
            1 & e5.s ? he(r3, 1, n2 ? n2(o3) : o3) : t3 ? he(r3, 1, t3(o3)) : he(r3, 2, o3);
          } catch (e6) {
            he(r3, 2, e6);
          }
        }, r3;
      }, e4;
    }();
    function ge(e4) {
      return e4 instanceof me && 1 & e4.s;
    }
    var ye = function(e4) {
      try {
        return Oe(), Promise.resolve(we({ redir: true })).then(function(t3) {
          var r3 = T(t3.services, "user-signature");
          return n.invariant(r3, "Current user must have authorized a signing service."), Pe(function() {
            return Promise.resolve(ue({ service: r3, msg: Le(e4) })).then(function(e5) {
              return Array.isArray(e5) ? e5.map(function(e6) {
                return pe(e6);
              }) : [pe(e5)];
            });
          }, function(e5) {
            return e5;
          });
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    function Pe(e4, n2) {
      try {
        var t3 = e4();
      } catch (e5) {
        return n2(e5);
      }
      return t3 && t3.then ? t3.then(void 0, n2) : t3;
    }
    var Ee = function() {
      return Promise.resolve(we()).then(function(n2) {
        return e3.arg(o.withPrefix(n2.addr), l.Address);
      });
    };
    var be = function(e4) {
      try {
        return Oe(), Promise.resolve(w({}, e4, { tempId: "CURRENT_USER", resolve: function(e5, n2) {
          try {
            return Promise.resolve(we({ redir: true })).then(function(t3) {
              var r3;
              function i3(n3) {
                if (r3)
                  return n3;
                if (a3)
                  return w({}, e5, { tempId: "CURRENT_USER", resolve: null, addr: o.sansPrefix(a3.identity.address), keyId: a3.identity.keyId, sequenceNum: null, signature: null, signingFunction: function(e6) {
                    try {
                      return Promise.resolve(ue({ service: a3, msg: e6, opts: { includeOlderJsonRpcCall: true } })).then(pe);
                    } catch (e7) {
                      return Promise.reject(e7);
                    }
                  } });
                throw new Error("No Authz or PreAuthz Service configured for CURRENT_USER");
              }
              var a3 = T(t3.services, "authz"), s4 = T(t3.services, "pre-authz"), u2 = function() {
                if (s4)
                  return Promise.resolve(ue({ service: s4, msg: n2 })).then(function(e6) {
                    var n3 = function(e7) {
                      var n4 = function(e8) {
                        return { f_type: "PreAuthzResponse", f_vsn: "1.0.0", proposer: (e8 || {}).proposer, payer: (e8 || {}).payer || [], authorization: (e8 || {}).authorization || [] };
                      }(e7), t4 = [];
                      n4.proposer != null && t4.push(["PROPOSER", n4.proposer]);
                      for (var r4, o2 = R(n4.payer || []); !(r4 = o2()).done; )
                        t4.push(["PAYER", r4.value]);
                      for (var i4, a4 = R(n4.authorization || []); !(i4 = a4()).done; )
                        t4.push(["AUTHORIZER", i4.value]);
                      return t4.map(function(e8) {
                        var n5 = e8[0], t5 = e8[1];
                        return { tempId: [t5.identity.address, t5.identity.keyId].join("|"), addr: t5.identity.address, keyId: t5.identity.keyId, signingFunction: function(e9) {
                          return ue({ service: t5, msg: e9 });
                        }, role: { proposer: n5 === "PROPOSER", payer: n5 === "PAYER", authorizer: n5 === "AUTHORIZER" } };
                      });
                    }(e6);
                    return r3 = 1, n3;
                  });
              }();
              return u2 && u2.then ? u2.then(i3) : i3(u2);
            });
          } catch (e6) {
            return Promise.reject(e6);
          }
        } }));
      } catch (e5) {
        return Promise.reject(e5);
      }
    };
    var we = function(t3) {
      var o2 = t3 === void 0 ? {} : t3, i3 = o2.service, a3 = o2.redir, s4 = a3 !== void 0 && a3;
      try {
        return Promise.resolve(new Promise(function(t4, o3) {
          try {
            return Oe(), Promise.resolve(Ne()).then(function(o4) {
              return Promise.resolve(Se()).then(function(a4) {
                var u2 = { redir: s4 };
                return Promise.resolve(function() {
                  try {
                    return Promise.resolve(e3.config.first(["discovery.wallet", "challenge.handshake"])).then(function(n2) {
                      return Promise.resolve(e3.config.get("discovery.authn.include", [])).then(function(t5) {
                        return Promise.resolve(e3.config.first(["discovery.wallet.method", "discovery.wallet.method.default"])).then(function(e4) {
                          return { type: "authn", endpoint: n2, method: e4, discoveryAuthnInclude: t5 };
                        });
                      });
                    });
                  } catch (e4) {
                    return Promise.reject(e4);
                  }
                }()).then(function(c3) {
                  var l2 = T(o4.services, "authn-refresh");
                  return Promise.resolve(e3.config.get("fcl.warning.suppress.redir")).then(function(e4) {
                    var d4;
                    function f5(e5) {
                      if (d4)
                        return e5;
                      var n2 = function(e6, n3) {
                        try {
                          var t5 = Pe(function() {
                            return Promise.resolve(ue({ service: w({}, i3 || c3, { method: (c3 == null ? void 0 : c3.method) || i3.method || "IFRAME/RPC" }), msg: a4, opts: u2, config: { discoveryAuthnInclude: c3.discoveryAuthnInclude } })).then(function(e7) {
                              return Promise.resolve(F2(e7)).then(function(e8) {
                                r2.send(Re, Ce, e8);
                              });
                            });
                          }, function(e7) {
                            console.error("Error while authenticating", e7);
                          });
                        } catch (e7) {
                          return n3(true, e7);
                        }
                        return t5 && t5.then ? t5.then(n3.bind(null, false), n3.bind(null, true)) : n3(false, t5);
                      }(0, function(e6, n3) {
                        return Promise.resolve(Ne()).then(function(r3) {
                          if (t4(r3), e6)
                            throw n3;
                          return n3;
                        });
                      });
                      return n2 && n2.then ? n2.then(function() {
                      }) : void 0;
                    }
                    s4 && !e4 && console.warn("You are manually enabling a very experimental feature that is not yet standard, use at your own risk.\n         You can disable this warning by setting fcl.warning.suppress.redir to true in your config"), n.invariant(i3 || c3.endpoint, '\n        If no service passed to "authenticate," then "discovery.wallet" must be defined in config.\n        See: "https://docs.onflow.org/fcl/reference/api/#setting-configuration-values"\n      ');
                    var p2 = function() {
                      if (o4.loggedIn) {
                        if (l2)
                          return function(e6, n2) {
                            try {
                              var t5 = Pe(function() {
                                return Promise.resolve(ue({ service: l2, msg: a4, opts: u2 })).then(function(e7) {
                                  return Promise.resolve(F2(e7)).then(function(e8) {
                                    r2.send(Re, Ce, e8);
                                  });
                                });
                              }, function(e7) {
                                console.error("Error: Could not refresh authentication.", e7);
                              });
                            } catch (e7) {
                              return n2();
                            }
                            return t5 && t5.then ? t5.then(n2, n2) : n2();
                          }(0, function() {
                            return Promise.resolve(Ne()).then(function(e6) {
                              var n2 = t4(e6);
                              return d4 = 1, n2;
                            });
                          });
                        var e5 = t4(o4);
                        return d4 = 1, e5;
                      }
                    }();
                    return p2 && p2.then ? p2.then(f5) : f5(p2);
                  });
                });
              });
            });
          } catch (e4) {
            return Promise.reject(e4);
          }
        }));
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    var Se = function() {
      try {
        var n2 = Date.now();
        return Promise.resolve(e3.config.get("fcl.appDomainTag")).then(function(e4) {
          return { timestamp: n2, appDomainTag: e4, extensions: window.fcl_extensions || [] };
        });
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    var Re = "CURRENT_USER";
    var xe = "CURRENT_USER/UPDATED";
    var Ce = "SET_CURRENT_USER";
    var Ie = '{\n  "f_type": "User",\n  "f_vsn": "1.0.0",\n  "addr":null,\n  "cid":null,\n  "loggedIn":null,\n  "expiresAt":null,\n  "services":[]\n}';
    var Ae = ((Z2 = {})[r2.INIT] = function(n2) {
      try {
        return typeof window == "undefined" && console.warn('\n        %cFCL Warning\n        ============================\n        "currentUser" is only available in the browser.\n        For more info, please see the docs: https://docs.onflow.org/fcl/\n        ============================\n        ', "font-weight:bold;font-family:monospace;"), n2.merge(JSON.parse(Ie)), Promise.resolve(e3.config.first(["fcl.storage", "fcl.storage.default"])).then(function(e4) {
          var t3 = function() {
            if (e4.can)
              return Promise.resolve(function(e5) {
                try {
                  var n3 = JSON.parse(Ie);
                  return Promise.resolve(e5.get(Re)).then(function(t4) {
                    return t4 != null && n3.f_vsn !== t4.f_vsn ? (e5.removeItem(Re), n3) : t4 || n3;
                  });
                } catch (e6) {
                  return Promise.reject(e6);
                }
              }(e4)).then(function(e5) {
                (function(e6) {
                  return e6.expiresAt == null || e6.expiresAt === 0 || e6.expiresAt > Date.now();
                })(e5) && n2.merge(e5);
              });
          }();
          if (t3 && t3.then)
            return t3.then(function() {
            });
        });
      } catch (e4) {
        return Promise.reject(e4);
      }
    }, Z2[r2.SUBSCRIBE] = function(e4, n2) {
      e4.subscribe(n2.from), e4.send(n2.from, xe, w({}, e4.all()));
    }, Z2[r2.UNSUBSCRIBE] = function(e4, n2) {
      e4.unsubscribe(n2.from);
    }, Z2.SNAPSHOT = function(e4, n2) {
      try {
        return n2.reply(w({}, e4.all())), Promise.resolve();
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, Z2[Ce] = function(n2, t3, r3) {
      try {
        return n2.merge(r3), Promise.resolve(e3.config.first(["fcl.storage", "fcl.storage.default"])).then(function(e4) {
          e4.can && e4.put(Re, n2.all()), n2.broadcast(xe, w({}, n2.all()));
        });
      } catch (e4) {
        return Promise.reject(e4);
      }
    }, Z2.DEL_CURRENT_USER = function(n2, t3) {
      try {
        return n2.merge(JSON.parse(Ie)), Promise.resolve(e3.config.first(["fcl.storage", "fcl.storage.default"])).then(function(e4) {
          e4.can && e4.put(Re, n2.all()), n2.broadcast(xe, w({}, n2.all()));
        });
      } catch (e4) {
        return Promise.reject(e4);
      }
    }, Z2);
    var Oe = function() {
      return r2.spawn(Ae, Re);
    };
    function je() {
      Oe(), r2.send(Re, "DEL_CURRENT_USER");
    }
    function De(e4) {
      Oe();
      var n2 = "@EXIT", t3 = r2.spawn(function(t4) {
        try {
          var o2;
          return t4.send(Re, r2.SUBSCRIBE), Promise.resolve(function(e5, n3, t5) {
            for (var r3; ; ) {
              var o3 = e5();
              if (ge(o3) && (o3 = o3.v), !o3)
                return i3;
              if (o3.then) {
                r3 = 0;
                break;
              }
              var i3 = t5();
              if (i3 && i3.then) {
                if (!ge(i3)) {
                  r3 = 1;
                  break;
                }
                i3 = i3.s;
              }
            }
            var a3 = new me(), s4 = he.bind(null, a3, 2);
            return (r3 === 0 ? o3.then(c3) : r3 === 1 ? i3.then(u2) : (void 0).then(function() {
              (o3 = e5()) ? o3.then ? o3.then(c3).then(void 0, s4) : c3(o3) : he(a3, 1, i3);
            })).then(void 0, s4), a3;
            function u2(n4) {
              i3 = n4;
              do {
                if (!(o3 = e5()) || ge(o3) && !o3.v)
                  return void he(a3, 1, i3);
                if (o3.then)
                  return void o3.then(c3).then(void 0, s4);
                ge(i3 = t5()) && (i3 = i3.v);
              } while (!i3 || !i3.then);
              i3.then(u2).then(void 0, s4);
            }
            function c3(e6) {
              e6 ? (i3 = t5()) && i3.then ? i3.then(u2).then(void 0, s4) : u2(i3) : he(a3, 1, i3);
            }
          }(function() {
            return !o2 && 1;
          }, 0, function() {
            return Promise.resolve(t4.receive()).then(function(i3) {
              if (i3.tag === n2)
                return t4.send(Re, r2.UNSUBSCRIBE), void (o2 = 1);
              e4(i3.data);
            });
          }));
        } catch (e5) {
          return Promise.reject(e5);
        }
      });
      return function() {
        return r2.send(t3, n2);
      };
    }
    function Ne() {
      return Oe(), r2.send(Re, "SNAPSHOT", null, { expectReply: true, timeout: 0 });
    }
    var ke;
    var Le = function(e4) {
      return n.invariant(/^[0-9a-f]+$/i.test(e4), "Message must be a hex string"), { message: e4 };
    };
    var Fe = function() {
      return { authenticate: we, unauthenticate: je, authorization: be, signUserMessage: ye, verifyUserSignatures: ve, subscribe: De, snapshot: Ne, resolveArgument: Ee };
    };
    Fe.authenticate = we, Fe.unauthenticate = je, Fe.authorization = be, Fe.signUserMessage = ye, Fe.verifyUserSignatures = ve, Fe.subscribe = De, Fe.snapshot = Ne, Fe.resolveArgument = Ee;
    var Te = function(n2) {
      try {
        return Promise.resolve(e3.send([e3.getTransactionStatus(n2)]).then(e3.decode));
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    var _e = function(e4) {
      return e4.status >= 4;
    };
    var Ue = function(e4) {
      return e4.status >= 3;
    };
    var Be = function(e4) {
      return e4.status >= 2;
    };
    var Ve = ((ke = {})[r2.INIT] = function(e4) {
      try {
        return Promise.resolve(Te(e4.self())).then(function(n2) {
          _e(n2) || setTimeout(function() {
            return e4.sendSelf("POLL");
          }, 2500), e4.merge(n2);
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, ke[r2.SUBSCRIBE] = function(e4, n2) {
      e4.subscribe(n2.from), e4.send(n2.from, r2.UPDATED, e4.all());
    }, ke[r2.UNSUBSCRIBE] = function(e4, n2) {
      e4.unsubscribe(n2.from);
    }, ke[r2.SNAPSHOT] = function(e4, n2) {
      try {
        return n2.reply(e4.all()), Promise.resolve();
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, ke.POLL = function(e4) {
      try {
        return Promise.resolve(Te(e4.self())).then(function(n2) {
          var t3, o2;
          _e(n2) || setTimeout(function() {
            return e4.sendSelf("POLL");
          }, 2500), t3 = e4.all(), o2 = n2, JSON.stringify(t3) !== JSON.stringify(o2) && e4.broadcast(r2.UPDATED, n2), e4.merge(n2);
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, ke);
    var Me = function(e4) {
      if (typeof e4 == "object" && (e4 = e4.transactionId), e4 == null)
        throw new Error("transactionId required");
      return e4;
    };
    var He = function(e4) {
      return r2.spawn(Ve, Me(e4));
    };
    function ze(e4) {
      function n2(n3) {
        return r2.subscriber(Me(e4), He, n3);
      }
      function t3(e5) {
        return function(t4) {
          t4 === void 0 && (t4 = {});
          var r3 = t4.suppress || false;
          return new Promise(function(t5, o2) {
            var i3 = n2(function(n3) {
              n3.statusCode && !r3 ? (o2(n3.errorMessage), i3()) : e5(n3) && (t5(n3), i3());
            });
          });
        };
      }
      return { snapshot: function() {
        return r2.snapshoter(e4, He);
      }, subscribe: n2, onceFinalized: t3(Be), onceExecuted: t3(Ue), onceSealed: t3(_e) };
    }
    ze.isUnknown = function(e4) {
      return e4.status >= 0;
    }, ze.isPending = function(e4) {
      return e4.status >= 1;
    }, ze.isFinalized = Be, ze.isExecuted = Ue, ze.isSealed = _e, ze.isExpired = function(e4) {
      return e4.status === 5;
    };
    var We;
    var Ke = function(n2) {
      try {
        var t3 = setTimeout;
        return Promise.resolve(e3.config().get("fcl.eventPollRate", 1e4)).then(function(e4) {
          return t3(function() {
            return n2.sendSelf("TICK");
          }, e4);
        });
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    var Ye = ((We = {}).TICK = function(n2) {
      try {
        if (!n2.hasSubs())
          return Promise.resolve();
        var t3 = n2.get("hwm"), r3 = function() {
          if (t3 == null) {
            var r4 = n2.put;
            return Promise.resolve(e3.latestBlock()).then(function(e4) {
              r4.call(n2, "hwm", e4);
              var t4 = n2.put;
              return Promise.resolve(Ke(n2)).then(function(e5) {
                t4.call(n2, "tick", e5);
              });
            });
          }
          return Promise.resolve(e3.latestBlock()).then(function(r5) {
            return n2.put("hwm", r5), Promise.resolve(e3.send([e3.getEvents(n2.self(), t3.height, r5.height - 1)]).then(e3.decode)).then(function(e4) {
              for (var t4, r6 = R(e4); !(t4 = r6()).done; )
                n2.broadcast("UPDATED", t4.value.data);
              var o2 = n2.put;
              return Promise.resolve(Ke(n2)).then(function(e5) {
                o2.call(n2, "tick", e5);
              });
            });
          });
        }();
        return Promise.resolve(r3 && r3.then ? r3.then(function() {
        }) : void 0);
      } catch (e4) {
        return Promise.reject(e4);
      }
    }, We[r2.SUBSCRIBE] = function(e4, n2) {
      try {
        var t3 = function() {
          e4.subscribe(n2.from);
        }, r3 = function() {
          if (!e4.hasSubs()) {
            var n3 = e4.put;
            return Promise.resolve(Ke(e4)).then(function(t4) {
              n3.call(e4, "tick", t4);
            });
          }
        }();
        return Promise.resolve(r3 && r3.then ? r3.then(t3) : t3());
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, We[r2.UNSUBSCRIBE] = function(e4, n2) {
      e4.unsubscribe(n2.from), e4.hasSubs() || (clearTimeout(e4.get("tick")), e4.delete("tick"), e4.delete("hwm"));
    }, We);
    var qe = function(e4) {
      return r2.spawn(Ye, e4);
    };
    var Je = function(t3) {
      t3 === void 0 && (t3 = []);
      try {
        return Promise.resolve(e3.config.get("discovery.authn.endpoint")).then(function(r3) {
          return n.invariant(Boolean(r3), '"discovery.authn.endpoint" in config must be defined.'), Promise.resolve(e3.config.get("discovery.authn.include", [])).then(function(e4) {
            var n2 = new URL(r3);
            return fetch(n2, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ fclVersion: "0.0.78", include: e4 }) }).then(function(e5) {
              return e5.json();
            }).then(function(e5) {
              return [].concat(t3, e5);
            });
          });
        });
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    function Ge(e4) {
      e4 === void 0 && (e4 = []);
      var n2 = window.fcl_extensions || [];
      return [].concat(n2, e4);
    }
    var Xe;
    var Ze = ((Xe = {})[r2.INIT] = function(e4) {
      try {
        return typeof window == "undefined" && console.warn('\n      %cFCL Warning\n      ============================\n      "fcl.discovery" is only available in the browser.\n      For more info, please see the docs: https://docs.onflow.org/fcl/\n      ============================\n      ', "font-weight:bold;font-family:monospace;"), Promise.resolve((n2 = { type: "authn" }, t3 = n2.type, function() {
          var e5 = arguments;
          return function(n3) {
            return [].slice.call(e5).reduce(function(e6, n4) {
              return e6.then(n4);
            }, Promise.resolve(n3));
          };
        }(Je, Ge, function(e5) {
          return function(e6, n3) {
            return e6 === void 0 && (e6 = []), e6.filter(function(e7) {
              return e7.type === n3;
            });
          }(e5, t3);
        })([]))).then(function(n3) {
          e4.put("results", n3);
        });
      } catch (e5) {
        return Promise.reject(e5);
      }
      var n2, t3;
    }, Xe[r2.SUBSCRIBE] = function(e4, n2) {
      e4.subscribe(n2.from), e4.send(n2.from, "UPDATED", w({}, e4.all()));
    }, Xe[r2.UNSUBSCRIBE] = function(e4, n2) {
      return e4.unsubscribe(n2.from);
    }, Xe.SNAPSHOT = function(e4, n2) {
      try {
        return Promise.resolve(n2.reply(w({}, e4.all())));
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, Xe);
    var $e = function() {
      return r2.spawn(Ze, "authn");
    };
    var Qe = { authn: { subscribe: function(e4) {
      return r2.subscriber("authn", $e, e4);
    }, snapshot: function() {
      return r2.snapshoter("authn", $e);
    } } };
    var en = function(e4, n2) {
      n2 === void 0 && (n2 = function() {
      });
      var t3 = function(t4) {
        var r3 = t4.data;
        typeof r3 == "object" && typeof r3 != null && r3.type === e4 && n2(function(e5) {
          var n3;
          return e5.deprecated && console.warn("DEPRECATION NOTICE", e5.deprecated.message), e5 == null || (n3 = e5.body) == null || delete n3.interaction, e5;
        }(r3));
      };
      return window.addEventListener("message", t3), function() {
        return window.removeEventListener("message", t3);
      };
    };
    var nn = function(e4, n2) {
      n2 === void 0 && (n2 = {}), window.location !== window.parent.location ? window.parent.postMessage(w({}, n2, { type: e4 }), "*") : window.opener.postMessage(w({}, n2, { type: e4 }), "*");
    };
    var tn = function(e4, n2) {
      return Buffer.from(e4.padEnd(2 * n2, 0), "hex");
    };
    var rn = { __proto__: null, sendMsgToFCL: nn, ready: function(e4, n2) {
      en("FCL:VIEW:READY:RESPONSE", e4), nn("FCL:VIEW:READY");
    }, close: function() {
      nn("FCL:VIEW:CLOSE");
    }, approve: function(e4) {
      nn("FCL:VIEW:RESPONSE", { f_type: "PollingResponse", f_vsn: "1.0.0", status: "APPROVED", reason: null, data: e4 });
    }, decline: function(e4) {
      nn("FCL:VIEW:RESPONSE", { f_type: "PollingResponse", f_vsn: "1.0.0", status: "DECLINED", reason: e4, data: null });
    }, redirect: function(e4) {
      nn("FCL:VIEW:RESPONSE", { f_type: "PollingResponse", f_vsn: "1.0.0", status: "REDIRECT", reason: null, data: e4 });
    }, onMessageFromFCL: en, encodeMessageFromSignable: e3.encodeMessageFromSignable, CompositeSignature: function(e4, n2, t3) {
      this.f_type = O.f_type, this.f_vsn = O.f_vsn, this.addr = o.withPrefix(e4), this.keyId = Number(n2), this.signature = t3;
    }, encodeMessageForProvableAuthnSigning: function(e4, t3, r3) {
      r3 === void 0 && (r3 = ""), n.invariant(e4, "Encode Message From Provable Authn Error: address must be defined"), n.invariant(t3, "Encode Message From Provable Authn Error: timestamp must be defined");
      var a3 = tn(Buffer.from("FLOW-V0.0-user").toString("hex"), 32).toString("hex"), s4 = tn(Buffer.from(r3).toString("hex"), 32).toString("hex");
      return a3 + (r3 ? i2.encode([s4, o.withPrefix(e4), t3]).toString("hex") : i2.encode([o.withPrefix(e4), t3]).toString("hex"));
    }, encodeMessageForProvableAuthnVerifying: function(e4, t3, r3) {
      r3 === void 0 && (r3 = ""), n.invariant(e4, "Encode Message From Provable Authn Error: address must be defined"), n.invariant(t3, "Encode Message From Provable Authn Error: timestamp must be defined");
      var a3, s4 = r3 ? (a3 = Buffer.from(r3).toString("hex"), Buffer.from(a3.padEnd(64, 0), "hex")).toString("hex") : null;
      return r3 ? i2.encode([s4, o.withPrefix(e4), t3]).toString("hex") : i2.encode([o.withPrefix(e4), t3]).toString("hex");
    }, injectExtService: function(e4) {
      e4.type === "authn" && e4.endpoint != null ? (Array.isArray(window.fcl_extensions) || (window.fcl_extensions = []), window.fcl_extensions.push(e4)) : console.warn("Authn service is required");
    } };
    var on = Fe().authorization;
    var an = l;
    Object.defineProperty(exports2, "TestUtils", { enumerable: true, get: function() {
      return e3.TestUtils;
    } }), Object.defineProperty(exports2, "account", { enumerable: true, get: function() {
      return e3.account;
    } }), Object.defineProperty(exports2, "arg", { enumerable: true, get: function() {
      return e3.arg;
    } }), Object.defineProperty(exports2, "args", { enumerable: true, get: function() {
      return e3.args;
    } }), Object.defineProperty(exports2, "atBlockHeight", { enumerable: true, get: function() {
      return e3.atBlockHeight;
    } }), Object.defineProperty(exports2, "atBlockId", { enumerable: true, get: function() {
      return e3.atBlockId;
    } }), Object.defineProperty(exports2, "authorization", { enumerable: true, get: function() {
      return e3.authorization;
    } }), Object.defineProperty(exports2, "authorizations", { enumerable: true, get: function() {
      return e3.authorizations;
    } }), Object.defineProperty(exports2, "block", { enumerable: true, get: function() {
      return e3.block;
    } }), Object.defineProperty(exports2, "build", { enumerable: true, get: function() {
      return e3.build;
    } }), Object.defineProperty(exports2, "config", { enumerable: true, get: function() {
      return e3.config;
    } }), Object.defineProperty(exports2, "createSignableVoucher", { enumerable: true, get: function() {
      return e3.createSignableVoucher;
    } }), Object.defineProperty(exports2, "decode", { enumerable: true, get: function() {
      return e3.decode;
    } }), Object.defineProperty(exports2, "getAccount", { enumerable: true, get: function() {
      return e3.getAccount;
    } }), Object.defineProperty(exports2, "getBlock", { enumerable: true, get: function() {
      return e3.getBlock;
    } }), Object.defineProperty(exports2, "getBlockByHeight", { enumerable: true, get: function() {
      return e3.getBlockByHeight;
    } }), Object.defineProperty(exports2, "getBlockById", { enumerable: true, get: function() {
      return e3.getBlockById;
    } }), Object.defineProperty(exports2, "getBlockHeader", { enumerable: true, get: function() {
      return e3.getBlockHeader;
    } }), Object.defineProperty(exports2, "getCollection", { enumerable: true, get: function() {
      return e3.getCollection;
    } }), Object.defineProperty(exports2, "getEvents", { enumerable: true, get: function() {
      return e3.getEvents;
    } }), Object.defineProperty(exports2, "getEventsAtBlockHeightRange", { enumerable: true, get: function() {
      return e3.getEventsAtBlockHeightRange;
    } }), Object.defineProperty(exports2, "getEventsAtBlockIds", { enumerable: true, get: function() {
      return e3.getEventsAtBlockIds;
    } }), Object.defineProperty(exports2, "getLatestBlock", { enumerable: true, get: function() {
      return e3.getLatestBlock;
    } }), Object.defineProperty(exports2, "getTransaction", { enumerable: true, get: function() {
      return e3.getTransaction;
    } }), Object.defineProperty(exports2, "getTransactionStatus", { enumerable: true, get: function() {
      return e3.getTransactionStatus;
    } }), Object.defineProperty(exports2, "invariant", { enumerable: true, get: function() {
      return e3.invariant;
    } }), Object.defineProperty(exports2, "isBad", { enumerable: true, get: function() {
      return e3.isBad;
    } }), Object.defineProperty(exports2, "isOk", { enumerable: true, get: function() {
      return e3.isOk;
    } }), Object.defineProperty(exports2, "latestBlock", { enumerable: true, get: function() {
      return e3.latestBlock;
    } }), Object.defineProperty(exports2, "limit", { enumerable: true, get: function() {
      return e3.limit;
    } }), Object.defineProperty(exports2, "param", { enumerable: true, get: function() {
      return e3.param;
    } }), Object.defineProperty(exports2, "params", { enumerable: true, get: function() {
      return e3.params;
    } }), Object.defineProperty(exports2, "payer", { enumerable: true, get: function() {
      return e3.payer;
    } }), Object.defineProperty(exports2, "ping", { enumerable: true, get: function() {
      return e3.ping;
    } }), Object.defineProperty(exports2, "pipe", { enumerable: true, get: function() {
      return e3.pipe;
    } }), Object.defineProperty(exports2, "proposer", { enumerable: true, get: function() {
      return e3.proposer;
    } }), Object.defineProperty(exports2, "ref", { enumerable: true, get: function() {
      return e3.ref;
    } }), Object.defineProperty(exports2, "script", { enumerable: true, get: function() {
      return e3.script;
    } }), Object.defineProperty(exports2, "send", { enumerable: true, get: function() {
      return e3.send;
    } }), Object.defineProperty(exports2, "transaction", { enumerable: true, get: function() {
      return e3.transaction;
    } }), Object.defineProperty(exports2, "validator", { enumerable: true, get: function() {
      return e3.validator;
    } }), Object.defineProperty(exports2, "why", { enumerable: true, get: function() {
      return e3.why;
    } }), Object.defineProperty(exports2, "display", { enumerable: true, get: function() {
      return o.display;
    } }), Object.defineProperty(exports2, "sansPrefix", { enumerable: true, get: function() {
      return o.sansPrefix;
    } }), Object.defineProperty(exports2, "withPrefix", { enumerable: true, get: function() {
      return o.withPrefix;
    } }), Object.defineProperty(exports2, "cadence", { enumerable: true, get: function() {
      return s3.template;
    } }), Object.defineProperty(exports2, "cdc", { enumerable: true, get: function() {
      return s3.template;
    } }), exports2.VERSION = "0.0.78", exports2.WalletUtils = rn, exports2.authenticate = function(e4) {
      return e4 === void 0 && (e4 = {}), Fe().authenticate(e4);
    }, exports2.authz = on, exports2.currentUser = Fe, exports2.discovery = Qe, exports2.events = function(e4) {
      return { subscribe: function(n2) {
        return r2.subscriber(e4, qe, n2);
      } };
    }, exports2.logIn = function(e4) {
      return e4 === void 0 && (e4 = {}), Fe().authenticate(e4);
    }, exports2.mutate = function(e4) {
      e4 === void 0 && (e4 = {});
      try {
        return Promise.resolve(function(t3, r3) {
          try {
            var o2 = Promise.resolve(function(e5) {
              try {
                return n.invariant(v(e5), "mutate(opts) -- opts is required"), n.invariant(m2(e5), "mutate(opts) -- opts must be an object"), n.invariant(v(e5.cadence), "mutate({ cadence }) -- cadence is required"), n.invariant(g(e5.cadence), "mutate({ cadence }) -- cadence must be a string"), Promise.resolve(c2.config.get("accessNode.api")).then(function(e6) {
                  n.invariant(e6, 'Required value for "accessNode.api" not defined in config. See: https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration');
                });
              } catch (e6) {
                return Promise.reject(e6);
              }
            }(e4)).then(function() {
              return Promise.resolve(c2.config().get("fcl.authz", Fe().authorization)).then(function(n2) {
                return c2.send([c2.transaction(e4.cadence), c2.args(E(e4.args || [])), e4.limit && P(e4.limit) && c2.limit(e4.limit), c2.proposer(e4.proposer || e4.authz || n2), c2.payer(e4.payer || e4.authz || n2), c2.authorizations(e4.authorizations || [e4.authz || n2])]).then(c2.decode);
              });
            });
          } catch (e5) {
            return r3(e5);
          }
          return o2 && o2.then ? o2.then(void 0, r3) : o2;
        }(0, function(e5) {
          throw e5;
        }));
      } catch (e5) {
        return Promise.reject(e5);
      }
    }, exports2.query = b2, exports2.reauthenticate = function(e4) {
      return e4 === void 0 && (e4 = {}), Fe().unauthenticate(), Fe().authenticate(e4);
    }, exports2.serialize = function(n2, t3) {
      n2 === void 0 && (n2 = []), t3 === void 0 && (t3 = {});
      try {
        return Promise.resolve(e3.config.first(["sdk.resolve"], t3.resolve || e3.resolve)).then(function(t4) {
          function r3() {
            return Promise.resolve(t4(n2)).then(function(n3) {
              return JSON.stringify(e3.createSignableVoucher(n3), null, 2);
            });
          }
          var o2 = function() {
            if (Array.isArray(n2))
              return Promise.resolve(e3.pipe(e3.interaction(), n2)).then(function(e4) {
                n2 = e4;
              });
          }();
          return o2 && o2.then ? o2.then(r3) : r3();
        });
      } catch (e4) {
        return Promise.reject(e4);
      }
    }, exports2.signUp = function(e4) {
      return e4 === void 0 && (e4 = {}), Fe().authenticate(e4);
    }, exports2.t = an, exports2.tx = ze, exports2.unauthenticate = function() {
      return Fe().unauthenticate();
    }, exports2.verifyUserSignatures = le;
  }
});

// node_modules/@samatech/onflow-fcl-esm/dist/fcl.cjs.js
var require_fcl_cjs = __commonJS({
  "node_modules/@samatech/onflow-fcl-esm/dist/fcl.cjs.js"(exports2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var fcl_js = require_fcl();
    exports2.TransactionStatus = void 0;
    (function(TransactionStatus) {
      TransactionStatus[TransactionStatus["Unknown"] = 0] = "Unknown";
      TransactionStatus[TransactionStatus["Pending"] = 1] = "Pending";
      TransactionStatus[TransactionStatus["Finalized"] = 2] = "Finalized";
      TransactionStatus[TransactionStatus["Executed"] = 3] = "Executed";
      TransactionStatus[TransactionStatus["Sealed"] = 4] = "Sealed";
      TransactionStatus[TransactionStatus["Expired"] = 5] = "Expired";
    })(exports2.TransactionStatus || (exports2.TransactionStatus = {}));
    Object.keys(fcl_js).forEach(function(k) {
      if (k !== "default" && !exports2.hasOwnProperty(k))
        Object.defineProperty(exports2, k, {
          enumerable: true,
          get: function() {
            return fcl_js[k];
          }
        });
    });
  }
});

// .svelte-kit/output/server/chunks/index-b0a82c49.js
function fullIcon(data) {
  return { ...iconDefaults, ...data };
}
function mergeIconData(icon, alias) {
  const result = { ...icon };
  for (const key in iconDefaults) {
    const prop = key;
    if (alias[prop] !== void 0) {
      const value = alias[prop];
      if (result[prop] === void 0) {
        result[prop] = value;
        continue;
      }
      switch (prop) {
        case "rotate":
          result[prop] = (result[prop] + value) % 4;
          break;
        case "hFlip":
        case "vFlip":
          result[prop] = value !== result[prop];
          break;
        default:
          result[prop] = value;
      }
    }
  }
  return result;
}
function getIconData$1(data, name, full = false) {
  function getIcon(name2, iteration) {
    var _a, _b, _c, _d;
    if (data.icons[name2] !== void 0) {
      return Object.assign({}, data.icons[name2]);
    }
    if (iteration > 5) {
      return null;
    }
    if (((_a = data.aliases) == null ? void 0 : _a[name2]) !== void 0) {
      const item = (_b = data.aliases) == null ? void 0 : _b[name2];
      const result2 = getIcon(item.parent, iteration + 1);
      if (result2) {
        return mergeIconData(result2, item);
      }
      return result2;
    }
    if (iteration === 0 && ((_c = data.chars) == null ? void 0 : _c[name2]) !== void 0) {
      return getIcon((_d = data.chars) == null ? void 0 : _d[name2], iteration + 1);
    }
    return null;
  }
  const result = getIcon(name, 0);
  if (result) {
    for (const key in iconDefaults) {
      if (result[key] === void 0 && data[key] !== void 0) {
        result[key] = data[key];
      }
    }
  }
  return result && full ? fullIcon(result) : result;
}
function validateIconProps(item, fix) {
  for (const key in item) {
    const attr = key;
    const value = item[attr];
    const type = typeof value;
    if (type === "undefined") {
      delete item[attr];
      continue;
    }
    switch (key) {
      case "body":
      case "parent":
        if (type !== "string") {
          return key;
        }
        break;
      case "hFlip":
      case "vFlip":
      case "hidden":
        if (type !== "boolean") {
          if (fix) {
            delete item[attr];
          } else {
            return key;
          }
        }
        break;
      case "width":
      case "height":
      case "left":
      case "top":
      case "rotate":
      case "inlineHeight":
      case "inlineTop":
      case "verticalAlign":
        if (type !== "number") {
          if (fix) {
            delete item[attr];
          } else {
            return key;
          }
        }
        break;
      default:
        if (type === "object") {
          if (fix) {
            delete item[attr];
          } else {
            return key;
          }
        }
    }
  }
  return null;
}
function validateIconSet(obj, options2) {
  const fix = !!(options2 == null ? void 0 : options2.fix);
  if (typeof obj !== "object" || obj === null || typeof obj.icons !== "object" || !obj.icons) {
    throw new Error("Bad icon set");
  }
  const data = obj;
  if (typeof (options2 == null ? void 0 : options2.prefix) === "string") {
    data.prefix = options2.prefix;
  } else if (typeof data.prefix !== "string" || !data.prefix.match(matchName)) {
    throw new Error("Invalid prefix");
  }
  if (typeof (options2 == null ? void 0 : options2.provider) === "string") {
    data.provider = options2.provider;
  } else if (data.provider !== void 0) {
    const value = data.provider;
    if (typeof value !== "string" || value !== "" && !value.match(matchName)) {
      if (fix) {
        delete data.provider;
      } else {
        throw new Error("Invalid provider");
      }
    }
  }
  const icons = data.icons;
  Object.keys(icons).forEach((name) => {
    if (!name.match(matchName)) {
      if (fix) {
        delete icons[name];
        return;
      }
      throw new Error(`Invalid icon name: "${name}"`);
    }
    const item = icons[name];
    if (typeof item !== "object" || item === null || typeof item.body !== "string") {
      if (fix) {
        delete icons[name];
        return;
      }
      throw new Error(`Invalid icon: "${name}"`);
    }
    const key = typeof item.parent === "string" ? "parent" : validateIconProps(item, fix);
    if (key !== null) {
      if (fix) {
        delete icons[name];
        return;
      }
      throw new Error(`Invalid property "${key}" in icon "${name}"`);
    }
  });
  if (!Object.keys(data.icons).length) {
    throw new Error("Icon set is empty");
  }
  if (data.aliases !== void 0) {
    if (typeof data.aliases !== "object" || data.aliases === null) {
      if (fix) {
        delete data.aliases;
      } else {
        throw new Error("Invalid aliases list");
      }
    }
  }
  if (typeof data.aliases === "object") {
    let validateAlias = function(name, iteration) {
      if (validatedAliases.has(name)) {
        return !failedAliases.has(name);
      }
      const item = aliases[name];
      if (iteration > 5 || typeof item !== "object" || item === null || typeof item.parent !== "string" || !name.match(matchName)) {
        if (fix) {
          delete aliases[name];
          failedAliases.add(name);
          return false;
        }
        throw new Error(`Invalid icon alias: "${name}"`);
      }
      const parent = item.parent;
      if (data.icons[parent] === void 0) {
        if (aliases[parent] === void 0 || !validateAlias(parent, iteration + 1)) {
          if (fix) {
            delete aliases[name];
            failedAliases.add(name);
            return false;
          }
          throw new Error(`Missing parent icon for alias "${name}`);
        }
      }
      if (fix && item.body !== void 0) {
        delete item.body;
      }
      const key = item.body !== void 0 ? "body" : validateIconProps(item, fix);
      if (key !== null) {
        if (fix) {
          delete aliases[name];
          failedAliases.add(name);
          return false;
        }
        throw new Error(`Invalid property "${key}" in alias "${name}"`);
      }
      validatedAliases.add(name);
      return true;
    };
    const aliases = data.aliases;
    const validatedAliases = /* @__PURE__ */ new Set();
    const failedAliases = /* @__PURE__ */ new Set();
    Object.keys(aliases).forEach((name) => {
      validateAlias(name, 0);
    });
    if (fix && !Object.keys(data.aliases).length) {
      delete data.aliases;
    }
  }
  Object.keys(iconDefaults).forEach((prop) => {
    const expectedType = typeof iconDefaults[prop];
    const actualType = typeof data[prop];
    if (actualType !== "undefined" && actualType !== expectedType) {
      throw new Error(`Invalid value type for "${prop}"`);
    }
  });
  if (data.chars !== void 0) {
    if (typeof data.chars !== "object" || data.chars === null) {
      if (fix) {
        delete data.chars;
      } else {
        throw new Error("Invalid characters map");
      }
    }
  }
  if (typeof data.chars === "object") {
    const chars2 = data.chars;
    Object.keys(chars2).forEach((char) => {
      var _a;
      if (!char.match(matchChar) || typeof chars2[char] !== "string") {
        if (fix) {
          delete chars2[char];
          return;
        }
        throw new Error(`Invalid character "${char}"`);
      }
      const target = chars2[char];
      if (data.icons[target] === void 0 && ((_a = data.aliases) == null ? void 0 : _a[target]) === void 0) {
        if (fix) {
          delete chars2[char];
          return;
        }
        throw new Error(`Character "${char}" points to missing icon "${target}"`);
      }
    });
    if (fix && !Object.keys(data.chars).length) {
      delete data.chars;
    }
  }
  return data;
}
function isVariation(item) {
  for (const key in iconDefaults) {
    if (item[key] !== void 0) {
      return true;
    }
  }
  return false;
}
function parseIconSet(data, callback, options2) {
  options2 = options2 || {};
  const names = [];
  if (typeof data !== "object" || typeof data.icons !== "object") {
    return names;
  }
  const validate = options2.validate;
  if (validate !== false) {
    try {
      validateIconSet(data, typeof validate === "object" ? validate : { fix: true });
    } catch (err) {
      return names;
    }
  }
  if (data.not_found instanceof Array) {
    data.not_found.forEach((name) => {
      callback(name, null);
      names.push(name);
    });
  }
  const icons = data.icons;
  Object.keys(icons).forEach((name) => {
    const iconData = getIconData$1(data, name, true);
    if (iconData) {
      callback(name, iconData);
      names.push(name);
    }
  });
  const parseAliases = options2.aliases || "all";
  if (parseAliases !== "none" && typeof data.aliases === "object") {
    const aliases = data.aliases;
    Object.keys(aliases).forEach((name) => {
      if (parseAliases === "variations" && isVariation(aliases[name])) {
        return;
      }
      const iconData = getIconData$1(data, name, true);
      if (iconData) {
        callback(name, iconData);
        names.push(name);
      }
    });
  }
  return names;
}
function newStorage(provider, prefix) {
  return {
    provider,
    prefix,
    icons: /* @__PURE__ */ Object.create(null),
    missing: /* @__PURE__ */ Object.create(null)
  };
}
function getStorage(provider, prefix) {
  if (storage$1[provider] === void 0) {
    storage$1[provider] = /* @__PURE__ */ Object.create(null);
  }
  const providerStorage = storage$1[provider];
  if (providerStorage[prefix] === void 0) {
    providerStorage[prefix] = newStorage(provider, prefix);
  }
  return providerStorage[prefix];
}
function addIconSet(storage2, data) {
  const t2 = Date.now();
  return parseIconSet(data, (name, icon) => {
    if (icon) {
      storage2.icons[name] = icon;
    } else {
      storage2.missing[name] = t2;
    }
  });
}
function addIconToStorage(storage2, name, icon) {
  try {
    if (typeof icon.body === "string") {
      storage2.icons[name] = Object.freeze(fullIcon(icon));
      return true;
    }
  } catch (err) {
  }
  return false;
}
function getIconFromStorage(storage2, name) {
  const value = storage2.icons[name];
  return value === void 0 ? null : value;
}
function allowSimpleNames(allow) {
  if (typeof allow === "boolean") {
    simpleNames = allow;
  }
  return simpleNames;
}
function getIconData(name) {
  const icon = typeof name === "string" ? stringToIcon(name, true, simpleNames) : name;
  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;
}
function addIcon(name, data) {
  const icon = stringToIcon(name, true, simpleNames);
  if (!icon) {
    return false;
  }
  const storage2 = getStorage(icon.provider, icon.prefix);
  return addIconToStorage(storage2, icon.name, data);
}
function addCollection(data, provider) {
  if (typeof data !== "object") {
    return false;
  }
  if (typeof provider !== "string") {
    provider = typeof data.provider === "string" ? data.provider : "";
  }
  if (simpleNames && provider === "" && (typeof data.prefix !== "string" || data.prefix === "")) {
    let added = false;
    parseIconSet(data, (name, icon) => {
      if (icon && addIcon(name, icon)) {
        added = true;
      }
    }, {
      validate: {
        fix: true,
        prefix: ""
      }
    });
    return added;
  }
  if (typeof data.prefix !== "string" || !validateIcon({
    provider,
    prefix: data.prefix,
    name: "a"
  })) {
    return false;
  }
  const storage2 = getStorage(provider, data.prefix);
  return !!addIconSet(storage2, data);
}
function mergeCustomisations(defaults2, item) {
  const result = {};
  for (const key in defaults2) {
    const attr = key;
    result[attr] = defaults2[attr];
    if (item[attr] === void 0) {
      continue;
    }
    const value = item[attr];
    switch (attr) {
      case "inline":
      case "slice":
        if (typeof value === "boolean") {
          result[attr] = value;
        }
        break;
      case "hFlip":
      case "vFlip":
        if (value === true) {
          result[attr] = !result[attr];
        }
        break;
      case "hAlign":
      case "vAlign":
        if (typeof value === "string" && value !== "") {
          result[attr] = value;
        }
        break;
      case "width":
      case "height":
        if (typeof value === "string" && value !== "" || typeof value === "number" && value || value === null) {
          result[attr] = value;
        }
        break;
      case "rotate":
        if (typeof value === "number") {
          result[attr] += value;
        }
        break;
    }
  }
  return result;
}
function calculateSize(size, ratio, precision) {
  if (ratio === 1) {
    return size;
  }
  precision = precision === void 0 ? 100 : precision;
  if (typeof size === "number") {
    return Math.ceil(size * ratio * precision) / precision;
  }
  if (typeof size !== "string") {
    return size;
  }
  const oldParts = size.split(unitsSplit);
  if (oldParts === null || !oldParts.length) {
    return size;
  }
  const newParts = [];
  let code = oldParts.shift();
  let isNumber = unitsTest.test(code);
  while (true) {
    if (isNumber) {
      const num = parseFloat(code);
      if (isNaN(num)) {
        newParts.push(code);
      } else {
        newParts.push(Math.ceil(num * ratio * precision) / precision);
      }
    } else {
      newParts.push(code);
    }
    code = oldParts.shift();
    if (code === void 0) {
      return newParts.join("");
    }
    isNumber = !isNumber;
  }
}
function preserveAspectRatio(props) {
  let result = "";
  switch (props.hAlign) {
    case "left":
      result += "xMin";
      break;
    case "right":
      result += "xMax";
      break;
    default:
      result += "xMid";
  }
  switch (props.vAlign) {
    case "top":
      result += "YMin";
      break;
    case "bottom":
      result += "YMax";
      break;
    default:
      result += "YMid";
  }
  result += props.slice ? " slice" : " meet";
  return result;
}
function iconToSVG(icon, customisations) {
  const box = {
    left: icon.left,
    top: icon.top,
    width: icon.width,
    height: icon.height
  };
  let body = icon.body;
  [icon, customisations].forEach((props) => {
    const transformations = [];
    const hFlip = props.hFlip;
    const vFlip = props.vFlip;
    let rotation = props.rotate;
    if (hFlip) {
      if (vFlip) {
        rotation += 2;
      } else {
        transformations.push("translate(" + (box.width + box.left) + " " + (0 - box.top) + ")");
        transformations.push("scale(-1 1)");
        box.top = box.left = 0;
      }
    } else if (vFlip) {
      transformations.push("translate(" + (0 - box.left) + " " + (box.height + box.top) + ")");
      transformations.push("scale(1 -1)");
      box.top = box.left = 0;
    }
    let tempValue;
    if (rotation < 0) {
      rotation -= Math.floor(rotation / 4) * 4;
    }
    rotation = rotation % 4;
    switch (rotation) {
      case 1:
        tempValue = box.height / 2 + box.top;
        transformations.unshift("rotate(90 " + tempValue + " " + tempValue + ")");
        break;
      case 2:
        transformations.unshift("rotate(180 " + (box.width / 2 + box.left) + " " + (box.height / 2 + box.top) + ")");
        break;
      case 3:
        tempValue = box.width / 2 + box.left;
        transformations.unshift("rotate(-90 " + tempValue + " " + tempValue + ")");
        break;
    }
    if (rotation % 2 === 1) {
      if (box.left !== 0 || box.top !== 0) {
        tempValue = box.left;
        box.left = box.top;
        box.top = tempValue;
      }
      if (box.width !== box.height) {
        tempValue = box.width;
        box.width = box.height;
        box.height = tempValue;
      }
    }
    if (transformations.length) {
      body = '<g transform="' + transformations.join(" ") + '">' + body + "</g>";
    }
  });
  let width, height;
  if (customisations.width === null && customisations.height === null) {
    height = "1em";
    width = calculateSize(height, box.width / box.height);
  } else if (customisations.width !== null && customisations.height !== null) {
    width = customisations.width;
    height = customisations.height;
  } else if (customisations.height !== null) {
    height = customisations.height;
    width = calculateSize(height, box.width / box.height);
  } else {
    width = customisations.width;
    height = calculateSize(width, box.height / box.width);
  }
  if (width === "auto") {
    width = box.width;
  }
  if (height === "auto") {
    height = box.height;
  }
  width = typeof width === "string" ? width : width + "";
  height = typeof height === "string" ? height : height + "";
  const result = {
    attributes: {
      width,
      height,
      preserveAspectRatio: preserveAspectRatio(customisations),
      viewBox: box.left + " " + box.top + " " + box.width + " " + box.height
    },
    body
  };
  if (customisations.inline) {
    result.inline = true;
  }
  return result;
}
function replaceIDs(body, prefix = randomPrefix) {
  const ids = [];
  let match;
  while (match = regex.exec(body)) {
    ids.push(match[1]);
  }
  if (!ids.length) {
    return body;
  }
  ids.forEach((id) => {
    const newID = typeof prefix === "function" ? prefix(id) : prefix + counter++;
    const escapedID = id.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    body = body.replace(new RegExp('([#;"])(' + escapedID + ')([")]|\\.[a-z])', "g"), "$1" + newID + "$3");
  });
  return body;
}
function setAPIModule(provider, item) {
  storage[provider] = item;
}
function getAPIModule(provider) {
  return storage[provider] || storage[""];
}
function createAPIConfig(source) {
  let resources;
  if (typeof source.resources === "string") {
    resources = [source.resources];
  } else {
    resources = source.resources;
    if (!(resources instanceof Array) || !resources.length) {
      return null;
    }
  }
  const result = {
    resources,
    path: source.path === void 0 ? "/" : source.path,
    maxURL: source.maxURL ? source.maxURL : 500,
    rotate: source.rotate ? source.rotate : 750,
    timeout: source.timeout ? source.timeout : 5e3,
    random: source.random === true,
    index: source.index ? source.index : 0,
    dataAfterTimeout: source.dataAfterTimeout !== false
  };
  return result;
}
function addAPIProvider(provider, customConfig) {
  const config22 = createAPIConfig(customConfig);
  if (config22 === null) {
    return false;
  }
  configStorage[provider] = config22;
  return true;
}
function getAPIConfig(provider) {
  return configStorage[provider];
}
function calculateMaxLength(provider, prefix) {
  const config22 = getAPIConfig(provider);
  if (!config22) {
    return 0;
  }
  let result;
  if (!config22.maxURL) {
    result = 0;
  } else {
    let maxHostLength = 0;
    config22.resources.forEach((item) => {
      const host = item;
      maxHostLength = Math.max(maxHostLength, host.length);
    });
    const url = mergeParams(prefix + ".json", {
      icons: ""
    });
    result = config22.maxURL - maxHostLength - config22.path.length - url.length;
  }
  const cacheKey = provider + ":" + prefix;
  pathCache[provider] = config22.path;
  maxLengthCache[cacheKey] = result;
  return result;
}
function getPath(provider) {
  if (typeof provider === "string") {
    if (pathCache[provider] === void 0) {
      const config22 = getAPIConfig(provider);
      if (!config22) {
        return "/";
      }
      pathCache[provider] = config22.path;
    }
    return pathCache[provider];
  }
  return "/";
}
function sortIcons(icons) {
  const result = {
    loaded: [],
    missing: [],
    pending: []
  };
  const storage2 = /* @__PURE__ */ Object.create(null);
  icons.sort((a2, b2) => {
    if (a2.provider !== b2.provider) {
      return a2.provider.localeCompare(b2.provider);
    }
    if (a2.prefix !== b2.prefix) {
      return a2.prefix.localeCompare(b2.prefix);
    }
    return a2.name.localeCompare(b2.name);
  });
  let lastIcon = {
    provider: "",
    prefix: "",
    name: ""
  };
  icons.forEach((icon) => {
    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {
      return;
    }
    lastIcon = icon;
    const provider = icon.provider;
    const prefix = icon.prefix;
    const name = icon.name;
    if (storage2[provider] === void 0) {
      storage2[provider] = /* @__PURE__ */ Object.create(null);
    }
    const providerStorage = storage2[provider];
    if (providerStorage[prefix] === void 0) {
      providerStorage[prefix] = getStorage(provider, prefix);
    }
    const localStorage = providerStorage[prefix];
    let list;
    if (localStorage.icons[name] !== void 0) {
      list = result.loaded;
    } else if (prefix === "" || localStorage.missing[name] !== void 0) {
      list = result.missing;
    } else {
      list = result.pending;
    }
    const item = {
      provider,
      prefix,
      name
    };
    list.push(item);
  });
  return result;
}
function removeCallback(sources, id) {
  sources.forEach((source) => {
    const provider = source.provider;
    if (callbacks[provider] === void 0) {
      return;
    }
    const providerCallbacks = callbacks[provider];
    const prefix = source.prefix;
    const items = providerCallbacks[prefix];
    if (items) {
      providerCallbacks[prefix] = items.filter((row) => row.id !== id);
    }
  });
}
function updateCallbacks(provider, prefix) {
  if (pendingUpdates[provider] === void 0) {
    pendingUpdates[provider] = /* @__PURE__ */ Object.create(null);
  }
  const providerPendingUpdates = pendingUpdates[provider];
  if (!providerPendingUpdates[prefix]) {
    providerPendingUpdates[prefix] = true;
    setTimeout(() => {
      providerPendingUpdates[prefix] = false;
      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {
        return;
      }
      const items = callbacks[provider][prefix].slice(0);
      if (!items.length) {
        return;
      }
      const storage2 = getStorage(provider, prefix);
      let hasPending = false;
      items.forEach((item) => {
        const icons = item.icons;
        const oldLength = icons.pending.length;
        icons.pending = icons.pending.filter((icon) => {
          if (icon.prefix !== prefix) {
            return true;
          }
          const name = icon.name;
          if (storage2.icons[name] !== void 0) {
            icons.loaded.push({
              provider,
              prefix,
              name
            });
          } else if (storage2.missing[name] !== void 0) {
            icons.missing.push({
              provider,
              prefix,
              name
            });
          } else {
            hasPending = true;
            return true;
          }
          return false;
        });
        if (icons.pending.length !== oldLength) {
          if (!hasPending) {
            removeCallback([
              {
                provider,
                prefix
              }
            ], item.id);
          }
          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);
        }
      });
    });
  }
}
function storeCallback(callback, icons, pendingSources) {
  const id = idCounter++;
  const abort = removeCallback.bind(null, pendingSources, id);
  if (!icons.pending.length) {
    return abort;
  }
  const item = {
    id,
    icons,
    callback,
    abort
  };
  pendingSources.forEach((source) => {
    const provider = source.provider;
    const prefix = source.prefix;
    if (callbacks[provider] === void 0) {
      callbacks[provider] = /* @__PURE__ */ Object.create(null);
    }
    const providerCallbacks = callbacks[provider];
    if (providerCallbacks[prefix] === void 0) {
      providerCallbacks[prefix] = [];
    }
    providerCallbacks[prefix].push(item);
  });
  return abort;
}
function listToIcons(list, validate = true, simpleNames2 = false) {
  const result = [];
  list.forEach((item) => {
    const icon = typeof item === "string" ? stringToIcon(item, false, simpleNames2) : item;
    if (!validate || validateIcon(icon, simpleNames2)) {
      result.push({
        provider: icon.provider,
        prefix: icon.prefix,
        name: icon.name
      });
    }
  });
  return result;
}
function sendQuery(config22, payload, query2, done, success) {
  const resourcesCount = config22.resources.length;
  const startIndex = config22.random ? Math.floor(Math.random() * resourcesCount) : config22.index;
  let resources;
  if (config22.random) {
    let list = config22.resources.slice(0);
    resources = [];
    while (list.length > 1) {
      const nextIndex = Math.floor(Math.random() * list.length);
      resources.push(list[nextIndex]);
      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));
    }
    resources = resources.concat(list);
  } else {
    resources = config22.resources.slice(startIndex).concat(config22.resources.slice(0, startIndex));
  }
  const startTime = Date.now();
  let status = "pending";
  let queriesSent = 0;
  let lastError = void 0;
  let timer = null;
  let queue = [];
  let doneCallbacks = [];
  if (typeof done === "function") {
    doneCallbacks.push(done);
  }
  function resetTimer() {
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  }
  function abort() {
    if (status === "pending") {
      status = "aborted";
    }
    resetTimer();
    queue.forEach((item) => {
      if (item.abort) {
        item.abort();
      }
      if (item.status === "pending") {
        item.status = "aborted";
      }
    });
    queue = [];
  }
  function subscribe2(callback, overwrite) {
    if (overwrite) {
      doneCallbacks = [];
    }
    if (typeof callback === "function") {
      doneCallbacks.push(callback);
    }
  }
  function getQueryStatus() {
    return {
      startTime,
      payload,
      status,
      queriesSent,
      queriesPending: queue.length,
      subscribe: subscribe2,
      abort
    };
  }
  function failQuery() {
    status = "failed";
    doneCallbacks.forEach((callback) => {
      callback(void 0, lastError);
    });
  }
  function clearQueue() {
    queue = queue.filter((item) => {
      if (item.status === "pending") {
        item.status = "aborted";
      }
      if (item.abort) {
        item.abort();
      }
      return false;
    });
  }
  function moduleResponse(item, data, error2) {
    const isError = data === void 0;
    queue = queue.filter((queued) => queued !== item);
    switch (status) {
      case "pending":
        break;
      case "failed":
        if (isError || !config22.dataAfterTimeout) {
          return;
        }
        break;
      default:
        return;
    }
    if (isError) {
      if (error2 !== void 0) {
        lastError = error2;
      }
      if (!queue.length) {
        if (!resources.length) {
          failQuery();
        } else {
          execNext();
        }
      }
      return;
    }
    resetTimer();
    clearQueue();
    if (success && !config22.random) {
      const index = config22.resources.indexOf(item.resource);
      if (index !== -1 && index !== config22.index) {
        success(index);
      }
    }
    status = "completed";
    doneCallbacks.forEach((callback) => {
      callback(data);
    });
  }
  function execNext() {
    if (status !== "pending") {
      return;
    }
    resetTimer();
    const resource = resources.shift();
    if (resource === void 0) {
      if (queue.length) {
        const timeout2 = typeof config22.timeout === "function" ? config22.timeout(startTime) : config22.timeout;
        if (timeout2) {
          timer = setTimeout(() => {
            resetTimer();
            if (status === "pending") {
              clearQueue();
              failQuery();
            }
          }, timeout2);
          return;
        }
      }
      failQuery();
      return;
    }
    const item = {
      getQueryStatus,
      status: "pending",
      resource,
      done: (data, error2) => {
        moduleResponse(item, data, error2);
      }
    };
    queue.push(item);
    queriesSent++;
    const timeout = typeof config22.rotate === "function" ? config22.rotate(queriesSent, startTime) : config22.rotate;
    timer = setTimeout(execNext, timeout);
    query2(resource, payload, item);
  }
  setTimeout(execNext);
  return getQueryStatus;
}
function setConfig(config22) {
  if (typeof config22 !== "object" || typeof config22.resources !== "object" || !(config22.resources instanceof Array) || !config22.resources.length) {
    throw new Error("Invalid Reduncancy configuration");
  }
  const newConfig = /* @__PURE__ */ Object.create(null);
  let key;
  for (key in defaultConfig) {
    if (config22[key] !== void 0) {
      newConfig[key] = config22[key];
    } else {
      newConfig[key] = defaultConfig[key];
    }
  }
  return newConfig;
}
function initRedundancy(cfg) {
  const config22 = setConfig(cfg);
  let queries = [];
  function cleanup() {
    queries = queries.filter((item) => item().status === "pending");
  }
  function query2(payload, queryCallback, doneCallback) {
    const query22 = sendQuery(config22, payload, queryCallback, (data, error2) => {
      cleanup();
      if (doneCallback) {
        doneCallback(data, error2);
      }
    }, (newIndex) => {
      config22.index = newIndex;
    });
    queries.push(query22);
    return query22;
  }
  function find(callback) {
    const result = queries.find((value) => {
      return callback(value);
    });
    return result !== void 0 ? result : null;
  }
  const instance = {
    query: query2,
    find,
    setIndex: (index) => {
      config22.index = index;
    },
    getIndex: () => config22.index,
    cleanup
  };
  return instance;
}
function emptyCallback$1() {
}
function getRedundancyCache(provider) {
  if (redundancyCache[provider] === void 0) {
    const config22 = getAPIConfig(provider);
    if (!config22) {
      return;
    }
    const redundancy = initRedundancy(config22);
    const cachedReundancy = {
      config: config22,
      redundancy
    };
    redundancyCache[provider] = cachedReundancy;
  }
  return redundancyCache[provider];
}
function sendAPIQuery(target, query2, callback) {
  let redundancy;
  let send2;
  if (typeof target === "string") {
    const api = getAPIModule(target);
    if (!api) {
      callback(void 0, 424);
      return emptyCallback$1;
    }
    send2 = api.send;
    const cached = getRedundancyCache(target);
    if (cached) {
      redundancy = cached.redundancy;
    }
  } else {
    const config22 = createAPIConfig(target);
    if (config22) {
      redundancy = initRedundancy(config22);
      const moduleKey = target.resources ? target.resources[0] : "";
      const api = getAPIModule(moduleKey);
      if (api) {
        send2 = api.send;
      }
    }
  }
  if (!redundancy || !send2) {
    callback(void 0, 424);
    return emptyCallback$1;
  }
  return redundancy.query(query2, send2, callback)().abort;
}
function emptyCallback() {
}
function loadedNewIcons(provider, prefix) {
  if (loaderFlags[provider] === void 0) {
    loaderFlags[provider] = /* @__PURE__ */ Object.create(null);
  }
  const providerLoaderFlags = loaderFlags[provider];
  if (!providerLoaderFlags[prefix]) {
    providerLoaderFlags[prefix] = true;
    setTimeout(() => {
      providerLoaderFlags[prefix] = false;
      updateCallbacks(provider, prefix);
    });
  }
}
function loadNewIcons(provider, prefix, icons) {
  function err() {
    const key = (provider === "" ? "" : "@" + provider + ":") + prefix;
    const time = Math.floor(Date.now() / 6e4);
    if (errorsCache[key] < time) {
      errorsCache[key] = time;
      console.error('Unable to retrieve icons for "' + key + '" because API is not configured properly.');
    }
  }
  if (iconsToLoad[provider] === void 0) {
    iconsToLoad[provider] = /* @__PURE__ */ Object.create(null);
  }
  const providerIconsToLoad = iconsToLoad[provider];
  if (queueFlags[provider] === void 0) {
    queueFlags[provider] = /* @__PURE__ */ Object.create(null);
  }
  const providerQueueFlags = queueFlags[provider];
  if (pendingIcons[provider] === void 0) {
    pendingIcons[provider] = /* @__PURE__ */ Object.create(null);
  }
  const providerPendingIcons = pendingIcons[provider];
  if (providerIconsToLoad[prefix] === void 0) {
    providerIconsToLoad[prefix] = icons;
  } else {
    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();
  }
  if (!providerQueueFlags[prefix]) {
    providerQueueFlags[prefix] = true;
    setTimeout(() => {
      providerQueueFlags[prefix] = false;
      const icons2 = providerIconsToLoad[prefix];
      delete providerIconsToLoad[prefix];
      const api = getAPIModule(provider);
      if (!api) {
        err();
        return;
      }
      const params = api.prepare(provider, prefix, icons2);
      params.forEach((item) => {
        sendAPIQuery(provider, item, (data, error2) => {
          const storage2 = getStorage(provider, prefix);
          if (typeof data !== "object") {
            if (error2 !== 404) {
              return;
            }
            const t2 = Date.now();
            item.icons.forEach((name) => {
              storage2.missing[name] = t2;
            });
          } else {
            try {
              const parsed = addIconSet(storage2, data);
              if (!parsed.length) {
                return;
              }
              const pending = providerPendingIcons[prefix];
              parsed.forEach((name) => {
                delete pending[name];
              });
              if (cache.store) {
                cache.store(provider, data);
              }
            } catch (err2) {
              console.error(err2);
            }
          }
          loadedNewIcons(provider, prefix);
        });
      });
    });
  }
}
function getGlobal(key) {
  const attr = key + "Storage";
  try {
    if (_window && _window[attr] && typeof _window[attr].length === "number") {
      return _window[attr];
    }
  } catch (err) {
  }
  config[key] = false;
  return null;
}
function setCount(storage2, key, value) {
  try {
    storage2.setItem(countKey, value + "");
    count[key] = value;
    return true;
  } catch (err) {
    return false;
  }
}
function getCount(storage2) {
  const count2 = storage2.getItem(countKey);
  if (count2) {
    const total = parseInt(count2);
    return total ? total : 0;
  }
  return 0;
}
function initCache(storage2, key) {
  try {
    storage2.setItem(versionKey, cacheVersion);
  } catch (err) {
  }
  setCount(storage2, key, 0);
}
function destroyCache(storage2) {
  try {
    const total = getCount(storage2);
    for (let i2 = 0; i2 < total; i2++) {
      storage2.removeItem(cachePrefix + i2);
    }
  } catch (err) {
  }
}
function flipFromString(custom, flip) {
  flip.split(separator).forEach((str) => {
    const value = str.trim();
    switch (value) {
      case "horizontal":
        custom.hFlip = true;
        break;
      case "vertical":
        custom.vFlip = true;
        break;
    }
  });
}
function alignmentFromString(custom, align) {
  align.split(separator).forEach((str) => {
    const value = str.trim();
    switch (value) {
      case "left":
      case "center":
      case "right":
        custom.hAlign = value;
        break;
      case "top":
      case "middle":
      case "bottom":
        custom.vAlign = value;
        break;
      case "slice":
      case "crop":
        custom.slice = true;
        break;
      case "meet":
        custom.slice = false;
    }
  });
}
function rotateFromString(value, defaultValue = 0) {
  const units = value.replace(/^-?[0-9.]*/, "");
  function cleanup(value2) {
    while (value2 < 0) {
      value2 += 4;
    }
    return value2 % 4;
  }
  if (units === "") {
    const num = parseInt(value);
    return isNaN(num) ? 0 : cleanup(num);
  } else if (units !== value) {
    let split = 0;
    switch (units) {
      case "%":
        split = 25;
        break;
      case "deg":
        split = 90;
    }
    if (split) {
      let num = parseFloat(value.slice(0, value.length - units.length));
      if (isNaN(num)) {
        return 0;
      }
      num = num / split;
      return num % 1 === 0 ? cleanup(num) : 0;
    }
  }
  return defaultValue;
}
function render(icon, props) {
  const customisations = mergeCustomisations(defaults, props);
  const componentProps = { ...svgDefaults };
  let style = typeof props.style === "string" ? props.style : "";
  for (let key in props) {
    const value = props[key];
    if (value === void 0) {
      continue;
    }
    switch (key) {
      case "icon":
      case "style":
      case "onLoad":
        break;
      case "inline":
      case "hFlip":
      case "vFlip":
        customisations[key] = value === true || value === "true" || value === 1;
        break;
      case "flip":
        if (typeof value === "string") {
          flipFromString(customisations, value);
        }
        break;
      case "align":
        if (typeof value === "string") {
          alignmentFromString(customisations, value);
        }
        break;
      case "color":
        style = style + (style.length > 0 && style.trim().slice(-1) !== ";" ? ";" : "") + "color: " + value + "; ";
        break;
      case "rotate":
        if (typeof value === "string") {
          customisations[key] = rotateFromString(value);
        } else if (typeof value === "number") {
          customisations[key] = value;
        }
        break;
      case "ariaHidden":
      case "aria-hidden":
        if (value !== true && value !== "true") {
          delete componentProps["aria-hidden"];
        }
        break;
      default:
        if (key.slice(0, 3) === "on:") {
          break;
        }
        if (defaults[key] === void 0) {
          componentProps[key] = value;
        }
    }
  }
  const item = iconToSVG(icon, customisations);
  for (let key in item.attributes) {
    componentProps[key] = item.attributes[key];
  }
  if (item.inline) {
    style = "vertical-align: -0.125em; " + style;
  }
  if (style !== "") {
    componentProps.style = style;
  }
  let localCounter = 0;
  let id = props.id;
  if (typeof id === "string") {
    id = id.replace(/-/g, "_");
  }
  return {
    attributes: componentProps,
    body: replaceIDs(item.body, id ? () => id + "ID" + localCounter++ : "iconifySvelte")
  };
}
function checkIconState(icon, state, mounted, callback, onload) {
  function abortLoading() {
    if (state.loading) {
      state.loading.abort();
      state.loading = null;
    }
  }
  if (typeof icon === "object" && icon !== null && typeof icon.body === "string") {
    state.name = "";
    abortLoading();
    return { data: fullIcon(icon) };
  }
  let iconName;
  if (typeof icon !== "string" || (iconName = stringToIcon(icon, false, true)) === null) {
    abortLoading();
    return null;
  }
  const data = getIconData(iconName);
  if (data === null) {
    if (mounted && (!state.loading || state.loading.name !== icon)) {
      abortLoading();
      state.name = "";
      state.loading = {
        name: icon,
        abort: loadIcons([iconName], callback)
      };
    }
    return null;
  }
  abortLoading();
  if (state.name !== icon) {
    state.name = icon;
    if (onload && !state.destroyed) {
      onload(icon);
    }
  }
  const classes = ["iconify"];
  if (iconName.prefix !== "") {
    classes.push("iconify--" + iconName.prefix);
  }
  if (iconName.provider !== "") {
    classes.push("iconify--" + iconName.provider);
  }
  return { data, classes };
}
function generateIcon(icon, props) {
  return icon ? render(icon, props) : null;
}
function writable2(value, start = noop3) {
  let stop;
  const subscribers = /* @__PURE__ */ new Set();
  function set(new_value) {
    if (safe_not_equal2(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue2.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue2.push(subscriber, value);
        }
        if (run_queue) {
          for (let i2 = 0; i2 < subscriber_queue2.length; i2 += 2) {
            subscriber_queue2[i2][0](subscriber_queue2[i2 + 1]);
          }
          subscriber_queue2.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop3) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop3;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}
var matchName, iconDefaults, stringToIcon, validateIcon, matchChar, storageVersion, storage$1, simpleNames, defaults, unitsSplit, unitsTest, regex, randomPrefix, counter, storage, configStorage, fallBackAPISources, fallBackAPI, mergeParams, maxLengthCache, pathCache, detectFetch, fetchModule, prepare, send, fetchAPIModule, callbacks, pendingUpdates, idCounter, defaultConfig, redundancyCache, cache, pendingIcons, iconsToLoad, loaderFlags, queueFlags, errorsCache, loadIcons, cacheVersion, cachePrefix, countKey, versionKey, hour, cacheExpiration, config, loaded, count, emptyList, _window, loadCache, storeCache, separator, svgDefaults, Icon, subscriber_queue2;
var init_index_b0a82c49 = __esm({
  ".svelte-kit/output/server/chunks/index-b0a82c49.js"() {
    init_shims();
    init_app_0013ff75();
    matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;
    iconDefaults = Object.freeze({
      left: 0,
      top: 0,
      width: 16,
      height: 16,
      rotate: 0,
      vFlip: false,
      hFlip: false
    });
    stringToIcon = (value, validate, allowSimpleName, provider = "") => {
      const colonSeparated = value.split(":");
      if (value.slice(0, 1) === "@") {
        if (colonSeparated.length < 2 || colonSeparated.length > 3) {
          return null;
        }
        provider = colonSeparated.shift().slice(1);
      }
      if (colonSeparated.length > 3 || !colonSeparated.length) {
        return null;
      }
      if (colonSeparated.length > 1) {
        const name2 = colonSeparated.pop();
        const prefix = colonSeparated.pop();
        const result = {
          provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,
          prefix,
          name: name2
        };
        return validate && !validateIcon(result) ? null : result;
      }
      const name = colonSeparated[0];
      const dashSeparated = name.split("-");
      if (dashSeparated.length > 1) {
        const result = {
          provider,
          prefix: dashSeparated.shift(),
          name: dashSeparated.join("-")
        };
        return validate && !validateIcon(result) ? null : result;
      }
      if (allowSimpleName && provider === "") {
        const result = {
          provider,
          prefix: "",
          name
        };
        return validate && !validateIcon(result, allowSimpleName) ? null : result;
      }
      return null;
    };
    validateIcon = (icon, allowSimpleName) => {
      if (!icon) {
        return false;
      }
      return !!((icon.provider === "" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === "" || icon.prefix.match(matchName)) && icon.name.match(matchName));
    };
    matchChar = /^[a-f0-9]+(-[a-f0-9]+)*$/;
    storageVersion = 1;
    storage$1 = /* @__PURE__ */ Object.create(null);
    try {
      const w = window || self;
      if ((w == null ? void 0 : w._iconifyStorage.version) === storageVersion) {
        storage$1 = w._iconifyStorage.storage;
      }
    } catch (err) {
    }
    simpleNames = false;
    defaults = Object.freeze({
      inline: false,
      width: null,
      height: null,
      hAlign: "center",
      vAlign: "middle",
      slice: false,
      hFlip: false,
      vFlip: false,
      rotate: 0
    });
    unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;
    unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
    regex = /\sid="(\S+)"/g;
    randomPrefix = "IconifyId" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);
    counter = 0;
    storage = /* @__PURE__ */ Object.create(null);
    configStorage = /* @__PURE__ */ Object.create(null);
    fallBackAPISources = [
      "https://api.simplesvg.com",
      "https://api.unisvg.com"
    ];
    fallBackAPI = [];
    while (fallBackAPISources.length > 0) {
      if (fallBackAPISources.length === 1) {
        fallBackAPI.push(fallBackAPISources.shift());
      } else {
        if (Math.random() > 0.5) {
          fallBackAPI.push(fallBackAPISources.shift());
        } else {
          fallBackAPI.push(fallBackAPISources.pop());
        }
      }
    }
    configStorage[""] = createAPIConfig({
      resources: ["https://api.iconify.design"].concat(fallBackAPI)
    });
    mergeParams = (base2, params) => {
      let result = base2, hasParams = result.indexOf("?") !== -1;
      function paramToString(value) {
        switch (typeof value) {
          case "boolean":
            return value ? "true" : "false";
          case "number":
            return encodeURIComponent(value);
          case "string":
            return encodeURIComponent(value);
          default:
            throw new Error("Invalid parameter");
        }
      }
      Object.keys(params).forEach((key) => {
        let value;
        try {
          value = paramToString(params[key]);
        } catch (err) {
          return;
        }
        result += (hasParams ? "&" : "?") + encodeURIComponent(key) + "=" + value;
        hasParams = true;
      });
      return result;
    };
    maxLengthCache = /* @__PURE__ */ Object.create(null);
    pathCache = /* @__PURE__ */ Object.create(null);
    detectFetch = () => {
      let callback;
      try {
        callback = fetch;
        if (typeof callback === "function") {
          return callback;
        }
      } catch (err) {
      }
      try {
        const chunk = String.fromCharCode(114) + String.fromCharCode(101);
        const req = global[chunk + "qui" + chunk];
        callback = req("cross-fetch");
        if (typeof callback === "function") {
          return callback;
        }
      } catch (err) {
      }
      return null;
    };
    fetchModule = detectFetch();
    prepare = (provider, prefix, icons) => {
      const results = [];
      let maxLength = maxLengthCache[prefix];
      if (maxLength === void 0) {
        maxLength = calculateMaxLength(provider, prefix);
      }
      const type = "icons";
      let item = {
        type,
        provider,
        prefix,
        icons: []
      };
      let length = 0;
      icons.forEach((name, index) => {
        length += name.length + 1;
        if (length >= maxLength && index > 0) {
          results.push(item);
          item = {
            type,
            provider,
            prefix,
            icons: []
          };
          length = name.length;
        }
        item.icons.push(name);
      });
      results.push(item);
      return results;
    };
    send = (host, params, status) => {
      if (!fetchModule) {
        status.done(void 0, 424);
        return;
      }
      let path = getPath(params.provider);
      switch (params.type) {
        case "icons": {
          const prefix = params.prefix;
          const icons = params.icons;
          const iconsList = icons.join(",");
          path += mergeParams(prefix + ".json", {
            icons: iconsList
          });
          break;
        }
        case "custom": {
          const uri = params.uri;
          path += uri.slice(0, 1) === "/" ? uri.slice(1) : uri;
          break;
        }
        default:
          status.done(void 0, 400);
          return;
      }
      let defaultError = 503;
      fetchModule(host + path).then((response) => {
        if (response.status !== 200) {
          setTimeout(() => {
            status.done(void 0, response.status);
          });
          return;
        }
        defaultError = 501;
        return response.json();
      }).then((data) => {
        if (typeof data !== "object" || data === null) {
          setTimeout(() => {
            status.done(void 0, defaultError);
          });
          return;
        }
        setTimeout(() => {
          status.done(data);
        });
      }).catch(() => {
        status.done(void 0, defaultError);
      });
    };
    fetchAPIModule = {
      prepare,
      send
    };
    callbacks = /* @__PURE__ */ Object.create(null);
    pendingUpdates = /* @__PURE__ */ Object.create(null);
    idCounter = 0;
    defaultConfig = {
      resources: [],
      index: 0,
      timeout: 2e3,
      rotate: 750,
      random: false,
      dataAfterTimeout: false
    };
    redundancyCache = /* @__PURE__ */ Object.create(null);
    cache = {};
    pendingIcons = /* @__PURE__ */ Object.create(null);
    iconsToLoad = /* @__PURE__ */ Object.create(null);
    loaderFlags = /* @__PURE__ */ Object.create(null);
    queueFlags = /* @__PURE__ */ Object.create(null);
    errorsCache = /* @__PURE__ */ Object.create(null);
    loadIcons = (icons, callback) => {
      const cleanedIcons = listToIcons(icons, true, allowSimpleNames());
      const sortedIcons = sortIcons(cleanedIcons);
      if (!sortedIcons.pending.length) {
        let callCallback = true;
        if (callback) {
          setTimeout(() => {
            if (callCallback) {
              callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);
            }
          });
        }
        return () => {
          callCallback = false;
        };
      }
      const newIcons = /* @__PURE__ */ Object.create(null);
      const sources = [];
      let lastProvider, lastPrefix;
      sortedIcons.pending.forEach((icon) => {
        const provider = icon.provider;
        const prefix = icon.prefix;
        if (prefix === lastPrefix && provider === lastProvider) {
          return;
        }
        lastProvider = provider;
        lastPrefix = prefix;
        sources.push({
          provider,
          prefix
        });
        if (pendingIcons[provider] === void 0) {
          pendingIcons[provider] = /* @__PURE__ */ Object.create(null);
        }
        const providerPendingIcons = pendingIcons[provider];
        if (providerPendingIcons[prefix] === void 0) {
          providerPendingIcons[prefix] = /* @__PURE__ */ Object.create(null);
        }
        if (newIcons[provider] === void 0) {
          newIcons[provider] = /* @__PURE__ */ Object.create(null);
        }
        const providerNewIcons = newIcons[provider];
        if (providerNewIcons[prefix] === void 0) {
          providerNewIcons[prefix] = [];
        }
      });
      const time = Date.now();
      sortedIcons.pending.forEach((icon) => {
        const provider = icon.provider;
        const prefix = icon.prefix;
        const name = icon.name;
        const pendingQueue = pendingIcons[provider][prefix];
        if (pendingQueue[name] === void 0) {
          pendingQueue[name] = time;
          newIcons[provider][prefix].push(name);
        }
      });
      sources.forEach((source) => {
        const provider = source.provider;
        const prefix = source.prefix;
        if (newIcons[provider][prefix].length) {
          loadNewIcons(provider, prefix, newIcons[provider][prefix]);
        }
      });
      return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;
    };
    cacheVersion = "iconify2";
    cachePrefix = "iconify";
    countKey = cachePrefix + "-count";
    versionKey = cachePrefix + "-version";
    hour = 36e5;
    cacheExpiration = 168;
    config = {
      local: true,
      session: true
    };
    loaded = false;
    count = {
      local: 0,
      session: 0
    };
    emptyList = {
      local: [],
      session: []
    };
    _window = typeof window === "undefined" ? {} : window;
    loadCache = () => {
      if (loaded) {
        return;
      }
      loaded = true;
      const minTime = Math.floor(Date.now() / hour) - cacheExpiration;
      function load2(key) {
        const func = getGlobal(key);
        if (!func) {
          return;
        }
        const getItem = (index) => {
          const name = cachePrefix + index;
          const item = func.getItem(name);
          if (typeof item !== "string") {
            return false;
          }
          let valid = true;
          try {
            const data = JSON.parse(item);
            if (typeof data !== "object" || typeof data.cached !== "number" || data.cached < minTime || typeof data.provider !== "string" || typeof data.data !== "object" || typeof data.data.prefix !== "string") {
              valid = false;
            } else {
              const provider = data.provider;
              const prefix = data.data.prefix;
              const storage2 = getStorage(provider, prefix);
              valid = addIconSet(storage2, data.data).length > 0;
            }
          } catch (err) {
            valid = false;
          }
          if (!valid) {
            func.removeItem(name);
          }
          return valid;
        };
        try {
          const version = func.getItem(versionKey);
          if (version !== cacheVersion) {
            if (version) {
              destroyCache(func);
            }
            initCache(func, key);
            return;
          }
          let total = getCount(func);
          for (let i2 = total - 1; i2 >= 0; i2--) {
            if (!getItem(i2)) {
              if (i2 === total - 1) {
                total--;
              } else {
                emptyList[key].push(i2);
              }
            }
          }
          setCount(func, key, total);
        } catch (err) {
        }
      }
      for (const key in config) {
        load2(key);
      }
    };
    storeCache = (provider, data) => {
      if (!loaded) {
        loadCache();
      }
      function store(key) {
        if (!config[key]) {
          return false;
        }
        const func = getGlobal(key);
        if (!func) {
          return false;
        }
        let index = emptyList[key].shift();
        if (index === void 0) {
          index = count[key];
          if (!setCount(func, key, index + 1)) {
            return false;
          }
        }
        try {
          const item = {
            cached: Math.floor(Date.now() / hour),
            provider,
            data
          };
          func.setItem(cachePrefix + index, JSON.stringify(item));
        } catch (err) {
          return false;
        }
        return true;
      }
      if (!store("local")) {
        store("session");
      }
    };
    separator = /[\s,]+/;
    svgDefaults = {
      "xmlns": "http://www.w3.org/2000/svg",
      "xmlns:xlink": "http://www.w3.org/1999/xlink",
      "aria-hidden": true,
      "role": "img"
    };
    allowSimpleNames(true);
    setAPIModule("", fetchAPIModule);
    if (typeof document !== "undefined" && typeof window !== "undefined") {
      cache.store = storeCache;
      loadCache();
      const _window2 = window;
      if (_window2.IconifyPreload !== void 0) {
        const preload = _window2.IconifyPreload;
        const err = "Invalid IconifyPreload syntax.";
        if (typeof preload === "object" && preload !== null) {
          (preload instanceof Array ? preload : [preload]).forEach((item) => {
            try {
              if (typeof item !== "object" || item === null || item instanceof Array || typeof item.icons !== "object" || typeof item.prefix !== "string" || !addCollection(item)) {
                console.error(err);
              }
            } catch (e3) {
              console.error(err);
            }
          });
        }
      }
      if (_window2.IconifyProviders !== void 0) {
        const providers = _window2.IconifyProviders;
        if (typeof providers === "object" && providers !== null) {
          for (let key in providers) {
            const err = "IconifyProviders[" + key + "] is invalid.";
            try {
              const value = providers[key];
              if (typeof value !== "object" || !value || value.resources === void 0) {
                continue;
              }
              if (!addAPIProvider(key, value)) {
                console.error(err);
              }
            } catch (e3) {
              console.error(err);
            }
          }
        }
      }
    }
    Icon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      const state = {
        name: "",
        loading: null,
        destroyed: false
      };
      let mounted = false;
      let data;
      const onLoad = (icon) => {
        if (typeof $$props.onLoad === "function") {
          $$props.onLoad(icon);
        }
        const dispatch = createEventDispatcher();
        dispatch("load", { icon });
      };
      function loaded2() {
      }
      onDestroy(() => {
        state.destroyed = true;
        if (state.loading) {
          state.loading.abort();
          state.loading = null;
        }
      });
      {
        {
          const iconData = checkIconState($$props.icon, state, mounted, loaded2, onLoad);
          data = iconData ? generateIcon(iconData.data, $$props) : null;
          if (data && iconData.classes) {
            data.attributes["class"] = (typeof $$props["class"] === "string" ? $$props["class"] + " " : "") + iconData.classes.join(" ");
          }
        }
      }
      return `${data !== null ? `<svg${spread([escape_object(data.attributes)], {})}><!-- HTML_TAG_START -->${data.body}<!-- HTML_TAG_END --></svg>` : ``}`;
    });
    subscriber_queue2 = [];
  }
});

// .svelte-kit/output/server/chunks/stores-91c44e17.js
var user, transactionStatus, txId, transactionInProgress;
var init_stores_91c44e17 = __esm({
  ".svelte-kit/output/server/chunks/stores-91c44e17.js"() {
    init_shims();
    init_index_b0a82c49();
    user = writable2(null);
    transactionStatus = writable2(null);
    txId = writable2(null);
    transactionInProgress = writable2(false);
  }
});

// .svelte-kit/output/server/chunks/stores-c1e7c577.js
var import_onflow_fcl_esm, getStores, page;
var init_stores_c1e7c577 = __esm({
  ".svelte-kit/output/server/chunks/stores-c1e7c577.js"() {
    init_shims();
    import_onflow_fcl_esm = __toModule(require_fcl_cjs());
    init_app_0013ff75();
    (0, import_onflow_fcl_esm.config)({
      "accessNode.api": "http://localhost:8080",
      "discovery.wallet": "http://localhost:8701/fcl/authn",
      "0xGateway": "0xf8d6e0586b0a20c7"
    });
    getStores = () => {
      const stores = getContext("__svelte__");
      return {
        page: {
          subscribe: stores.page.subscribe
        },
        navigating: {
          subscribe: stores.navigating.subscribe
        },
        get preloading() {
          console.error("stores.preloading is deprecated; use stores.navigating instead");
          return {
            subscribe: stores.navigating.subscribe
          };
        },
        session: stores.session
      };
    };
    page = {
      subscribe(fn) {
        const store = getStores().page;
        return store.subscribe(fn);
      }
    };
  }
});

// .svelte-kit/output/server/chunks/stores-14403ff2.js
var TabHeader, css$c, Tab1, HorizontalSpace, css$b, TokenComponent, Object_1, css$a, Tab2, VerticalSpace, css$9, CollectionComponent, css$8, SearchComponent, css$7, Tab3, css$6, Tab4, css$5, DiscordServersComponent, css$4, Tab5, css$3, TwitterAccountsComponent, css$2, Tab6, css$1, VerificationComponent, css, Tab7, joinedWhitelists, projects, activeTabVal, tabs, tab1data, tokens, selectedToken, selectedCollection, collections, emeraldIdVerif, discordVerif, twitterVerif, modal, dialog, drawer, transactionStatus2, txId2, transactionInProgress2;
var init_stores_14403ff2 = __esm({
  ".svelte-kit/output/server/chunks/stores-14403ff2.js"() {
    init_shims();
    init_app_0013ff75();
    init_index_b0a82c49();
    TabHeader = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { title } = $$props;
      let { subtitle } = $$props;
      if ($$props.title === void 0 && $$bindings.title && title !== void 0)
        $$bindings.title(title);
      if ($$props.subtitle === void 0 && $$bindings.subtitle && subtitle !== void 0)
        $$bindings.subtitle(subtitle);
      return `<header><h3 class="${"mt-1"}">${escape2(title)}</h3>
    <p>${escape2(subtitle)}</p>
</header>`;
    });
    css$c = {
      code: "textarea.svelte-13amoaw{border-top-left-radius:0px;border-top-right-radius:0px;border-bottom-left-radius:6px;border-bottom-right-radius:6px}.menu-icon-container.svelte-13amoaw{display:flex;height:100%;width:6%;justify-content:center;align-items:center}.alignment-icon.svelte-13amoaw{width:33.3%;height:100%;display:flex;justify-content:center;align-items:center}.alignment-container.svelte-13amoaw{display:flex;width:20%;height:100%;justify-content:space-between;align-items:center;border-right:1px solid var(--form-element-border-color)}.text-type-container.svelte-13amoaw{display:flex;width:34%;height:100%;align-items:center;justify-content:space-between;border-right:1px solid var(--form-element-border-color);padding-left:0.5rem;padding-right:0.5rem}.text-icons-container.svelte-13amoaw{display:flex;width:40%;height:100%;justify-content:start;align-items:center;border-right:1px solid var(--form-element-border-color)}.text-icon.svelte-13amoaw{display:flex;height:100%;width:1.8rem;justify-content:center;align-items:center}.textarea-header.svelte-13amoaw{display:flex;width:100%;height:1.6rem;border:1px solid var(--form-element-border-color);border-bottom:none;border-top-right-radius:6px;border-top-left-radius:6px;margin-top:3px}",
      map: null
    };
    Tab1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_tab1data;
      $$unsubscribe_tab1data = subscribe(tab1data, (value) => value);
      let { tab1val } = $$props;
      let { mobile } = $$props;
      tab1data.subscribe((val) => tab1val = val);
      let name = tab1val.name;
      let description = tab1val.description;
      if ($$props.tab1val === void 0 && $$bindings.tab1val && tab1val !== void 0)
        $$bindings.tab1val(tab1val);
      if ($$props.mobile === void 0 && $$bindings.mobile && mobile !== void 0)
        $$bindings.mobile(mobile);
      $$result.css.add(css$c);
      $$unsubscribe_tab1data();
      return `<div>${validate_component(TabHeader, "TabHeader").$$render($$result, {
        title: "Tab 1",
        subtitle: "Something about tab 1"
      }, {}, {})}
    <div><div style="${"width:100%"}"><h3 class="${"mt-1"}">Name</h3>
            <input id="${"name"}" placeholder="${"My awesome project"}"${add_attribute("value", name ? name : null, 0)}></div>
        <h3 class="${"mt-1"}">Description</h3>
        <div class="${"textarea-header svelte-13amoaw"}">${mobile ? `<div></div>` : `<section class="${"text-icons-container svelte-13amoaw"}"><div class="${"text-icon svelte-13amoaw"}">${validate_component(Icon, "Icon").$$render($$result, { icon: "bx:bold", height: 20 }, {}, {})}</div>
                <div class="${"text-icon svelte-13amoaw"}">${validate_component(Icon, "Icon").$$render($$result, { icon: "bx:italic", height: 19 }, {}, {})}</div>
                <div class="${"text-icon svelte-13amoaw"}">${validate_component(Icon, "Icon").$$render($$result, {
        icon: "ant-design:underline-outlined",
        height: 20
      }, {}, {})}</div>
                <div style="${"width: 8px;"}"></div>
                <div class="${"text-icon svelte-13amoaw"}">${validate_component(Icon, "Icon").$$render($$result, { icon: "ooui:underline-a", height: 16 }, {}, {})}
                    ${validate_component(Icon, "Icon").$$render($$result, {
        icon: "akar-icons:chevron-down",
        height: 14
      }, {}, {})}</div></section>
            <section class="${"text-type-container svelte-13amoaw"}"><div><span style="${"font-weight: 300; font-size:16px"}">Normal Text</span></div>
                <div class="${"text-icon svelte-13amoaw"}">${validate_component(Icon, "Icon").$$render($$result, {
        icon: "akar-icons:chevron-down",
        height: 18
      }, {}, {})}</div></section>
            <section class="${"alignment-container svelte-13amoaw"}"><div class="${"alignment-icon svelte-13amoaw"}">${validate_component(Icon, "Icon").$$render($$result, {
        icon: "akar-icons:text-align-left",
        height: 18
      }, {}, {})}</div>
                <div class="${"alignment-icon svelte-13amoaw"}">${validate_component(Icon, "Icon").$$render($$result, {
        icon: "akar-icons:text-align-center",
        height: 18
      }, {}, {})}</div>
                <div class="${"alignment-icon svelte-13amoaw"}">${validate_component(Icon, "Icon").$$render($$result, {
        icon: "akar-icons:text-align-right",
        height: 18
      }, {}, {})}</div></section>
            <section class="${"menu-icon-container svelte-13amoaw"}"><div class="${"text-icon svelte-13amoaw"}">${validate_component(Icon, "Icon").$$render($$result, {
        icon: "carbon:overflow-menu-vertical",
        height: 22
      }, {}, {})}</div></section>`}</div>
        <textarea id="${"description"}" rows="${"4"}" placeholder="${"My awesome project it\xB4s ..."}" class="${"svelte-13amoaw"}">${escape2(description ? description : null)}</textarea></div>
            </div>`;
    });
    HorizontalSpace = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { value } = $$props;
      if ($$props.value === void 0 && $$bindings.value && value !== void 0)
        $$bindings.value(value);
      return `<main style="${"width: " + escape2(value)}"></main>`;
    });
    css$b = {
      code: ".amount-container.svelte-coawjw{color:#252E37;font-weight:bold;display:flex;height:100%;width:36%;justify-content:center;align-items:center;background:white;border-top-right-radius:50px;border-bottom-right-radius:50px}.token.svelte-coawjw{display:flex;height:3.5rem;width:100%;justify-content:space-between;align-items:center;padding-left:3%}.token.svelte-coawjw:hover{display:flex;height:3.5rem;width:100%;justify-content:space-between;align-items:center;background-color:rgba(56, 232, 198, 0.1);cursor:pointer;padding-left:3%}.token-container.svelte-coawjw{position:relative;display:flex;width:var(--width);height:70%;justify-content:space-between;border-radius:50px;align-items:center;background-color:#252E37;font-weight:bold}.token-container-mobile.svelte-coawjw{position:relative;display:flex;width:50%;height:70%;justify-content:space-between;border-radius:50px;align-items:center;background-color:#252E37;font-weight:bold}.icon-container.svelte-coawjw{display:flex;align-items:center;justify-content:center;background-color:var(--primary);border-radius:100px;position:absolute;top:-0.6rem;right:0px;height:1.2rem;width:1.2rem;padding:0.2rem}",
      map: null
    };
    TokenComponent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_tokens;
      let $$unsubscribe_selectedToken;
      let $$unsubscribe_dialog;
      $$unsubscribe_tokens = subscribe(tokens, (value) => value);
      $$unsubscribe_selectedToken = subscribe(selectedToken, (value) => value);
      $$unsubscribe_dialog = subscribe(dialog, (value) => value);
      let { selected } = $$props;
      let { imgUrl } = $$props;
      let { label } = $$props;
      let { amount } = $$props;
      let { mobile } = $$props;
      let { id } = $$props;
      let { i: i2 } = $$props;
      tokens.subscribe((val) => {
      });
      if ($$props.selected === void 0 && $$bindings.selected && selected !== void 0)
        $$bindings.selected(selected);
      if ($$props.imgUrl === void 0 && $$bindings.imgUrl && imgUrl !== void 0)
        $$bindings.imgUrl(imgUrl);
      if ($$props.label === void 0 && $$bindings.label && label !== void 0)
        $$bindings.label(label);
      if ($$props.amount === void 0 && $$bindings.amount && amount !== void 0)
        $$bindings.amount(amount);
      if ($$props.mobile === void 0 && $$bindings.mobile && mobile !== void 0)
        $$bindings.mobile(mobile);
      if ($$props.id === void 0 && $$bindings.id && id !== void 0)
        $$bindings.id(id);
      if ($$props.i === void 0 && $$bindings.i && i2 !== void 0)
        $$bindings.i(i2);
      $$result.css.add(css$b);
      $$unsubscribe_tokens();
      $$unsubscribe_selectedToken();
      $$unsubscribe_dialog();
      return `<li class="${escape2(null_to_empty("token mt-1")) + " svelte-coawjw"}"><div style="${"--width:" + escape2(amount ? "30%" : "20%")}" class="${escape2(null_to_empty(!mobile ? "token-container" : "token-container-mobile")) + " svelte-coawjw"}"><div style="${"display:flex; justify-content:space-between; align-items:center; width: 2.6rem; height:2.6rem; "}"><img style="${"height:100%; width:2.6rem; border-radius: 50px; object-fit:cover"}"${add_attribute("src", imgUrl, 0)} alt="${"logo"}"></div>
        <div style="${"margin-right: 1rem;"}">${escape2(label)}</div>
        ${amount !== 0 ? `<div class="${"amount-container svelte-coawjw"}">${escape2(amount)}
            <div class="${"icon-container svelte-coawjw"}">${validate_component(Icon, "Icon").$$render($$result, { icon: "akar-icons:edit" }, {}, {})}</div></div>` : `<div></div>`}</div>
    <div style="${"display:flex; justify-content:end; width:20%; padding-right: 1rem;"}"><input type="${"checkbox"}"${add_attribute("checked", selected, 1)}></div>
</li>`;
    });
    ({ Object: Object_1 } = globals);
    css$a = {
      code: "main.svelte-hy9sja{margin:0;padding:0}ul.svelte-hy9sja{margin:0;padding:0}.secondary-btn.svelte-hy9sja{display:flex;height:1.6rem;align-items:center;padding:0.6rem 1rem;border-radius:3px;cursor:pointer}.secondary-btn.svelte-hy9sja:hover{background:rgba(56, 232, 198, 0.1)}.custom-container.svelte-hy9sja{display:flex;justify-content:center;align-items:center;width:100%;height:20%;font-size:0.7rem;color:var(--primary);font-weight:bold;border-top:2px solid var(--form-element-border-color)}.tokens-container.svelte-hy9sja{display:flex;flex-direction:column;justify-content:space-between;height:13rem;border:2px solid var(--form-element-border-color);width:100%;border-radius:9px;background:var(--background-color)}.container.svelte-hy9sja{height:100%;width:100%}",
      map: null
    };
    Tab2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let cssVarStyles;
      let $$unsubscribe_modal;
      $$unsubscribe_modal = subscribe(modal, (value) => value);
      let { mobile } = $$props;
      let tokensValue;
      let styles = {
        "mobile-width": "50%",
        "active-width": "20%",
        "inactive-width": "30%"
      };
      modal.subscribe((val) => val);
      dialog.subscribe((val) => val);
      tokens.subscribe((val) => {
        tokensValue = val;
      });
      if ($$props.mobile === void 0 && $$bindings.mobile && mobile !== void 0)
        $$bindings.mobile(mobile);
      $$result.css.add(css$a);
      cssVarStyles = Object.entries(styles).map(([key, value]) => `--${key}:${value}`).join(";");
      $$unsubscribe_modal();
      return `<main class="${"container svelte-hy9sja"}"${add_attribute("style", cssVarStyles, 0)}>${validate_component(TabHeader, "TabHeader").$$render($$result, {
        title: "Tokens",
        subtitle: "Something about the tokens"
      }, {}, {})}
    <div class="${"tokens-container mt-2 svelte-hy9sja"}"><ul style="${"height:100%; width: 100%; list-style:none; overflow:hidden"}" class="${"svelte-hy9sja"}">
            ${each(tokensValue, (token, i2) => {
        return `${validate_component(TokenComponent, "TokenComponent").$$render($$result, Object_1.assign(token, { mobile }), {}, {})}`;
      })}</ul>
                                <footer class="${"custom-container svelte-hy9sja"}"><div class="${"secondary-btn svelte-hy9sja"}"><div>${validate_component(Icon, "Icon").$$render($$result, {
        icon: "ant-design:plus-circle-outlined",
        height: "1.2rem"
      }, {}, {})}</div>
                                        ${validate_component(HorizontalSpace, "HorizontalSpace").$$render($$result, { value: "0.3rem" }, {}, {})}
                                        <div>ADD CUSTOM TOKEN</div></div></footer></div></main>`;
    });
    VerticalSpace = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { value } = $$props;
      if ($$props.value === void 0 && $$bindings.value && value !== void 0)
        $$bindings.value(value);
      return `<main style="${"height: " + escape2(value)}"></main>`;
    });
    css$9 = {
      code: "img.svelte-12idz9z{max-width:2.4rem;height:100%;border-style:none;margin-left:-0.1rem;border-radius:50px}.label-active.svelte-12idz9z{margin-left:2rem;width:10rem;display:flex;justify-content:end}.label-inactive.svelte-12idz9z{width:10rem;display:flex;justify-content:end}.amount-container.svelte-12idz9z{color:#252E37;font-weight:bold;display:flex;height:100%;width:36%;justify-content:center;align-items:center;background:white;border-top-right-radius:50px;border-bottom-right-radius:50px;margin-left:1rem}.icon-container.svelte-12idz9z{display:flex;align-items:center;justify-content:center;background-color:var(--primary);border-radius:100px;position:absolute;top:-0.6rem;right:0px;height:1.2rem;width:1.2rem;padding:0.2rem}.collection-container-active.svelte-12idz9z{position:relative;display:flex;width:16rem;height:70%;justify-content:space-between;border-radius:50px;align-items:center;background-color:#252E37;font-weight:bold}.collection-container-inactive.svelte-12idz9z{position:relative;display:flex;width:14rem;height:70%;justify-content:space-between;border-radius:50px;align-items:center;background-color:#252E37;font-weight:bold;padding-right:0.8rem}",
      map: null
    };
    CollectionComponent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_dialog;
      let $$unsubscribe_selectedCollection;
      $$unsubscribe_dialog = subscribe(dialog, (value) => value);
      $$unsubscribe_selectedCollection = subscribe(selectedCollection, (value) => value);
      let { selected } = $$props;
      let { amount } = $$props;
      let { label } = $$props;
      let { imgUrl } = $$props;
      let { id } = $$props;
      if ($$props.selected === void 0 && $$bindings.selected && selected !== void 0)
        $$bindings.selected(selected);
      if ($$props.amount === void 0 && $$bindings.amount && amount !== void 0)
        $$bindings.amount(amount);
      if ($$props.label === void 0 && $$bindings.label && label !== void 0)
        $$bindings.label(label);
      if ($$props.imgUrl === void 0 && $$bindings.imgUrl && imgUrl !== void 0)
        $$bindings.imgUrl(imgUrl);
      if ($$props.id === void 0 && $$bindings.id && id !== void 0)
        $$bindings.id(id);
      $$result.css.add(css$9);
      $$unsubscribe_dialog();
      $$unsubscribe_selectedCollection();
      return `<div class="${escape2(null_to_empty(amount ? "collection-container-active" : "collection-container-inactive")) + " svelte-12idz9z"}"><div style="${"display:flex; justify-content:center; align-items:center; width: 2.6rem; height:100%;"}"><img${add_attribute("src", imgUrl, 0)} alt="${"logo"}" class="${"svelte-12idz9z"}"></div>
    <div class="${escape2(null_to_empty(amount ? "label-active" : "label-inactive")) + " svelte-12idz9z"}">${escape2(label)}</div>
    ${amount ? `
    <div class="${"amount-container svelte-12idz9z"}">${escape2(amount)}
        <div class="${"icon-container svelte-12idz9z"}">${validate_component(Icon, "Icon").$$render($$result, { icon: "akar-icons:edit", s: true }, {}, {})}</div></div>` : `<div></div>`}
            </div>`;
    });
    css$8 = {
      code: "header.svelte-1ombc6g{border-bottom:0.5px solid var(--form-element-border-color);margin:0;padding:0}input.svelte-1ombc6g{margin:0;padding:0;border-top-left-radius:0px;border-bottom-left-radius:0px}.icon-container.svelte-1ombc6g{width:2rem;height:3.1rem;border-top-left-radius:12px;border-bottom-left-radius:12px;border:1px solid var(--form-element-border-color)}",
      map: null
    };
    SearchComponent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { searchTerm } = $$props;
      if ($$props.searchTerm === void 0 && $$bindings.searchTerm && searchTerm !== void 0)
        $$bindings.searchTerm(searchTerm);
      $$result.css.add(css$8);
      return `<header class="${"flex-align svelte-1ombc6g"}"><div class="${"icon-container flex-align svelte-1ombc6g"}">${validate_component(Icon, "Icon").$$render($$result, { icon: "akar-icons:search" }, {}, {})}</div>
    <div class="${"mt-1"}"><input type="${"text"}" id="${"search-field"}" placeholder="${"Search ..."}" autocomplete="${"off"}" class="${"svelte-1ombc6g"}"${add_attribute("value", searchTerm, 0)}></div>
</header>`;
    });
    css$7 = {
      code: ".collection-inactive.svelte-jwjyx9{display:flex;height:3.5rem;width:100%;justify-content:space-between;align-items:center;padding-left:3%}.collection-active.svelte-jwjyx9{display:flex;height:3.5rem;width:100%;justify-content:space-between;align-items:center;background-color:rgba(56, 232, 198, 0.1);cursor:pointer;padding-left:3%}main.svelte-jwjyx9{margin:0;padding:0}ul.svelte-jwjyx9{margin:0;padding:0}li.svelte-jwjyx9{margin:0;padding:0}.collections-container.svelte-jwjyx9{display:flex;flex-direction:column;justify-content:space-between;height:26rem;border:2px solid var(--form-element-border-color);width:100%;border-radius:9px;background:var(--background-color)}.container.svelte-jwjyx9{height:100%;width:100%}",
      map: null
    };
    Tab3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_collections;
      let $dialog, $$unsubscribe_dialog;
      let $selectedCollection, $$unsubscribe_selectedCollection;
      $$unsubscribe_collections = subscribe(collections, (value) => value);
      $$unsubscribe_dialog = subscribe(dialog, (value) => $dialog = value);
      $$unsubscribe_selectedCollection = subscribe(selectedCollection, (value) => $selectedCollection = value);
      createEventDispatcher();
      let hoveredId;
      let collectionsValue;
      collections.subscribe((val) => collectionsValue = val);
      let filteredCollections = [];
      let searchTerm = "";
      $$result.css.add(css$7);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `
<main class="${"container svelte-jwjyx9"}">${validate_component(TabHeader, "TabHeader").$$render($$result, {
          title: "Collections",
          subtitle: "Something about the collections"
        }, {}, {})}
     <div class="${"collections-container mt-2 svelte-jwjyx9"}">${validate_component(SearchComponent, "SearchComponent").$$render($$result, { searchTerm }, {
          searchTerm: ($$value) => {
            searchTerm = $$value;
            $$settled = false;
          }
        }, {})}
        ${!searchTerm && filteredCollections.length === 0 ? `
          <ul style="${"height:100%; width: 100%; list-style:none; overflow:hidden"}" class="${"svelte-jwjyx9"}">${each(collectionsValue, (collection, i2) => {
          return `<li class="${escape2(null_to_empty(hoveredId === collection.id ? "collection-active" : "collection-inactive")) + " svelte-jwjyx9"}">${validate_component(CollectionComponent, "CollectionComponent").$$render($$result, Object.assign(collection, { selectedCollection }), {}, {})}

            <div style="${"display:flex; justify-content:end; width:20%; padding-right: 1rem;"}"><input type="${"checkbox"}"${add_attribute("checked", collection.selected, 1)}></div>
            </li>`;
        })}</ul>` : `${filteredCollections.length > 0 ? `<ul style="${"height:100%; width: 100%; list-style:none; overflow:hidden"}" class="${"svelte-jwjyx9"}">${each(filteredCollections, (collection) => {
          return `<li class="${escape2(null_to_empty(hoveredId === collection.id ? "collection-active" : "collection-inactive")) + " svelte-jwjyx9"}">${validate_component(CollectionComponent, "CollectionComponent").$$render($$result, Object.assign(collection, { dialog: $dialog }, { selectedCollection: $selectedCollection }), {}, {})}

<div style="${"display:flex; justify-content:end; width:20%; padding-right: 1rem;"}"><input type="${"checkbox"}"${add_attribute("checked", collection.selected, 1)}></div>
</li>`;
        })}</ul>` : ``}`}</div></main>



  `;
      } while (!$$settled);
      $$unsubscribe_collections();
      $$unsubscribe_dialog();
      $$unsubscribe_selectedCollection();
      return $$rendered;
    });
    css$6 = {
      code: ".logo.svelte-mc1wpv{object-fit:cover;height:2rem;margin-left:0.5rem}",
      map: null
    };
    Tab4 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_emeraldIdVerif;
      $$unsubscribe_emeraldIdVerif = subscribe(emeraldIdVerif, (value) => value);
      let { emeraldIdVal } = $$props;
      emeraldIdVerif.subscribe((val) => emeraldIdVal = val);
      if ($$props.emeraldIdVal === void 0 && $$bindings.emeraldIdVal && emeraldIdVal !== void 0)
        $$bindings.emeraldIdVal(emeraldIdVal);
      $$result.css.add(css$6);
      $$unsubscribe_emeraldIdVerif();
      return `<div>${validate_component(TabHeader, "TabHeader").$$render($$result, {
        title: "Emerald ID",
        subtitle: "Something about Emerald ID"
      }, {}, {})}
    <button${add_attribute("class", emeraldIdVal.active ? "flex-align" : "outline mb-1 flex-align", 0)}>Require
    <img class="${"logo svelte-mc1wpv"}" src="${"https://res.cloudinary.com/do4mactw0/image/upload/v1648233132/Emerald_Bot_Logo_olre0f.svg"}" alt="${"emeraldid"}"></button>
</div>`;
    });
    css$5 = {
      code: ".edit-icon-container.svelte-11iatjc{position:absolute;top:-0.8rem;right:-0.5rem;display:flex;align-items:center;justify-content:center;background-color:#5865F2;border-radius:100px;height:1.4rem;width:1.4rem;padding:0.2rem}.edit-icon-container.svelte-11iatjc:hover{cursor:pointer}ul.svelte-11iatjc{list-style-type:none;width:100%;margin-top:0.9rem;padding:0}li.svelte-11iatjc{display:flex;height:3rem;margin-top:1rem;padding:0}.icon-container.svelte-11iatjc{height:100%;color:lightslategrey}.icon-container.svelte-11iatjc:hover{color:red;cursor:pointer}.server-container.svelte-11iatjc{display:flex;justify-content:space-between;align-items:center;width:100%;color:#5865F2}.server-container.svelte-11iatjc:hover{display:flex;justify-content:space-between;align-items:center;width:100%;color:#5865F2;background-color:rgba(88, 101, 242, 0.1);border-radius:12px}.server.svelte-11iatjc{position:relative;display:flex;justify-content:space-between;align-items:center;padding-left:1rem;background:#252E37;width:50%;border-radius:9px;height:100%}.server.svelte-11iatjc:hover{cursor:pointer}",
      map: null
    };
    DiscordServersComponent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_discordVerif;
      let $$unsubscribe_modal;
      $$unsubscribe_discordVerif = subscribe(discordVerif, (value) => value);
      $$unsubscribe_modal = subscribe(modal, (value) => value);
      let { servers } = $$props;
      if ($$props.servers === void 0 && $$bindings.servers && servers !== void 0)
        $$bindings.servers(servers);
      $$result.css.add(css$5);
      $$unsubscribe_discordVerif();
      $$unsubscribe_modal();
      return `<h3 class="${"mt-2"}">Discord Servers</h3>
<ul class="${"mt-2 svelte-11iatjc"}">${each(servers, (server, i2) => {
        return `<li class="${"server-container svelte-11iatjc"}"><div class="${"server svelte-11iatjc"}">${escape2(server.label)}
            <div class="${"edit-icon-container svelte-11iatjc"}">${validate_component(Icon, "Icon").$$render($$result, { color: "white", icon: "akar-icons:edit" }, {}, {})}
            </div></div>
        <div class="${"icon-container flex-align svelte-11iatjc"}">${validate_component(Icon, "Icon").$$render($$result, {
          height: "80%",
          icon: "ant-design:minus-circle-twotone"
        }, {}, {})}</div>
    </li>`;
      })}
</ul>`;
    });
    css$4 = {
      code: ".discord-active.svelte-r571qp{color:white;border-color:#5865f2;background:#5865f2}.discord-inactive.svelte-r571qp{color:#5865f2;border-color:#5865f2;background:transparent;cursor:pointer}.logo.svelte-r571qp{object-fit:cover;height:2rem;margin-left:0.5rem}",
      map: null
    };
    Tab5 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_modal;
      let $$unsubscribe_discordVerif;
      $$unsubscribe_modal = subscribe(modal, (value) => value);
      $$unsubscribe_discordVerif = subscribe(discordVerif, (value) => value);
      let discordVal;
      discordVerif.subscribe((val) => discordVal = val);
      $$result.css.add(css$4);
      $$unsubscribe_modal();
      $$unsubscribe_discordVerif();
      return `<div>${validate_component(TabHeader, "TabHeader").$$render($$result, {
        title: "Discord Verification",
        subtitle: "Something about the Discord verification"
      }, {}, {})}
    <button class="${escape2(null_to_empty(discordVal?.active ? "discord-active flex-align" : "discord-inactive outline mb-1 flex-align")) + " svelte-r571qp"}">Require
        <div class="${"logo svelte-r571qp"}">${validate_component(Icon, "Icon").$$render($$result, {
        height: "100%",
        icon: "radix-icons:discord-logo",
        color: discordVal?.active ? "white" : "#5865F2"
      }, {}, {})}</div></button>

    ${discordVal.active ? `${validate_component(DiscordServersComponent, "DiscordServersComponent").$$render($$result, { servers: discordVal.servers }, {}, {})}
        <button style="${"width: 50%; display:flex"}" class="${"discord-inactive flex-align mt-0 svelte-r571qp"}"><span>Add Server</span>
            <div style="${"margin-left: 0.3rem;"}" class="${"flex-align"}">${validate_component(Icon, "Icon").$$render($$result, {
        icon: "ant-design:plus-circle-twotone",
        height: "1.6rem"
      }, {}, {})}</div></button>` : ``}
</div>`;
    });
    css$3 = {
      code: "input.svelte-1jf81m1:focus{border-color:#1DA1F2}.twitter-inactive.svelte-1jf81m1{color:#1DA1F2;border-color:#1DA1F2;background:transparent;cursor:pointer}.add-button.svelte-1jf81m1{margin-left:1rem;height:3rem}.account-input-container.svelte-1jf81m1{display:flex;justify-content:space-between;width:100%}.edit-icon-container.svelte-1jf81m1{position:absolute;top:-0.8rem;right:-0.5rem;display:flex;align-items:center;justify-content:center;background-color:#1DA1F2;border-radius:100px;height:1.4rem;width:1.4rem;padding:0.2rem}.edit-icon-container.svelte-1jf81m1:hover{cursor:pointer}ul.svelte-1jf81m1{list-style-type:none;width:100%;margin-top:0.9rem;padding:0}li.svelte-1jf81m1{display:flex;height:3rem;margin-top:1rem;padding:0}.icon-container.svelte-1jf81m1{height:100%;color:lightslategrey}.icon-container.svelte-1jf81m1:hover{color:red;cursor:pointer}.account-container.svelte-1jf81m1{display:flex;justify-content:space-between;align-items:center;width:100%;color:#1DA1F2}.account-container.svelte-1jf81m1:hover{display:flex;justify-content:space-between;align-items:center;width:100%;color:#1DA1F2;background-color:rgba(29 ,161, 242, 0.1);border-radius:12px}.account.svelte-1jf81m1{position:relative;display:flex;justify-content:space-between;align-items:center;padding-left:1rem;background:#252E37;width:50%;border-radius:9px;height:100%}.account.svelte-1jf81m1:hover{cursor:pointer}",
      map: null
    };
    TwitterAccountsComponent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_twitterVerif;
      let $$unsubscribe_modal;
      $$unsubscribe_twitterVerif = subscribe(twitterVerif, (value) => value);
      $$unsubscribe_modal = subscribe(modal, (value) => value);
      let { accounts } = $$props;
      let { mobile } = $$props;
      let accountHandle = "";
      let TwitterVerif;
      twitterVerif.subscribe((val) => TwitterVerif = val);
      if ($$props.accounts === void 0 && $$bindings.accounts && accounts !== void 0)
        $$bindings.accounts(accounts);
      if ($$props.mobile === void 0 && $$bindings.mobile && mobile !== void 0)
        $$bindings.mobile(mobile);
      $$result.css.add(css$3);
      $$unsubscribe_twitterVerif();
      $$unsubscribe_modal();
      return `<h3 class="${"mt-2"}">Twitter Accounts</h3>
<div class="${"account-input-container svelte-1jf81m1"}"><input placeholder="${"@AccountHandle"}" class="${"svelte-1jf81m1"}"${add_attribute("value", accountHandle, 0)}>

    <button style="${"width:" + escape2(mobile ? "20%" : "50%")}" class="${"add-button twitter-inactive flex-align mt-0 svelte-1jf81m1"}">${!mobile ? `<span>Add Account</span>` : ``}
        <div${add_attribute("style", mobile ? "margin-left:0rem" : "margin-left: 0.3rem", 0)} class="${"flex-align"}">${validate_component(Icon, "Icon").$$render($$result, {
        icon: "ant-design:plus-circle-twotone",
        height: mobile ? "2.5rem" : "1.6rem"
      }, {}, {})}</div></button></div>
                <ul class="${"mt-2 svelte-1jf81m1"}">${each(TwitterVerif.accounts, (account, i2) => {
        return `<li class="${"account-container svelte-1jf81m1"}"><div class="${"account svelte-1jf81m1"}"><div style="${"display: flex;"}"><span style="${"color: #1DA1F2;"}">@</span>
                                ${validate_component(HorizontalSpace, "HorizontalSpace").$$render($$result, { value: "0.2rem" }, {}, {})}
                                 <span style="${"color: white;"}">${escape2(account.label)}
                                </span></div>
                            <div class="${"edit-icon-container svelte-1jf81m1"}">${validate_component(Icon, "Icon").$$render($$result, { color: "white", icon: "akar-icons:edit" }, {}, {})}

                            </div></div>
                        <div class="${"icon-container flex-align svelte-1jf81m1"}">${validate_component(Icon, "Icon").$$render($$result, {
          height: "80%",
          icon: "ant-design:minus-circle-twotone"
        }, {}, {})}</div>
                    </li>`;
      })}
                </ul>`;
    });
    css$2 = {
      code: ".twitter-active.svelte-1msgwgr{color:white;border-color:#1da1f2;background:#1da1f2}.twitter-inactive.svelte-1msgwgr{color:#1da1f2;border-color:#1da1f2;background:transparent;cursor:pointer}.logo.svelte-1msgwgr{object-fit:cover;height:2rem;margin-left:0.5rem}",
      map: null
    };
    Tab6 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_modal;
      let $$unsubscribe_twitterVerif;
      $$unsubscribe_modal = subscribe(modal, (value) => value);
      $$unsubscribe_twitterVerif = subscribe(twitterVerif, (value) => value);
      let twitterVal;
      let { mobile } = $$props;
      twitterVerif.subscribe((val) => twitterVal = val);
      if ($$props.mobile === void 0 && $$bindings.mobile && mobile !== void 0)
        $$bindings.mobile(mobile);
      $$result.css.add(css$2);
      $$unsubscribe_modal();
      $$unsubscribe_twitterVerif();
      return `<div>${validate_component(TabHeader, "TabHeader").$$render($$result, {
        title: "Twitter Verification",
        subtitle: "Something about the twitter verification"
      }, {}, {})}
    <button class="${escape2(null_to_empty(twitterVal?.active ? "twitter-active flex-align" : "twitter-inactive outline mb-1 flex-align")) + " svelte-1msgwgr"}">Require
        <div class="${"logo svelte-1msgwgr"}">${validate_component(Icon, "Icon").$$render($$result, {
        height: "100%",
        icon: "radix-icons:twitter-logo",
        color: twitterVal?.active ? "white" : "#1DA1F2"
      }, {}, {})}</div></button>

    ${twitterVal.active ? `${validate_component(TwitterAccountsComponent, "TwitterAccountsComponent").$$render($$result, { mobile, accounts: twitterVal.accounts }, {}, {})}` : ``}
</div>`;
    });
    css$1 = {
      code: ".see-details-container.svelte-1469vae{padding-left:0.7rem;width:50%;height:100%;border-left:2px solid blue;border-left-color:var(--border)}.see-details-container.svelte-1469vae:hover{color:var(--border);cursor:pointer}img.svelte-1469vae{max-width:2.4rem;height:100%;border-style:none;margin-left:-0.1rem;border-radius:50px}.verification-container-inactive.svelte-1469vae{z-index:92;display:flex;width:var(--width);height:70%;justify-content:space-between;border-radius:50px;align-items:center;font-weight:bold;padding-right:0.8rem;border:2px solid var(--border);background-color:#252E37}",
      map: null
    };
    VerificationComponent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_dialog;
      $$unsubscribe_dialog = subscribe(dialog, (value) => value);
      let { selected } = $$props;
      let { label } = $$props;
      let { imgUrl } = $$props;
      let { id } = $$props;
      let color;
      let details = null;
      if (label === "Discord") {
        color = "#5865F2";
      } else if (label === "Twitter") {
        color = "#1DA1F2";
      } else {
        color = "var(--primary)";
      }
      if (label === "Discord" || label === "Twitter") {
        details = true;
      } else {
        details = false;
      }
      if ($$props.selected === void 0 && $$bindings.selected && selected !== void 0)
        $$bindings.selected(selected);
      if ($$props.label === void 0 && $$bindings.label && label !== void 0)
        $$bindings.label(label);
      if ($$props.imgUrl === void 0 && $$bindings.imgUrl && imgUrl !== void 0)
        $$bindings.imgUrl(imgUrl);
      if ($$props.id === void 0 && $$bindings.id && id !== void 0)
        $$bindings.id(id);
      $$result.css.add(css$1);
      $$unsubscribe_dialog();
      return `<div style="${"--border:" + escape2(color) + "; --width:" + escape2(details ? "16rem" : "9rem") + "; height:2.6rem;"}" class="${escape2(null_to_empty("verification-container-inactive")) + " svelte-1469vae"}"><div style="${"display: flex; height:100%; align-items: center; width:" + escape2(details ? "60%" : "100%")}"><div style="${"display:flex; justify-content:center; align-items:center; width: 2.6rem; height:100%; "}"><img${add_attribute("src", imgUrl, 0)} alt="${"logo"}" class="${"svelte-1469vae"}"></div>
        
        <div style="${"color: white; margin-left:0.3rem; width:100%"}">${escape2(label)}</div></div>

    ${details ? `<div class="${"flex-align see-details-container svelte-1469vae"}">See details
    </div>` : ``}

</div>`;
    });
    css = {
      code: ".token-container.svelte-1v562r5{display:flex;width:var(--width);height:70%;justify-content:space-between;border-radius:50px;align-items:center;background-color:#252E37;font-weight:bold;margin-left:var(--margin-left)}.amount-container.svelte-1v562r5{color:#252E37;font-weight:bold;display:flex;height:2.6rem;width:36%;justify-content:center;align-items:center;background:white;border-top-right-radius:50px;border-bottom-right-radius:50px}",
      map: null
    };
    Tab7 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let Tab1data;
      let Tokens;
      let Collections;
      let EmeraldIdVerif;
      let DiscordVerif;
      let TwitterVerif;
      let { mobile } = $$props;
      tab1data.subscribe((val) => Tab1data = val);
      tokens.subscribe((val) => Tokens = val);
      collections.subscribe((val) => Collections = val);
      emeraldIdVerif.subscribe((val) => EmeraldIdVerif = val);
      discordVerif.subscribe((val) => DiscordVerif = val);
      twitterVerif.subscribe((val) => TwitterVerif = val);
      if ($$props.mobile === void 0 && $$bindings.mobile && mobile !== void 0)
        $$bindings.mobile(mobile);
      $$result.css.add(css);
      return `${validate_component(TabHeader, "TabHeader").$$render($$result, {
        title: "Confirmation",
        subtitle: "Something about the confirmation"
      }, {}, {})}

<h3>${escape2(Tab1data.name)}</h3>
<p>${escape2(Tab1data.description)}</p>

<h3>Tokens
</h3>
<div style="${"display: flex; flex-direction:" + escape2(mobile ? "column" : "row")}" class="${"mt-1"}">${each(Tokens, ({ imgUrl, label, amount, selected, id }) => {
        return `${selected ? `<div style="${"--width:" + escape2(mobile ? "60%" : "30%") + "; --margin-left:" + escape2(id === 0 && !mobile ? "0rem" : "0.8rem") + " --margin-top:" + escape2(mobile ? "0.6rem" : "0rem")}" class="${escape2(null_to_empty("token-container mt-1")) + " svelte-1v562r5"}"><div style="${"display:flex; justify-content:space-between; align-items:center; width: 2.6rem; height:2.6rem; "}"><img style="${"height:100%; width:2.6rem; border-radius: 50px; object-fit:cover"}"${add_attribute("src", imgUrl, 0)} alt="${"logo"}"></div>
        <div style="${"margin-right: 1rem;"}">${escape2(label)}</div>
        <div class="${"amount-container svelte-1v562r5"}">${escape2(amount)}</div>
    </div>` : ``}`;
      })}</div>
<h3>Collections
</h3>
<div class="${"mt-1"}">${each(Collections, (collection) => {
        return `${collection.selected ? `<div class="${"mt-1"}">${validate_component(CollectionComponent, "CollectionComponent").$$render($$result, Object.assign(collection), {}, {})}
    </div>` : ``}`;
      })}</div>

<div class="${"mt-2"}" style="${"display: flex;"}"><h3>Verification</h3></div>
<div class="${"mt-1"}">${EmeraldIdVerif.active ? `${validate_component(VerificationComponent, "VerificationComponent").$$render($$result, Object.assign(EmeraldIdVerif), {}, {})}` : ``}
    ${validate_component(VerticalSpace, "VerticalSpace").$$render($$result, { value: "0.8rem" }, {}, {})}
    ${DiscordVerif.active ? `${validate_component(VerificationComponent, "VerificationComponent").$$render($$result, Object.assign(DiscordVerif), {}, {})}` : ``}
    ${validate_component(VerticalSpace, "VerticalSpace").$$render($$result, { value: "0.8rem" }, {}, {})}
    ${TwitterVerif.active ? `${validate_component(VerificationComponent, "VerificationComponent").$$render($$result, Object.assign(TwitterVerif), {}, {})}` : ``}
</div>`;
    });
    joinedWhitelists = writable2([]);
    projects = writable2([]);
    activeTabVal = writable2(0);
    tabs = writable2([
      {
        label: "Content",
        value: 0,
        component: Tab1,
        icon: "ic:outline-subtitles"
      },
      {
        label: "Tokens",
        value: 1,
        component: Tab2,
        icon: "icomoon-free:coin-dollar"
      },
      {
        label: "Tab 3",
        value: 2,
        component: Tab3,
        icon: "fluent:collections-add-24-regular"
      },
      {
        label: "Tab 4",
        value: 3,
        component: Tab4,
        icon: "fa:diamond"
      },
      {
        label: "Tab 5",
        value: 4,
        component: Tab5,
        icon: "radix-icons:discord-logo"
      },
      {
        label: "Tab 6",
        value: 5,
        component: Tab6,
        icon: "radix-icons:twitter-logo"
      },
      {
        label: "Tab 7",
        value: 6,
        component: Tab7,
        icon: "line-md:confirm-circle"
      }
    ]);
    tab1data = writable2({
      name: "",
      description: ""
    });
    tokens = writable2([
      {
        id: 0,
        label: "FLOW",
        imgUrl: "https://res.cloudinary.com/do4mactw0/image/upload/v1647145425/FlowLogo_myf3sv.svg",
        selected: false,
        amount: 0,
        path: {
          domain: "public",
          identifier: "flowTokenBalance"
        },
        identifier: "A.1654653399040a61.FlowToken.Vault"
      },
      {
        id: 1,
        label: "FUSD",
        imgUrl: "https://res.cloudinary.com/do4mactw0/image/upload/v1647145831/FusdIcon_esmisr.svg",
        selected: false,
        amount: 0,
        path: {
          domain: "public",
          identifier: "fusdBalance"
        },
        identifier: "A.3c5959b568896393.FUSD.Vault"
      }
    ]);
    selectedToken = writable2(0);
    selectedCollection = writable2(0);
    collections = writable2([
      {
        id: 0,
        label: "Basic Beasts",
        imgUrl: "https://res.cloudinary.com/do4mactw0/image/upload/v1647145169/618a0cea8665abc4610c4ca6_basic_beasts_o5telf.png",
        selected: false,
        amount: 0
      },
      {
        id: 1,
        label: "Ballerz",
        imgUrl: "https://res.cloudinary.com/do4mactw0/image/upload/v1647145169/618b83df2183ef7f2902c886_thumbnail_ballerz_jwtdpb.jpg",
        selected: false,
        amount: 0
      },
      {
        id: 2,
        label: "Flovatar",
        imgUrl: "https://res.cloudinary.com/do4mactw0/image/upload/v1647145169/619efc34fe0b49bb68dc20b8_flovatar_5-01_1_bo3h2k.png",
        selected: false,
        amount: 0
      }
    ]);
    emeraldIdVerif = writable2({
      label: "Emerald ID",
      active: false,
      imgUrl: "https://res.cloudinary.com/do4mactw0/image/upload/v1648233132/Emerald_Bot_Logo_olre0f.svg"
    });
    discordVerif = writable2({
      label: "Discord",
      imgUrl: "https://res.cloudinary.com/do4mactw0/image/upload/v1648666781/discordIcon_pokppb.svg",
      selectedId: 0,
      serverId: "",
      active: false,
      editing: false,
      servers: []
    });
    twitterVerif = writable2({
      label: "Twitter",
      imgUrl: "https://res.cloudinary.com/do4mactw0/image/upload/v1648666781/twitterIcon_sxe5jr.svg",
      selectedId: 0,
      accountId: "",
      active: false,
      editing: false,
      accounts: []
    });
    modal = writable2({
      title: "",
      action: "",
      opened: false,
      content: "custom-token"
    });
    dialog = writable2({
      title: "",
      action: "",
      opened: false
    });
    drawer = writable2({
      opened: false
    });
    transactionStatus2 = writable2(null);
    txId2 = writable2(null);
    transactionInProgress2 = writable2(false);
  }
});

// .svelte-kit/output/server/chunks/Drawer-7bac58aa.js
var import_onflow_fcl_esm2, css$32, ConnectWallet, css$22, UserAddress, css$12, Hamburger, css2, Drawer;
var init_Drawer_7bac58aa = __esm({
  ".svelte-kit/output/server/chunks/Drawer-7bac58aa.js"() {
    init_shims();
    init_app_0013ff75();
    import_onflow_fcl_esm2 = __toModule(require_fcl_cjs());
    init_stores_c1e7c577();
    init_stores_14403ff2();
    css$32 = {
      code: "a.svelte-nbcav7{padding:8px 14px}",
      map: null
    };
    ConnectWallet = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css$32);
      return `<a role="${"button"}" href="${"/"}" class="${"contrast small-button svelte-nbcav7"}">Connect Wallet</a>`;
    });
    css$22 = {
      code: ".led-green.svelte-bnzski{position:relative;display:inline-block;top:0px;margin-right:0.5em;background-color:var(--primary);width:14px;height:14px;border-radius:14px}",
      map: null
    };
    UserAddress = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { address } = $$props;
      let { abbreviated = false } = $$props;
      if ($$props.address === void 0 && $$bindings.address && address !== void 0)
        $$bindings.address(address);
      if ($$props.abbreviated === void 0 && $$bindings.abbreviated && abbreviated !== void 0)
        $$bindings.abbreviated(abbreviated);
      $$result.css.add(css$22);
      return `<div><span class="${"led-green svelte-bnzski"}"></span>
  <span class="${"mono"}">${escape2(abbreviated ? "0x..." + address.slice(address.length - 4) : address)}</span></div>`;
    });
    css$12 = {
      code: "svg.svelte-4w9ao6.svelte-4w9ao6{min-height:24px;transition:transform 0.3s ease-in-out}svg.svelte-4w9ao6 line.svelte-4w9ao6{stroke:currentColor;stroke-width:3;transition:transform 0.3s ease-in-out\n	}.opened.svelte-4w9ao6 svg.svelte-4w9ao6{transform:scale(0.7)\n	}.opened.svelte-4w9ao6 #top.svelte-4w9ao6{transform:translate(6px, 0px) rotate(45deg)\n	}.opened.svelte-4w9ao6 #middle.svelte-4w9ao6{opacity:0}.opened.svelte-4w9ao6 #bottom.svelte-4w9ao6{transform:translate(-12px, 9px) rotate(-45deg)\n	}",
      map: null
    };
    Hamburger = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_drawer;
      $$unsubscribe_drawer = subscribe(drawer, (value) => value);
      let drawerVal;
      let opened;
      drawer.subscribe((val) => {
        drawerVal = val;
        opened = drawerVal.opened;
      });
      $$result.css.add(css$12);
      $$unsubscribe_drawer();
      return `<div style="${"color: var(--primary); z-index:3; position:relative"}" class="${["svelte-4w9ao6", opened ? "opened" : ""].join(" ").trim()}"><svg width="${"30"}" height="${"30"}" class="${"svelte-4w9ao6"}"><line id="${"top"}" x1="${"0"}" y1="${"2"}" x2="${"32"}" y2="${"2"}" class="${"svelte-4w9ao6"}"></line><line id="${"middle"}" x1="${"0"}" y1="${"12"}" x2="${"24"}" y2="${"12"}" class="${"svelte-4w9ao6"}"></line><line id="${"bottom"}" x1="${"0"}" y1="${"22"}" x2="${"32"}" y2="${"22"}" class="${"svelte-4w9ao6"}"></line></svg>
</div>`;
    });
    css2 = {
      code: ".drawer.svelte-1c92i6o.svelte-1c92i6o{position:fixed;top:0;left:0;height:100%;width:100%;z-index:-1;transition:z-index var(--duration) step-end}.drawer.open.svelte-1c92i6o.svelte-1c92i6o{z-index:99;transition:z-index var(--duration) step-start}.overlay.svelte-1c92i6o.svelte-1c92i6o{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(100, 100, 100, 0.5);opacity:0;z-index:2;transition:opacity var(--duration) ease}.drawer.open.svelte-1c92i6o .overlay.svelte-1c92i6o{opacity:1}.panel.svelte-1c92i6o.svelte-1c92i6o{position:fixed;width:100%;height:100%;background:white;z-index:3;transition:transform var(--duration) ease;overflow:auto}.panel.left.svelte-1c92i6o.svelte-1c92i6o{left:0;transform:translate(-100%, 0)}.panel.right.svelte-1c92i6o.svelte-1c92i6o{right:0;transform:translate(100%, 0)}.panel.top.svelte-1c92i6o.svelte-1c92i6o{top:0;transform:translate(0, -100%)}.panel.bottom.svelte-1c92i6o.svelte-1c92i6o{bottom:0;transform:translate(0, 100%)}.panel.left.size.svelte-1c92i6o.svelte-1c92i6o,.panel.right.size.svelte-1c92i6o.svelte-1c92i6o{max-width:var(--size)}.panel.top.size.svelte-1c92i6o.svelte-1c92i6o,.panel.bottom.size.svelte-1c92i6o.svelte-1c92i6o{max-height:var(--size)}.drawer.open.svelte-1c92i6o .panel.svelte-1c92i6o{transform:translate(0, 0)}",
      map: null
    };
    Drawer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let style;
      let { open = false } = $$props;
      let { duration = 0.2 } = $$props;
      let { placement = "left" } = $$props;
      let { size = null } = $$props;
      createEventDispatcher();
      if ($$props.open === void 0 && $$bindings.open && open !== void 0)
        $$bindings.open(open);
      if ($$props.duration === void 0 && $$bindings.duration && duration !== void 0)
        $$bindings.duration(duration);
      if ($$props.placement === void 0 && $$bindings.placement && placement !== void 0)
        $$bindings.placement(placement);
      if ($$props.size === void 0 && $$bindings.size && size !== void 0)
        $$bindings.size(size);
      $$result.css.add(css2);
      style = `--duration: ${duration}s; --size: ${size};`;
      return `<aside class="${["drawer svelte-1c92i6o", open ? "open" : ""].join(" ").trim()}"${add_attribute("style", style, 0)}><div class="${"overlay svelte-1c92i6o"}"></div>

    <div class="${["panel " + escape2(placement) + " svelte-1c92i6o", size ? "size" : ""].join(" ").trim()}">${slots.default ? slots.default({}) : ``}</div>

</aside>`;
    });
  }
});

// .svelte-kit/output/server/chunks/MediaQuery-872353f6.js
var MediaQuery_872353f6_exports = {};
__export(MediaQuery_872353f6_exports, {
  default: () => MediaQuery
});
var MediaQuery;
var init_MediaQuery_872353f6 = __esm({
  ".svelte-kit/output/server/chunks/MediaQuery-872353f6.js"() {
    init_shims();
    init_app_0013ff75();
    init_ssr();
    MediaQuery = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { query: query2 } = $$props;
      let matches = false;
      if ($$props.query === void 0 && $$bindings.query && query2 !== void 0)
        $$bindings.query(query2);
      return `${slots.default ? slots.default({ matches }) : ``}`;
    });
  }
});

// .svelte-kit/output/server/chunks/__layout-67bffebc.js
var layout_67bffebc_exports = {};
__export(layout_67bffebc_exports, {
  default: () => _layout
});
var import_onflow_fcl_esm3, css$33, Header, css$23, Transaction, css$13, TxMockUp, css3, _layout;
var init_layout_67bffebc = __esm({
  ".svelte-kit/output/server/chunks/__layout-67bffebc.js"() {
    init_shims();
    init_app_0013ff75();
    import_onflow_fcl_esm3 = __toModule(require_fcl_cjs());
    init_index_b0a82c49();
    init_stores_91c44e17();
    init_Drawer_7bac58aa();
    init_stores_c1e7c577();
    init_MediaQuery_872353f6();
    init_stores_14403ff2();
    init_ssr();
    css$33 = {
      code: "li.svelte-9oim8o{margin-right:1rem}.outline.svelte-9oim8o{padding:6px 14px}",
      map: null
    };
    Header = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $user, $$unsubscribe_user;
      $$unsubscribe_user = subscribe(user, (value) => $user = value);
      let { screenSize } = $$props;
      let html = document.querySelector("html");
      html.setAttribute("data-theme", "dark");
      if ($$props.screenSize === void 0 && $$bindings.screenSize && screenSize !== void 0)
        $$bindings.screenSize(screenSize);
      $$result.css.add(css$33);
      $$unsubscribe_user();
      return `<nav class="${"container"}"><ul><li class="${"svelte-9oim8o"}">
      <h3>LOGO</h3>
      
      </li></ul>
  <ul>
    ${screenSize !== "mobile" ? `<li class="${"svelte-9oim8o"}"><a href="${"/" + escape2($user.addr) + "/whitelists"}">Whitelists</a></li>
      <li class="${"svelte-9oim8o"}">${$user?.loggedIn ? `<button class="${"outline svelte-9oim8o"}">${validate_component(UserAddress, "UserAddress").$$render($$result, {
        address: $user?.addr || "0x0",
        abbreviated: true
      }, {}, {})}</button>` : `${validate_component(ConnectWallet, "ConnectWallet").$$render($$result, {}, {}, {})}`}</li>` : `<div style="${"margin-right:1rem"}">
        ${validate_component(Hamburger, "Hamburger").$$render($$result, {}, {}, {})}</div>`}</ul>
</nav>`;
    });
    css$23 = {
      code: "article.svelte-11j8u0c{padding:1rem}progress.svelte-11j8u0c{margin-top:1em}small.svelte-11j8u0c{opacity:0.8}",
      map: null
    };
    Transaction = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $transactionInProgress, $$unsubscribe_transactionInProgress;
      let $transactionStatus, $$unsubscribe_transactionStatus;
      let $txId, $$unsubscribe_txId;
      $$unsubscribe_transactionInProgress = subscribe(transactionInProgress, (value) => $transactionInProgress = value);
      $$unsubscribe_transactionStatus = subscribe(transactionStatus, (value) => $transactionStatus = value);
      $$unsubscribe_txId = subscribe(txId, (value) => $txId = value);
      $$result.css.add(css$23);
      $$unsubscribe_transactionInProgress();
      $$unsubscribe_transactionStatus();
      $$unsubscribe_txId();
      return `${$transactionInProgress ? `<article class="${"accent-border " + escape2($transactionStatus == 99 ? "error" : null) + " svelte-11j8u0c"}">Transaction status:
    ${$transactionStatus < 0 ? `<span><kbd>Initializing</kbd><br><small class="${"svelte-11j8u0c"}">Waiting for transaction approval.</small></span>
      <progress indeterminate class="${"svelte-11j8u0c"}">Initializing...</progress>` : `${$transactionStatus < 2 ? `<span class="${"txId"}"><a${add_attribute("href", `https://testnet.flowscan.org/transaction/${$txId}`, 0)} target="${"_blank"}">${escape2($txId?.slice(0, 8))}...
        </a></span>
      <span><kbd>Pending</kbd><br><small class="${"svelte-11j8u0c"}">The transaction has been received by a collector but not yet
          finalized in a block.</small></span>
      <progress indeterminate class="${"svelte-11j8u0c"}">Executing</progress>` : `${$transactionStatus === 2 ? `<span class="${"txId"}"><a${add_attribute("href", `https://testnet.flowscan.org/transaction/${$txId}`, 0)} target="${"_blank"}">${escape2($txId?.slice(0, 8))}...
        </a></span>
      <span><kbd>Finalized</kbd><br><small class="${"svelte-11j8u0c"}">The consensus nodes have finalized the block that the transaction is
          included in.</small></span>
      <progress min="${"0"}" max="${"100"}" value="${"80"}" class="${"svelte-11j8u0c"}">Executing...</progress>` : `${$transactionStatus === 3 ? `<span class="${"txId"}"><a${add_attribute("href", `https://testnet.flowscan.org/transaction/${$txId}`, 0)} target="${"_blank"}">${escape2($txId?.slice(0, 8))}...
        </a></span>
      <span><kbd>Executed</kbd><br><small class="${"svelte-11j8u0c"}">The execution nodes have produced a result for the transaction.</small></span>
      <progress min="${"0"}" max="${"100"}" value="${"80"}" class="${"svelte-11j8u0c"}">Sealing...</progress>` : `${$transactionStatus === 4 ? `<span class="${"txId"}"><a${add_attribute("href", `https://testnet.flowscan.org/transaction/${$txId}`, 0)} target="${"_blank"}">${escape2($txId?.slice(0, 8))}...
        </a></span>
      <span><kbd>\u2713 Sealed</kbd><br><small class="${"svelte-11j8u0c"}">The verification nodes have verified the transaction, and the seal is
          included in the latest block.</small></span>
      <progress min="${"0"}" max="${"100"}" value="${"100"}" class="${"svelte-11j8u0c"}">Sealed!</progress>` : `${$transactionStatus === 5 ? `<span class="${"txId"}"><a${add_attribute("href", `https://testnet.flowscan.org/transaction/${$txId}`, 0)} target="${"_blank"}">${escape2($txId?.slice(0, 8))}...
        </a></span>
      <span><kbd>Expired</kbd><br><small class="${"svelte-11j8u0c"}">The transaction was submitted past its expiration block height.</small></span>` : `<span data-theme="${"invalid"}">Unexpected parameters were passed into the transaction.</span>`}`}`}`}`}`}
    </article>` : ``}`;
    });
    css$13 = {
      code: "article.svelte-11j8u0c{padding:1rem}progress.svelte-11j8u0c{margin-top:1em}small.svelte-11j8u0c{opacity:0.8}",
      map: null
    };
    TxMockUp = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $transactionInProgress, $$unsubscribe_transactionInProgress;
      let $transactionStatus, $$unsubscribe_transactionStatus;
      let $txId, $$unsubscribe_txId;
      $$unsubscribe_transactionInProgress = subscribe(transactionInProgress2, (value) => $transactionInProgress = value);
      $$unsubscribe_transactionStatus = subscribe(transactionStatus2, (value) => $transactionStatus = value);
      $$unsubscribe_txId = subscribe(txId2, (value) => $txId = value);
      $$result.css.add(css$13);
      $$unsubscribe_transactionInProgress();
      $$unsubscribe_transactionStatus();
      $$unsubscribe_txId();
      return `${$transactionInProgress ? `<article class="${"accent-border " + escape2($transactionStatus == 99 ? "error" : null) + " svelte-11j8u0c"}">Transaction status:
    ${$transactionStatus < 0 ? `<span><kbd>Initializing</kbd><br><small class="${"svelte-11j8u0c"}">Waiting for transaction approval.</small></span>
      <progress indeterminate class="${"svelte-11j8u0c"}">Initializing...</progress>` : `${$transactionStatus < 2 ? `<span class="${"txId"}"><a${add_attribute("href", `https://testnet.flowscan.org/transaction/${$txId}`, 0)} target="${"_blank"}">${escape2($txId?.slice(0, 8))}...
        </a></span>
      <span><kbd>Pending</kbd><br><small class="${"svelte-11j8u0c"}">The transaction has been received by a collector but not yet
          finalized in a block.</small></span>
      <progress indeterminate class="${"svelte-11j8u0c"}">Executing</progress>` : `${$transactionStatus === 2 ? `<span class="${"txId"}"><a${add_attribute("href", `https://testnet.flowscan.org/transaction/${$txId}`, 0)} target="${"_blank"}">${escape2($txId?.slice(0, 8))}...
        </a></span>
      <span><kbd>Finalized</kbd><br><small class="${"svelte-11j8u0c"}">The consensus nodes have finalized the block that the transaction is
          included in.</small></span>
      <progress min="${"0"}" max="${"100"}" value="${"80"}" class="${"svelte-11j8u0c"}">Executing...</progress>` : `${$transactionStatus === 3 ? `<span class="${"txId"}"><a${add_attribute("href", `https://testnet.flowscan.org/transaction/${$txId}`, 0)} target="${"_blank"}">${escape2($txId?.slice(0, 8))}...
        </a></span>
      <span><kbd>Executed</kbd><br><small class="${"svelte-11j8u0c"}">The execution nodes have produced a result for the transaction.</small></span>
      <progress min="${"0"}" max="${"100"}" value="${"80"}" class="${"svelte-11j8u0c"}">Sealing...</progress>` : `${$transactionStatus === 4 ? `<span class="${"txId"}"><a${add_attribute("href", `https://testnet.flowscan.org/transaction/${$txId}`, 0)} target="${"_blank"}">${escape2($txId?.slice(0, 8))}...
        </a></span>
      <span><kbd>\u2713 Sealed</kbd><br><small class="${"svelte-11j8u0c"}">The verification nodes have verified the transaction, and the seal is
          included in the latest block.</small></span>
      <progress min="${"0"}" max="${"100"}" value="${"100"}" class="${"svelte-11j8u0c"}">Sealed!</progress>` : `${$transactionStatus === 5 ? `<span class="${"txId"}"><a${add_attribute("href", `https://testnet.flowscan.org/transaction/${$txId}`, 0)} target="${"_blank"}">${escape2($txId?.slice(0, 8))}...
        </a></span>
      <span><kbd>Expired</kbd><br><small class="${"svelte-11j8u0c"}">The transaction was submitted past its expiration block height.</small></span>` : `<span data-theme="${"invalid"}">Unexpected parameters were passed into the transaction.</span>`}`}`}`}`}`}
    </article>` : ``}`;
    });
    css3 = {
      code: ".graffle.svelte-j5rx0t.svelte-j5rx0t{position:relative;display:flex;justify-content:center;align-items:center}img.graffle.svelte-j5rx0t.svelte-j5rx0t{position:relative;top:-5px;width:100px;height:auto;margin-left:5px}footer.svelte-j5rx0t.svelte-j5rx0t{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;padding:10px}p.svelte-j5rx0t.svelte-j5rx0t{font-size:0.7rem}footer.svelte-j5rx0t a.svelte-j5rx0t{font-weight:bold}@media(min-width: 480px){footer.svelte-j5rx0t.svelte-j5rx0t{padding:10px 0}}",
      map: null
    };
    _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value) => $page = value);
      $$result.css.add(css3);
      $$unsubscribe_page();
      return `${validate_component(MediaQuery, "MediaQuery").$$render($$result, { query: "(min-width: 1281px)" }, {}, {
        default: ({ matches }) => {
          return `${matches ? `${validate_component(Header, "Header").$$render($$result, { screenSize: "desktop" }, {}, {})}` : ``}`;
        }
      })}
${validate_component(MediaQuery, "MediaQuery").$$render($$result, {
        query: "(min-width: 481px) and (max-width: 1280px)"
      }, {}, {
        default: ({ matches }) => {
          return `${matches ? `${validate_component(Header, "Header").$$render($$result, { screenSize: "tablet" }, {}, {})}` : ``}`;
        }
      })}
${validate_component(MediaQuery, "MediaQuery").$$render($$result, { query: "(max-width: 480px)" }, {}, {
        default: ({ matches }) => {
          return `${matches ? `${validate_component(Header, "Header").$$render($$result, { screenSize: "mobile" }, {}, {})}` : ``}`;
        }
      })}

 
<main class="${"container"}">${validate_component(Drawer, "Drawer").$$render($$result, {}, {}, {})}
  ${slots.default ? slots.default({}) : ``}
  ${validate_component(Transaction, "Transaction").$$render($$result, {}, {}, {})}
  ${validate_component(TxMockUp, "TxMockUp").$$render($$result, {}, {}, {})}</main>

<footer class="${"svelte-j5rx0t"}">${$page.path === "/live" ? `<small class="${"graffle svelte-j5rx0t"}">Live claiming feed powered by
      <a href="${"https://graffle.io"}" target="${"_blank"}" class="${"svelte-j5rx0t"}"><img class="${"graffle svelte-j5rx0t"}" src="${"/graffle-logo.png"}" alt="${"Graffle logo"}"></a></small>` : ``}
  <p class="${"svelte-j5rx0t"}"><small>Created by
      <a href="${"https://discord.gg/emeraldcity"}" target="${"_blank"}" class="${"svelte-j5rx0t"}">Emerald City DAO</a>
      <br>
      <span class="${"contribute"}">Contribute on
        <a href="${"https://github.com/muttoni/float"}" target="${"_blank"}" class="${"svelte-j5rx0t"}"><svg width="${"16"}" height="${"16"}" viewBox="${"0 0 1024 1024"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}"><path fill-rule="${"evenodd"}" clip-rule="${"evenodd"}" d="${"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z"}" transform="${"scale(64)"}" fill="${"currentColor"}"></path></svg> Github
        </a></span></small></p>
</footer>`;
    });
  }
});

// .svelte-kit/output/server/chunks/__error-ab13613c.js
var error_ab13613c_exports = {};
__export(error_ab13613c_exports, {
  default: () => _error,
  load: () => load
});
function load({ error: error2, status }) {
  return {
    props: { title: `${status}: ${error2.message}` }
  };
}
var _error;
var init_error_ab13613c = __esm({
  ".svelte-kit/output/server/chunks/__error-ab13613c.js"() {
    init_shims();
    init_app_0013ff75();
    init_ssr();
    _error = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { title } = $$props;
      if ($$props.title === void 0 && $$bindings.title && title !== void 0)
        $$bindings.title(title);
      return `<h1>Error ${escape2(title)}</h1>`;
    });
  }
});

// .svelte-kit/output/server/chunks/whitelists-76275c80.js
var whitelists_76275c80_exports = {};
__export(whitelists_76275c80_exports, {
  C: () => CreateProject,
  W: () => Whitelists,
  w: () => whitelists
});
var css$14, CreateProject, css4, ProjectsComponent, Whitelists, whitelists;
var init_whitelists_76275c80 = __esm({
  ".svelte-kit/output/server/chunks/whitelists-76275c80.js"() {
    init_shims();
    init_app_0013ff75();
    init_index_b0a82c49();
    init_stores_91c44e17();
    init_MediaQuery_872353f6();
    css$14 = {
      code: "a.svelte-183ike1{text-decoration:none}.project-card.svelte-183ike1{border-radius:12px;background-color:#252E37;height:var(--height);width:100%}.project-card.svelte-183ike1:hover{background-color:rgba(152, 189, 182, 0.1);cursor:pointer}",
      map: null
    };
    CreateProject = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { mobile } = $$props;
      if ($$props.mobile === void 0 && $$bindings.mobile && mobile !== void 0)
        $$bindings.mobile(mobile);
      $$result.css.add(css$14);
      return `<a href="${"/create"}" class="${"svelte-183ike1"}"><div style="${"--height:" + escape2(mobile ? "14rem" : "15rem")}" class="${"card project-card flex-align svelte-183ike1"}">${validate_component(Icon, "Icon").$$render($$result, {
        icon: "ant-design:plus-circle-outlined",
        height: "3.6rem",
        color: "lightgrey"
      }, {}, {})}
            <div><h1>Add Whitelist
                </h1></div></div>
            </a>`;
    });
    css4 = {
      code: '.image-title-container.svelte-17i39ox{display:flex;flex-direction:column;justify-content:flex-end;height:60%;border-top-left-radius:12px;border-top-right-radius:12px;width:100%;background-image:linear-gradient(to bottom, rgba(245, 246, 252, 0.2), rgba(20, 18, 20, 0.6), rgba(20, 18, 20, 0.9)),\n    url("https://images.squarespace-cdn.com/content/v1/61646635d8111916a92d2d0e/e7e84db0-2082-4269-bec7-aa07bd337714/ballerz.gif");background-size:cover;padding-left:0.5rem}.description-container.svelte-17i39ox{height:30%;font-size:small;padding-left:0.5rem;padding-right:0.5rem;padding-top:0.5rem;color:whitesmoke}footer.svelte-17i39ox{height:10%;display:flex;width:100%;justify-content:space-between;align-items:center;font-size:0.6rem;font-weight:900;padding-left:0.5rem;padding-right:0.5rem;margin:0\n\n}.projects-container.svelte-17i39ox{display:flex;justify-content:space-between;flex-wrap:wrap;max-width:100%;width:100%}a.svelte-17i39ox{text-decoration:none;margin:0;padding:0;width:var(--width)\n}.project-card.svelte-17i39ox{border-radius:12px;background-color:#252e37;height:var(--height);width:100%;text-align:left;padding-bottom:0;padding-top:0}.project-card.svelte-17i39ox:hover{background-color:rgba(152, 189, 182, 0.1);cursor:pointer}',
      map: null
    };
    ProjectsComponent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $user, $$unsubscribe_user;
      $$unsubscribe_user = subscribe(user, (value) => $user = value);
      let { joined } = $$props;
      let { whitelists: whitelists2 } = $$props;
      console.log("component whitelist", whitelists2);
      let { screenSize } = $$props;
      let mobile = screenSize === "mobile";
      if ($$props.joined === void 0 && $$bindings.joined && joined !== void 0)
        $$bindings.joined(joined);
      if ($$props.whitelists === void 0 && $$bindings.whitelists && whitelists2 !== void 0)
        $$bindings.whitelists(whitelists2);
      if ($$props.screenSize === void 0 && $$bindings.screenSize && screenSize !== void 0)
        $$bindings.screenSize(screenSize);
      $$result.css.add(css4);
      $$unsubscribe_user();
      return `<div class="${"projects-container svelte-17i39ox"}" style="${"--width:" + escape2(mobile ? "48%" : "32%")}">${!joined ? `<a class="${"svelte-17i39ox"}">${validate_component(CreateProject, "CreateProject").$$render($$result, { mobile }, {}, {})}</a>` : ``}
    
    ${each(whitelists2, (whitelist, i2) => {
        return `<a${add_attribute("href", $user?.addr + "/" + whitelist.variables.whitelistId, 0)} class="${"svelte-17i39ox"}"><div style="${"--height:" + escape2(mobile ? "14rem" : "15rem") + "; padding-left:0; padding-right:0"}" class="${"card project-card svelte-17i39ox"}"><div class="${"image-title-container svelte-17i39ox"}"><h1>${escape2(whitelist.variables.name)}
                </h1></div>
            <div class="${"description-container svelte-17i39ox"}">${escape2(whitelist.variables.description)}</div>
            <footer class="${"svelte-17i39ox"}"><span>ENTRIES: ${escape2(whitelist.variables.totalCount)}</span>
                <span>09/04/22
                </span>
            </footer></div>
    </a>`;
      })}
    
</div>`;
    });
    Whitelists = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { joined = false } = $$props;
      let { whitelists: whitelists2 } = $$props;
      console.log("wl3", whitelists2);
      if ($$props.joined === void 0 && $$bindings.joined && joined !== void 0)
        $$bindings.joined(joined);
      if ($$props.whitelists === void 0 && $$bindings.whitelists && whitelists2 !== void 0)
        $$bindings.whitelists(whitelists2);
      return `${$$result.head += `${$$result.title = `<title>Whitelists</title>`, ""}`, ""}
    <div class="${"card-container"}"></div>
    <div style="${"display: flex;"}">${validate_component(MediaQuery, "MediaQuery").$$render($$result, { query: "(min-width: 1281px)" }, {}, {
        default: ({ matches }) => {
          return `${matches ? `${validate_component(ProjectsComponent, "ProjectsComponent").$$render($$result, {
            joined,
            whitelists: whitelists2,
            screenSize: "desktop"
          }, {}, {})}` : ``}`;
        }
      })}
          ${validate_component(MediaQuery, "MediaQuery").$$render($$result, {
        query: "(min-width: 481px) and (max-width: 1280px)"
      }, {}, {
        default: ({ matches }) => {
          return `${matches ? `${validate_component(ProjectsComponent, "ProjectsComponent").$$render($$result, { joined, whitelists: whitelists2, screenSize: "tablet" }, {}, {})}` : ``}`;
        }
      })}
          ${validate_component(MediaQuery, "MediaQuery").$$render($$result, { query: "(max-width: 480px)" }, {}, {
        default: ({ matches }) => {
          return `${matches ? `${validate_component(ProjectsComponent, "ProjectsComponent").$$render($$result, { joined, whitelists: whitelists2, screenSize: "mobile" }, {}, {})}` : ``}`;
        }
      })}
           
    </div>`;
    });
    whitelists = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      [Symbol.toStringTag]: "Module",
      "default": Whitelists
    });
  }
});

// .svelte-kit/output/server/chunks/constants-c91b3f75.js
var import_onflow_fcl_esm4, Divider, DrawerComponent, PAGE_TITLE_EXTENSION;
var init_constants_c91b3f75 = __esm({
  ".svelte-kit/output/server/chunks/constants-c91b3f75.js"() {
    init_shims();
    init_app_0013ff75();
    init_Drawer_7bac58aa();
    import_onflow_fcl_esm4 = __toModule(require_fcl_cjs());
    init_index_b0a82c49();
    init_stores_91c44e17();
    init_stores_14403ff2();
    init_stores_c1e7c577();
    Divider = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `<div class="${"mt-1"}" style="${"width: 1rem; height:2px; background: var(--primary)"}"></div>`;
    });
    DrawerComponent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_drawer;
      let $$unsubscribe_page;
      let $user, $$unsubscribe_user;
      $$unsubscribe_drawer = subscribe(drawer, (value) => value);
      $$unsubscribe_page = subscribe(page, (value) => value);
      $$unsubscribe_user = subscribe(user, (value) => $user = value);
      `/${$user?.addr}/whitelists`;
      let drawerVal;
      drawer.subscribe((val) => {
        drawerVal = val;
      });
      let open = true;
      drawer.subscribe((val) => {
        drawerVal = val;
        open = drawerVal.opened;
      });
      $$unsubscribe_drawer();
      $$unsubscribe_page();
      $$unsubscribe_user();
      return `${validate_component(Drawer, "Drawer").$$render($$result, { open, size: "100%", placement: "right" }, {}, {
        default: () => {
          return `<nav style="${"display: flex; width:100%; justify-content:end"}" class="${"container"}">
          
            <div class="${"flex-align"}" style="${"height:4rem; width:3rem; margin-right:0rem"}">${validate_component(Hamburger, "Hamburger").$$render($$result, {}, {}, {})}</div></nav>
                  <article class="${"flex-align"}" style="${"display: flex; flex-direction:column"}">${$user?.loggedIn ? `<button class="${"outline"}">${validate_component(UserAddress, "UserAddress").$$render($$result, {
            address: $user?.addr || "0x0",
            abbreviated: true
          }, {}, {})}</button>` : `${validate_component(ConnectWallet, "ConnectWallet").$$render($$result, {}, {}, {})}`}
        ${validate_component(Divider, "Divider").$$render($$result, {}, {}, {})}
        <div class="${"mt-1"}">
            <a>Your Whitelists</a></div></article>`;
        }
      })}`;
    });
    PAGE_TITLE_EXTENSION = "| FLOAT by Emerald City DAO";
  }
});

// .svelte-kit/output/server/chunks/actions-ef80cda2.js
var fcl, getWhitelists, getWhitelist;
var init_actions_ef80cda2 = __esm({
  ".svelte-kit/output/server/chunks/actions-ef80cda2.js"() {
    init_shims();
    fcl = __toModule(require_fcl_cjs());
    init_stores_c1e7c577();
    init_app_0013ff75();
    getWhitelists = async (addr) => {
      try {
        let queryResult = await fcl.query({
          cadence: `
      import Gateway from 0xGateway

      pub fun main(account: Address): {String: Whitelist} {
        let registry = getAccount(account).getCapability(Gateway.RegistryPublicPath)
                                    .borrow<&Gateway.Registry{Gateway.RegistryPublic}>()
                                    ?? panic("Could not borrow the Public Registry from the account.")
        let whitelists: [UInt64] = registry.getIDs()
        let returnVal: {String: Whitelist} = {}
      
        for whitelistId in whitelists {
          let event = registry.borrowPublicWhitelistRef(whitelistId: whitelistId)
          let whitelist = Whitelist(_variables: event, _modules: event.getModules())
          returnVal[event.name] = whitelist
        }
        return returnVal
      }
      
      pub struct Whitelist {
        pub let variables: &Gateway.Whitelist{Gateway.WhitelistPublic}
        pub var modules: {String: [{Gateway.IModule}]}
      
        init(_variables: &Gateway.Whitelist{Gateway.WhitelistPublic}, _modules: [{Gateway.IModule}]) {
          self.variables = _variables
          self.modules = {}
          
          for module in _modules {
            let identifier = module.getType().identifier
            if self.modules[identifier] == nil {
              self.modules[identifier] = [module]
            } else {
              self.modules[identifier]!.append(module)
            }
          }
        }
      }
      `,
          args: (arg, t2) => [
            arg(addr, t2.Address)
          ]
        });
        return queryResult || {};
      } catch (e3) {
        console.log(e3);
      }
    };
    getWhitelist = async (addr, whitelistId) => {
      try {
        let queryResult = await fcl.query({
          cadence: `
      import Gateway from 0xGateway

      pub fun main(account: Address, whitelistId: UInt64): Whitelist {
        let registry = getAccount(account).getCapability(Gateway.RegistryPublicPath)
                                    .borrow<&Gateway.Registry{Gateway.RegistryPublic}>()
                                    ?? panic("Could not borrow the Public Registry from the account.")

        let event = registry.borrowPublicWhitelistRef(whitelistId: whitelistId)
        let whitelist = Whitelist(_variables: event, _modules: event.getModules())
        return whitelist
      }

      pub struct Whitelist {
        pub let variables: &Gateway.Whitelist{Gateway.WhitelistPublic}
        pub var modules: {String: [{Gateway.IModule}]}

        init(_variables: &Gateway.Whitelist{Gateway.WhitelistPublic}, _modules: [{Gateway.IModule}]) {
          self.variables = _variables
          self.modules = {}
          
          for module in _modules {
            let identifier = module.getType().identifier
            if self.modules[identifier] == nil {
              self.modules[identifier] = [module]
            } else {
              self.modules[identifier]!.append(module)
            }
          }
        }
      }
      `,
          args: (arg, t2) => [
            arg(addr, t2.Address),
            arg(parseInt(whitelistId), t2.UInt64)
          ]
        });
        return queryResult || {};
      } catch (e3) {
        console.log(e3);
      }
    };
  }
});

// .svelte-kit/output/server/chunks/index-253d4d4b.js
var index_253d4d4b_exports = {};
__export(index_253d4d4b_exports, {
  default: () => Routes
});
var import_onflow_fcl_esm5, globalLabels$2, Search, css$24, globalLabels$1, Pagination, css$15, globalLabels, Table, pageCount$1, pageSize$1, YourWhitelists, Loading, pageCount, pageSize, JoinedWhitelists, css5, Routes;
var init_index_253d4d4b = __esm({
  ".svelte-kit/output/server/chunks/index-253d4d4b.js"() {
    init_shims();
    init_app_0013ff75();
    import_onflow_fcl_esm5 = __toModule(require_fcl_cjs());
    init_stores_c1e7c577();
    init_index_b0a82c49();
    init_whitelists_76275c80();
    init_constants_c91b3f75();
    init_stores_91c44e17();
    init_actions_ef80cda2();
    init_Drawer_7bac58aa();
    init_stores_14403ff2();
    init_ssr();
    init_MediaQuery_872353f6();
    Search = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      createEventDispatcher();
      getContext("state");
      let { filter = (w, text2, index2) => {
        const name = w.variables.name;
        text2 = text2.toLowerCase();
        const matches = name.indexOf(text2) > -1;
        return matches;
      } } = $$props;
      let { index = -1 } = $$props;
      let { text = "" } = $$props;
      let { labels = { placeholder: "Search", ...globalLabels$2 } } = $$props;
      if ($$props.filter === void 0 && $$bindings.filter && filter !== void 0)
        $$bindings.filter(filter);
      if ($$props.index === void 0 && $$bindings.index && index !== void 0)
        $$bindings.index(index);
      if ($$props.text === void 0 && $$bindings.text && text !== void 0)
        $$bindings.text(text);
      if ($$props.labels === void 0 && $$bindings.labels && labels !== void 0)
        $$bindings.labels(labels);
      return `

<div class="${"search"}"><input type="${"search"}"${add_attribute("title", labels.placeholder, 0)}${add_attribute("placeholder", labels.placeholder, 0)}${add_attribute("value", text, 0)}></div>`;
    });
    css$24 = {
      code: "div.svelte-1j1cxhu{display:flex}button.svelte-1j1cxhu{margin-left:5px;font-size:0.8rem;padding:0.5rem 0.5rem}",
      map: null
    };
    Pagination = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let pageCount2;
      createEventDispatcher();
      getContext("state");
      let { complete = true } = $$props;
      let { buttons = [-2, -1, 0, 1, 2] } = $$props;
      let { count: count2 } = $$props;
      let { page: page2 = 0 } = $$props;
      let { pageSize: pageSize2 } = $$props;
      let { serverSide = false } = $$props;
      let { labels = {
        first: "\u21E4",
        last: "\u21E5",
        next: "\u2192",
        previous: "\u2190",
        ...globalLabels$1
      } } = $$props;
      if ($$props.complete === void 0 && $$bindings.complete && complete !== void 0)
        $$bindings.complete(complete);
      if ($$props.buttons === void 0 && $$bindings.buttons && buttons !== void 0)
        $$bindings.buttons(buttons);
      if ($$props.count === void 0 && $$bindings.count && count2 !== void 0)
        $$bindings.count(count2);
      if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
        $$bindings.page(page2);
      if ($$props.pageSize === void 0 && $$bindings.pageSize && pageSize2 !== void 0)
        $$bindings.pageSize(pageSize2);
      if ($$props.serverSide === void 0 && $$bindings.serverSide && serverSide !== void 0)
        $$bindings.serverSide(serverSide);
      if ($$props.labels === void 0 && $$bindings.labels && labels !== void 0)
        $$bindings.labels(labels);
      $$result.css.add(css$24);
      pageCount2 = Math.floor(count2 / pageSize2);
      return `<div class="${"svelte-1j1cxhu"}">${complete ? `<button class="${"outline svelte-1j1cxhu"}" ${page2 === 0 ? "disabled" : ""}>${escape2(labels.first)}</button>` : ``}

    <button class="${"outline svelte-1j1cxhu"}" ${page2 === 0 ? "disabled" : ""}>${escape2(labels.previous)}</button>
  ${complete ? `${each(buttons, (button) => {
        return `${page2 + button >= 0 && page2 + button <= pageCount2 ? `<button class="${["svelte-1j1cxhu", page2 !== page2 + button ? "outline" : ""].join(" ").trim()}">${escape2(page2 + button + 1)}
        </button>` : ``}`;
      })}` : ``}
    <button class="${"outline svelte-1j1cxhu"}" ${page2 > pageCount2 - 1 ? "disabled" : ""}>${escape2(labels.next)}</button>

  ${complete ? `<button class="${"outline svelte-1j1cxhu"}" ${page2 >= pageCount2 ? "disabled" : ""}>${escape2(labels.last)}</button>` : ``}</div>`;
    });
    css$15 = {
      code: ".table.svelte-s34j0i{width:100%;border-collapse:collapse}.table.svelte-s34j0i th,.table.svelte-s34j0i td{position:relative}",
      map: null
    };
    Table = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let filteredWhitelists;
      let visibleWhitelists;
      createEventDispatcher();
      let { loading = false } = $$props;
      let { page: page2 = 0 } = $$props;
      let { pageIndex = 0 } = $$props;
      let { pageSize: pageSize2 = 2 } = $$props;
      let { responsive = true } = $$props;
      let { whitelists: whitelists2 } = $$props;
      let { serverSide = false } = $$props;
      let { labels = {
        empty: "No records available",
        loading: "Loading data",
        ...globalLabels
      } } = $$props;
      setContext("state", {
        getState: () => ({
          page: page2,
          pageIndex,
          pageSize: pageSize2,
          whitelists: whitelists2,
          filteredWhitelists
        }),
        setPage: (_page, _pageIndex) => {
          page2 = _page;
          pageIndex = _pageIndex;
        },
        setWhitelists: (_whitelists) => filteredWhitelists = _whitelists
      });
      if ($$props.loading === void 0 && $$bindings.loading && loading !== void 0)
        $$bindings.loading(loading);
      if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
        $$bindings.page(page2);
      if ($$props.pageIndex === void 0 && $$bindings.pageIndex && pageIndex !== void 0)
        $$bindings.pageIndex(pageIndex);
      if ($$props.pageSize === void 0 && $$bindings.pageSize && pageSize2 !== void 0)
        $$bindings.pageSize(pageSize2);
      if ($$props.responsive === void 0 && $$bindings.responsive && responsive !== void 0)
        $$bindings.responsive(responsive);
      if ($$props.whitelists === void 0 && $$bindings.whitelists && whitelists2 !== void 0)
        $$bindings.whitelists(whitelists2);
      if ($$props.serverSide === void 0 && $$bindings.serverSide && serverSide !== void 0)
        $$bindings.serverSide(serverSide);
      if ($$props.labels === void 0 && $$bindings.labels && labels !== void 0)
        $$bindings.labels(labels);
      $$result.css.add(css$15);
      filteredWhitelists = whitelists2;
      visibleWhitelists = filteredWhitelists.slice(pageIndex, pageIndex + pageSize2);
      return `${slots.top ? slots.top({ whitelists: visibleWhitelists }) : `
  <div class="${"slot-top"}">${validate_component(Search || missing_component, "svelte:component").$$render($$result, {}, {}, {})}</div>
`}

<table class="${[
        escape2(null_to_empty("table " + $$props.class)) + " svelte-s34j0i",
        responsive ? "responsive" : ""
      ].join(" ").trim()}">${slots.head ? slots.head({ whitelists: visibleWhitelists }) : ``}
  ${loading ? `<tbody><tr><td class="${"center"}" colspan="${"100%"}"><span><!-- HTML_TAG_START -->${labels.loading}<!-- HTML_TAG_END --></span></td></tr></tbody>` : `${visibleWhitelists.length === 0 ? `<tbody><tr><td class="${"center"}" colspan="${"100%"}"><span>empty
            <!-- HTML_TAG_START -->${labels.empty}<!-- HTML_TAG_END --></span></td></tr></tbody>` : `${slots.default ? slots.default({ whitelists: visibleWhitelists }) : ``}`}`}
  ${slots.foot ? slots.foot({ whitelists: visibleWhitelists }) : ``}</table>

${slots.bottom ? slots.bottom({ whitelists: visibleWhitelists }) : `
  <div class="${"slot-bottom"}">${validate_component(Pagination || missing_component, "svelte:component").$$render($$result, {
        page: page2,
        pageSize: pageSize2,
        serverSide,
        count: filteredWhitelists.length - 1
      }, {}, {})}</div>
`}`;
    });
    pageCount$1 = 0;
    pageSize$1 = 5;
    YourWhitelists = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { whitelists: whitelists2 } = $$props;
      console.log("whitelists2", whitelists2);
      if ($$props.whitelists === void 0 && $$bindings.whitelists && whitelists2 !== void 0)
        $$bindings.whitelists(whitelists2);
      return `${validate_component(Table, "Table").$$render($$result, {
        pageCount: pageCount$1,
        pageSize: pageSize$1,
        whitelists: whitelists2,
        labels: {
          empty: "This account has not created any whitelists.",
          loading: "Loading whitelists..."
        }
      }, {}, {
        default: ({ whitelists: whitelists22 }) => {
          return `${validate_component(Whitelists, "Projects").$$render($$result, { whitelists: whitelists22 }, {}, {})}`;
        }
      })}`;
    });
    Loading = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `<article aria-busy="${"true"}"></article>`;
    });
    pageCount = 0;
    pageSize = 5;
    JoinedWhitelists = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { whitelists: whitelists2 } = $$props;
      console.log("joined whitelists", whitelists2);
      if ($$props.whitelists === void 0 && $$bindings.whitelists && whitelists2 !== void 0)
        $$bindings.whitelists(whitelists2);
      return `${validate_component(Table, "Table").$$render($$result, {
        pageCount,
        pageSize,
        whitelists: whitelists2,
        labels: {
          empty: "This account has not created any whitelists.",
          loading: "Loading whitelists..."
        }
      }, {}, {
        default: ({ whitelists: whitelists22 }) => {
          return `${validate_component(Whitelists, "Projects").$$render($$result, { joined: true, whitelists: whitelists22 }, {}, {})}`;
        }
      })}`;
    });
    css5 = {
      code: ".app.svelte-1835pr4 .drawer .panel{background:#11191F}li.svelte-1835pr4.svelte-1835pr4{margin-right:1rem}.animatedlink.svelte-1835pr4.svelte-1835pr4{display:inline-block;position:relative}.animatedlink.svelte-1835pr4.svelte-1835pr4:after{content:'';position:absolute;width:100%;transform:scaleX(0);height:2px;bottom:0;left:0;background-color:var(--primary);transform-origin:bottom right;transition:transform 0.25s ease-out}.animatedlink.svelte-1835pr4.svelte-1835pr4:hover:after{transform:scaleX(1);transform-origin:bottom left}.selected.svelte-1835pr4.svelte-1835pr4{color:var(--primary);border-bottom:2px solid var(--primary)}.tabs.svelte-1835pr4.svelte-1835pr4{display:flex;justify-content:space-around}.tabs.svelte-1835pr4 li.svelte-1835pr4{list-style-type:none;font-size:18px;text-transform:uppercase;font-weight:bold;cursor:pointer}.tabs.svelte-1835pr4 li.selected.svelte-1835pr4{cursor:default}@media screen and (max-width: 767px){.tabs.svelte-1835pr4.svelte-1835pr4{margin:0px}.tabs.svelte-1835pr4 li.svelte-1835pr4{font-size:15px}}",
      map: null
    };
    Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let tab;
      let $page, $$unsubscribe_page;
      let $user, $$unsubscribe_user;
      let $joinedWhitelists, $$unsubscribe_joinedWhitelists;
      $$unsubscribe_page = subscribe(page, (value) => $page = value);
      $$unsubscribe_user = subscribe(user, (value) => $user = value);
      $$unsubscribe_joinedWhitelists = subscribe(joinedWhitelists, (value) => $joinedWhitelists = value);
      let borrowed = true;
      async function getAllWhitelists() {
        try {
          let whitelists22 = await getWhitelists($user?.addr);
          console.log("whitelists1", whitelists22);
          return Object.values(whitelists22);
        } catch (error2) {
          borrowed = false;
          console.log("err", error2);
        }
      }
      let whitelists2 = getAllWhitelists();
      new URLSearchParams($page.query.toString());
      $$result.css.add(css5);
      tab = $page.query.get("tab") || "created";
      $$unsubscribe_page();
      $$unsubscribe_user();
      $$unsubscribe_joinedWhitelists();
      return `${$$result.head += `${$$result.title = `<title>Home ${escape2(PAGE_TITLE_EXTENSION)}</title>`, ""}`, ""}


<article class="${"app svelte-1835pr4"}">${validate_component(DrawerComponent, "DrawerComponent").$$render($$result, {}, {}, {})}
   <ul class="${"tabs svelte-1835pr4"}"><li class="${[
        "svelte-1835pr4",
        (tab !== "created" ? "animatedlink" : "") + " " + (tab === "created" ? "selected" : "")
      ].join(" ").trim()}">Your Whitelists
    </li>
    <li class="${[
        "svelte-1835pr4",
        (tab !== "joined" ? "animatedlink" : "") + " " + (tab === "joined" ? "selected" : "")
      ].join(" ").trim()}">Joined Whitelists
    </li></ul>
  

  ${borrowed ? `${function(__value) {
        if (is_promise(__value)) {
          __value.then(null, noop3);
          return `
  ${validate_component(Loading, "Loading").$$render($$result, {}, {}, {})}
  `;
        }
        return function(whitelists22) {
          return `
  ${whitelists22 === null ? `nop` : `${tab === "created" ? `${validate_component(YourWhitelists, "YourWhitelists").$$render($$result, { whitelists: whitelists22 }, {}, {})}` : `${validate_component(JoinedWhitelists, "JoinedWhitelists").$$render($$result, { whitelists: $joinedWhitelists }, {}, {})}`}`}
  `;
        }(__value);
      }(whitelists2)}
     ` : `${validate_component(CreateProject, "CreateProject").$$render($$result, { mobile: false }, {}, {})}`}


  </article>`;
    });
  }
});

// .svelte-kit/output/server/chunks/projectDetails-e0be73da.js
var projectDetails_e0be73da_exports = {};
__export(projectDetails_e0be73da_exports, {
  default: () => ProjectDetails
});
var import_onflow_fcl_esm6, css6, ProjectDetails;
var init_projectDetails_e0be73da = __esm({
  ".svelte-kit/output/server/chunks/projectDetails-e0be73da.js"() {
    init_shims();
    init_app_0013ff75();
    init_stores_14403ff2();
    import_onflow_fcl_esm6 = __toModule(require_fcl_cjs());
    init_ssr();
    init_index_b0a82c49();
    css6 = {
      code: ".token-container.svelte-1v562r5{display:flex;width:var(--width);height:70%;justify-content:space-between;border-radius:50px;align-items:center;background-color:#252E37;font-weight:bold;margin-left:var(--margin-left)}.amount-container.svelte-1v562r5{color:#252E37;font-weight:bold;display:flex;height:2.6rem;width:36%;justify-content:center;align-items:center;background:white;border-top-right-radius:50px;border-bottom-right-radius:50px}",
      map: null
    };
    ProjectDetails = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let Tab1data;
      let Tokens;
      let Collections;
      let EmeraldIdVerif;
      let DiscordVerif;
      let TwitterVerif;
      tab1data.subscribe((val) => Tab1data = val);
      tokens.subscribe((val) => Tokens = val);
      collections.subscribe((val) => Collections = val);
      emeraldIdVerif.subscribe((val) => EmeraldIdVerif = val);
      discordVerif.subscribe((val) => DiscordVerif = val);
      twitterVerif.subscribe((val) => TwitterVerif = val);
      $$result.css.add(css6);
      return `${$$result.head += `${$$result.title = `<title>${escape2(Tab1data.name)} details</title>`, ""}`, ""}
    <article><h1>${escape2(Tab1data.name)}</h1>
        <p>${escape2(Tab1data.description)}</p>

        <h1>Tokens
        </h1>
        <div style="${"display: flex;"}" class="${"mt-1"}">${each(Tokens, ({ imgUrl, label, amount, selected, id }) => {
        return `${selected || true ? `<div style="${"--width:" + escape2("30%") + "; --margin-left:" + escape2(id === 0 ? "0rem" : "0.8rem")}" class="${escape2(null_to_empty("token-container")) + " svelte-1v562r5"}"><div style="${"display:flex; justify-content:space-between; align-items:center; width: 2.6rem; height:2.6rem; "}"><img style="${"height:100%; width:2.6rem; border-radius: 50px; object-fit:cover"}"${add_attribute("src", imgUrl, 0)} alt="${"logo"}"></div>
                <div style="${"margin-right: 1rem;"}">${escape2(label)}</div>
                <div class="${"amount-container svelte-1v562r5"}">${escape2(amount)}</div>
            </div>` : ``}`;
      })}</div>
        <h1>Collections
        </h1>
        <div class="${"mt-1"}">${each(Collections, (collection) => {
        return `${collection.selected || true ? `<div class="${"mt-1"}">${validate_component(CollectionComponent, "CollectionComponent").$$render($$result, Object.assign(collection), {}, {})}

            </div>` : ``}`;
      })}</div>

        <div class="${"mt-2"}" style="${"display: flex;"}"><h1>Verification</h1></div>
        <div class="${"mt-1"}">${EmeraldIdVerif.active || true ? `${validate_component(VerificationComponent, "VerificationComponent").$$render($$result, Object.assign(EmeraldIdVerif), {}, {})}` : ``}
            ${validate_component(VerticalSpace, "VerticalSpace").$$render($$result, { value: "0.8rem" }, {}, {})}
            ${DiscordVerif.active || true ? `${validate_component(VerificationComponent, "VerificationComponent").$$render($$result, Object.assign(DiscordVerif), {}, {})}` : ``}
            ${validate_component(VerticalSpace, "VerticalSpace").$$render($$result, { value: "0.8rem" }, {}, {})}
            ${TwitterVerif.active || true ? `${validate_component(VerificationComponent, "VerificationComponent").$$render($$result, Object.assign(TwitterVerif), {}, {})}` : ``}</div>

    </article>`;
    });
  }
});

// .svelte-kit/output/server/chunks/Dialog-dbbcc175.js
var AmountComponent, Icon_1, css$34, DiscordRolesComponent, css$25, DiscordServersComponent2, css$16, TwitterAccountsComponent2, css7, Dialog;
var init_Dialog_dbbcc175 = __esm({
  ".svelte-kit/output/server/chunks/Dialog-dbbcc175.js"() {
    init_shims();
    init_app_0013ff75();
    init_stores_14403ff2();
    init_index_b0a82c49();
    AmountComponent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $tokens, $$unsubscribe_tokens;
      $$unsubscribe_tokens = subscribe(tokens, (value) => $tokens = value);
      let { selectedVal } = $$props;
      let amountInput;
      let tokensVal;
      tokens.subscribe((val) => tokensVal = val);
      if ($$props.selectedVal === void 0 && $$bindings.selectedVal && selectedVal !== void 0)
        $$bindings.selectedVal(selectedVal);
      $$unsubscribe_tokens();
      return `<div style="${"width: 100%; height:70%; display:flex; flex-direction:column; justify-content:center; align-items:center"}"><div style="${"width:80%"}">
        ${tokensVal[selectedVal].amount === 0 ? `<input type="${"number"}"${add_attribute("placeholder", 0, 0)}${add_attribute("this", amountInput, 0)}>` : `<input type="${"number"}"${add_attribute("this", amountInput, 0)}${add_attribute("value", $tokens[selectedVal].amount, 0)}>`}</div>
</div>`;
    });
    Icon_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { height } = $$props;
      let { color } = $$props;
      let { icon } = $$props;
      if ($$props.height === void 0 && $$bindings.height && height !== void 0)
        $$bindings.height(height);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
        $$bindings.icon(icon);
      return `${validate_component(Icon, "Icon").$$render($$result, { icon, height, color }, {}, {})}`;
    });
    css$34 = {
      code: "button.svelte-bapbja{background-color:#5865F2;border-color:#5865F2;cursor:default}ul.svelte-bapbja{list-style-type:none;width:100%;margin-top:0.9rem;padding:0}.role-container.svelte-bapbja{display:flex;justify-content:space-between;align-items:center;width:100%;color:white;background-color:rgba(88, 101, 242, 0.1);border:none}.role-container.svelte-bapbja:hover{display:flex;justify-content:space-between;align-items:center;width:100%;background-color:rgba(88, 101, 242, 0.1);border:none}",
      map: null
    };
    DiscordRolesComponent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { roles } = $$props;
      if ($$props.roles === void 0 && $$bindings.roles && roles !== void 0)
        $$bindings.roles(roles);
      $$result.css.add(css$34);
      return `<div style="${"width: 100%; height:70%; display:flex; flex-direction:column; justify-content:center; align-items:center"}"><div style="${"width:80%"}"><ul class="${"mt-2 svelte-bapbja"}">${each(roles, (role, i2) => {
        return `<button class="${"role-container mt-1 svelte-bapbja"}"><div class="${"role"}">${escape2(role.label)}</div>
                    
                  
                </button>`;
      })}</ul></div>
    </div>`;
    });
    css$25 = {
      code: "button.svelte-1empe68{background-color:#5865F2;border-color:#5865F2}ul.svelte-1empe68{list-style-type:none;width:100%;margin-top:0.9rem;padding:0}.server-container.svelte-1empe68{display:flex;justify-content:space-between;align-items:center;width:100%;color:white}.server-container.svelte-1empe68:hover{display:flex;justify-content:space-between;align-items:center;width:100%;color:#5865F2;background-color:rgba(88, 101, 242, 0.1)}",
      map: null
    };
    DiscordServersComponent2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_tokens;
      $$unsubscribe_tokens = subscribe(tokens, (value) => value);
      createEventDispatcher();
      let { selectedVal } = $$props;
      let servers;
      let selectedServer;
      tokens.subscribe((val) => val);
      discordVerif.subscribe((val) => {
        servers = val.servers;
      });
      if ($$props.selectedVal === void 0 && $$bindings.selectedVal && selectedVal !== void 0)
        $$bindings.selectedVal(selectedVal);
      $$result.css.add(css$25);
      $$unsubscribe_tokens();
      return `<div style="${"width: 100%; height:84%; display:flex; flex-direction:column; overflow-y:auto; align-items:center"}"><div style="${"width:80%"}"><ul class="${"mt-2 svelte-1empe68"}">${each(servers, (server, i2) => {
        return `<button class="${"server-container mt-1 svelte-1empe68"}"><div class="${"server"}">${escape2(server.label)}</div>
                    <div>${validate_component(Icon_1, "Icon").$$render($$result, {
          icon: `fa6-solid:chevron-${selectedServer === i2 ? "up" : "down"}`,
          height: "1.4rem"
        }, {}, {})}
                    </div></button>
                
                
                ${server.roles.length > 0 && selectedServer === i2 ? `
                ${validate_component(DiscordRolesComponent, "DiscordRolesComponent").$$render($$result, { roles: server.roles }, {}, {})}` : ``}`;
      })}</ul></div>
    </div>`;
    });
    css$16 = {
      code: "button.svelte-gzn2ji{background-color:rgba(29 ,161, 242, 0.1);border:none;cursor:default}ul.svelte-gzn2ji{list-style-type:none;width:100%;margin-top:0.9rem;padding:0}.account-container.svelte-gzn2ji{display:flex;justify-content:space-between;align-items:center;width:100%;color:white}",
      map: null
    };
    TwitterAccountsComponent2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_tokens;
      $$unsubscribe_tokens = subscribe(tokens, (value) => value);
      let { selectedVal } = $$props;
      let accounts;
      tokens.subscribe((val) => val);
      twitterVerif.subscribe((val) => {
        accounts = val.accounts;
      });
      if ($$props.selectedVal === void 0 && $$bindings.selectedVal && selectedVal !== void 0)
        $$bindings.selectedVal(selectedVal);
      $$result.css.add(css$16);
      $$unsubscribe_tokens();
      return `<div style="${"width: 100%; height:70%; display:flex; flex-direction:column; overflow-y:auto; align-items:center"}"><div style="${"width:80%"}"><ul class="${"mt-2 svelte-gzn2ji"}">${each(accounts, (account, i2) => {
        return `<button class="${"account-container svelte-gzn2ji"}"><div class="${"account"}"><span style="${"color: #1DA1F2;"}">@</span> ${escape2(account.label)}</div>
            </button>`;
      })}</ul></div>
</div>`;
    });
    css7 = {
      code: "header.svelte-1blztiy{display:flex;flex-direction:row;width:100%;justify-content:space-between;align-items:center;padding-right:1rem;padding-left:2rem;border-bottom:0.5px solid var(--border-color)}footer.svelte-1blztiy{color:var(--border-color);display:flex;justify-content:flex-end;align-items:center;padding-right:2rem;width:100%;border-top:0.5px solid var(--border-color)}#background.svelte-1blztiy{display:var(--display);position:fixed;z-index:1;top:0;left:0;width:100vw;height:100vh;background-color:rgba(0, 0, 0, 0.7)}#dialog.svelte-1blztiy{display:var(--display);position:fixed;z-index:2;top:50%;left:50%;transform:translate(-50%, -50%);background:#141e26;height:var(--height);width:var(--width);border-radius:20px;border:2px solid var(--border-color)}",
      map: null
    };
    Dialog = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_tokens;
      let $$unsubscribe_dialog;
      $$unsubscribe_tokens = subscribe(tokens, (value) => value);
      $$unsubscribe_dialog = subscribe(dialog, (value) => value);
      let dialogValue;
      let selectedVal;
      let { mobile } = $$props;
      const width = mobile ? "80%" : "42%";
      const height = mobile ? "32%" : "46%";
      const bodyHeight = mobile ? "60%" : "64%";
      const headerHeight = mobile ? "20%" : "16%";
      const footerHeight = mobile ? "20%" : "20%";
      let borderColor;
      dialog.subscribe((val) => {
        dialogValue = val;
        if (dialogValue.title === "Discord Servers") {
          borderColor = "#5865F2";
        } else if (dialogValue.title === "Twitter Accounts") {
          borderColor = "#1DA1F2";
        } else {
          borderColor = "var(--primary)";
        }
      });
      tokens.subscribe((val) => val);
      selectedToken.subscribe((val) => selectedVal = val);
      activeTabVal.subscribe((val) => val);
      if ($$props.mobile === void 0 && $$bindings.mobile && mobile !== void 0)
        $$bindings.mobile(mobile);
      $$result.css.add(css7);
      $$unsubscribe_tokens();
      $$unsubscribe_dialog();
      return `<div id="${"background"}" style="${"--display: " + escape2(dialogValue.opened ? "block" : "none")}" class="${"svelte-1blztiy"}"></div>
    <main id="${"dialog"}" style="${"--display: " + escape2(dialogValue.opened ? "block" : "none") + "; --border-color:" + escape2(borderColor) + "; --width:" + escape2(width) + "; --height:" + escape2(height)}" class="${"svelte-1blztiy"}"><header style="${"height: " + escape2(headerHeight) + ";"}" class="${"svelte-1blztiy"}"><div><h3>${escape2(dialogValue.title)}</h3></div>
            <div><div>${validate_component(Icon, "Icon").$$render($$result, {
        icon: "ant-design:close-circle-outlined",
        height: "1.4rem",
        color: "lightgrey"
      }, {}, {})}</div></div></header>
                       <div style="${"height: " + escape2(bodyHeight) + ";"}">${dialogValue.title === "Discord Servers" ? `${validate_component(DiscordServersComponent2, "DiscordServersComponent").$$render($$result, {}, {}, {})}` : `${dialogValue.title === "Twitter Accounts" ? `${validate_component(TwitterAccountsComponent2, "TwitterAccountsComponent").$$render($$result, {}, {}, {})}` : `${validate_component(AmountComponent, "AmountComponent").$$render($$result, { selectedVal }, {}, {})}`}`}</div>
                       

                       
                        <div style="${"width:80%"}"></div>

                    ${dialogValue.title === "Token Amount" ? `<footer class="${"flex-align svelte-1blztiy"}" style="${"height: " + escape2(footerHeight) + ";"}"><div style="${"cursor: pointer;"}">SAVE
                        </div></footer>` : ``}
                     
                        </main>`;
    });
  }
});

// .svelte-kit/output/server/chunks/create-ef500858.js
var create_ef500858_exports = {};
__export(create_ef500858_exports, {
  default: () => Create
});
var import_onflow_fcl_esm7, css$52, LocalRolesComponent, css$42, ServerRolesComponent, DiscordRoles, css$35, DiscordVerifContent, CustomTokenContent, css$26, TwitterVerifContent, css$17, Modal_1, EmeraldIdIcon, css8, CreateProjectDetails, Create;
var init_create_ef500858 = __esm({
  ".svelte-kit/output/server/chunks/create-ef500858.js"() {
    init_shims();
    init_app_0013ff75();
    init_index_b0a82c49();
    init_stores_14403ff2();
    init_Dialog_dbbcc175();
    import_onflow_fcl_esm7 = __toModule(require_fcl_cjs());
    init_stores_c1e7c577();
    init_constants_c91b3f75();
    init_MediaQuery_872353f6();
    init_ssr();
    init_Drawer_7bac58aa();
    init_stores_91c44e17();
    css$52 = {
      code: ".icon-container.svelte-eafmfp{height:3rem}.icon-container.svelte-eafmfp:hover{color:red;height:3rem;cursor:pointer}ul.svelte-eafmfp{list-style-type:none;width:99.5%;display:flex;flex-direction:column;margin:0;padding:0}li.svelte-eafmfp{margin-top:0.3rem;padding:0;display:flex;width:100%;justify-content:space-between;height:3rem}.role.svelte-eafmfp{display:flex;justify-content:space-between;align-items:center;padding-left:1rem;background:#252E37;width:100%;border-radius:50px;height:100%}",
      map: null
    };
    LocalRolesComponent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { localRoles } = $$props;
      let { dispatch } = $$props;
      if ($$props.localRoles === void 0 && $$bindings.localRoles && localRoles !== void 0)
        $$bindings.localRoles(localRoles);
      if ($$props.dispatch === void 0 && $$bindings.dispatch && dispatch !== void 0)
        $$bindings.dispatch(dispatch);
      $$result.css.add(css$52);
      return `${localRoles === [] ? `<div>no roles</div>` : `<ul class="${"svelte-eafmfp"}">${each(localRoles, (role, i2) => {
        return `<li class="${"role-container svelte-eafmfp"}"><div class="${"role svelte-eafmfp"}">${escape2(role.label)}
            <div class="${"icon-container svelte-eafmfp"}">${validate_component(Icon, "Icon").$$render($$result, {
          icon: "ant-design:minus-circle-twotone",
          height: "3rem"
        }, {}, {})}
            </div></div>
        
    </li>`;
      })}</ul>`}`;
    });
    css$42 = {
      code: ".icon-container.svelte-aaxewx{height:3rem}.icon-container.svelte-aaxewx:hover{color:red;height:3rem;cursor:pointer}ul.svelte-aaxewx{list-style-type:none;width:99.5%;display:flex;flex-direction:column;margin:0;padding:0}li.svelte-aaxewx{margin-top:0.3rem;padding:0;display:flex;width:100%;justify-content:space-between;height:3rem}.role.svelte-aaxewx{display:flex;justify-content:space-between;align-items:center;padding-left:1rem;background:#252E37;width:100%;border-radius:50px;height:100%}",
      map: null
    };
    ServerRolesComponent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_discordVerif;
      $$unsubscribe_discordVerif = subscribe(discordVerif, (value) => value);
      let DiscordVerif;
      discordVerif.subscribe((val) => DiscordVerif = val);
      $$result.css.add(css$42);
      $$unsubscribe_discordVerif();
      return `${DiscordVerif.servers[DiscordVerif.selectedId].roles.length === 0 ? `<div>no roles</div>` : `<ul class="${"svelte-aaxewx"}">${each(DiscordVerif.servers[DiscordVerif.selectedId].roles, (role, i2) => {
        return `<li class="${"role-container svelte-aaxewx"}"><div class="${"role svelte-aaxewx"}">${escape2(role.label)}
            <div class="${"icon-container svelte-aaxewx"}">${validate_component(Icon, "Icon").$$render($$result, {
          icon: "ant-design:minus-circle-twotone",
          height: "3rem"
        }, {}, {})}
            </div></div>
        
    </li>`;
      })}</ul>`}`;
    });
    DiscordRoles = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { localRoles } = $$props;
      let { dispatch } = $$props;
      let DiscordVerif;
      discordVerif.subscribe((val) => DiscordVerif = val);
      if ($$props.localRoles === void 0 && $$bindings.localRoles && localRoles !== void 0)
        $$bindings.localRoles(localRoles);
      if ($$props.dispatch === void 0 && $$bindings.dispatch && dispatch !== void 0)
        $$bindings.dispatch(dispatch);
      return `${DiscordVerif.editing ? `${validate_component(ServerRolesComponent, "ServerRolesComponent").$$render($$result, { dispatch }, {}, {})}` : `${validate_component(LocalRolesComponent, "LocalRolesComponent").$$render($$result, { dispatch, localRoles }, {}, {})}`}`;
    });
    css$35 = {
      code: ".id-input.svelte-1yo92ww:focus{border-color:#5865F2}.plus-icon.svelte-1yo92ww{height:3rem}.plus-icon.svelte-1yo92ww:hover{height:3rem;color:#5865F2;cursor:pointer}.plus-icon-container.svelte-1yo92ww{width:4rem;height:100%;border:0.2px solid var(--form-element-border-color);border-top-right-radius:6px;border-bottom-right-radius:6px}.role-input.svelte-1yo92ww{width:100%;border-top-right-radius:0px;border-bottom-right-radius:0px;border-right-width:0.5px}.role-input.svelte-1yo92ww:focus{width:100%;border-top-right-radius:0px;border-bottom-right-radius:0px;border-right-width:0.5px;border-color:#5865F2}.role-input-container.svelte-1yo92ww{display:flex;width:100%;align-items:center}.content.svelte-1yo92ww{display:flex;flex-direction:column;align-items:center;width:100%;height:100%;overflow:auto;overflow-x:hidden}.content.svelte-1yo92ww::-webkit-scrollbar{display:none}.content.svelte-1yo92ww{-ms-overflow-style:none;scrollbar-width:none}",
      map: null
    };
    DiscordVerifContent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      const dispatch = createEventDispatcher();
      let { localRoles } = $$props;
      let { serverId } = $$props;
      let { roleName } = $$props;
      let DiscordVerif;
      discordVerif.subscribe((val) => DiscordVerif = val);
      if ($$props.localRoles === void 0 && $$bindings.localRoles && localRoles !== void 0)
        $$bindings.localRoles(localRoles);
      if ($$props.serverId === void 0 && $$bindings.serverId && serverId !== void 0)
        $$bindings.serverId(serverId);
      if ($$props.roleName === void 0 && $$bindings.roleName && roleName !== void 0)
        $$bindings.roleName(roleName);
      $$result.css.add(css$35);
      return `<div class="${"content svelte-1yo92ww"}"><div style="${"width:80%"}"><h3 class="${"mt-1"}">Server ID</h3>
        ${DiscordVerif.editing ? `<input class="${"id-input svelte-1yo92ww"}" placeholder="${"Server ID"}"${add_attribute("value", DiscordVerif.servers[DiscordVerif.selectedId].label, 0)}>` : `<input class="${"id-input svelte-1yo92ww"}" placeholder="${"Server ID"}"${add_attribute("value", serverId, 0)}>`}</div>
    <div style="${"width:80%"}"><h3 class="${"mt-0"}">Server Roles</h3>
        <div class="${"role-input-container svelte-1yo92ww"}"><div class="${""}" style="${"display:flex; margin:0; padding:0; width:100%"}"><input class="${"role-input svelte-1yo92ww"}" placeholder="${"Server Role"}"${add_attribute("value", roleName, 0)}>
                <div class="${"plus-icon-container flex-align svelte-1yo92ww"}"><div class="${"plus-icon flex-align svelte-1yo92ww"}">${validate_component(Icon, "Icon").$$render($$result, {
        icon: "ant-design:plus-circle-twotone",
        height: "3rem"
      }, {}, {})}</div></div></div></div>
                            ${validate_component(DiscordRoles, "DiscordRoles").$$render($$result, { dispatch, localRoles }, {}, {})}</div>
                            </div>`;
    });
    CustomTokenContent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { mobile } = $$props;
      if ($$props.mobile === void 0 && $$bindings.mobile && mobile !== void 0)
        $$bindings.mobile(mobile);
      return `<div style="${"width: 100%; height:" + escape2(mobile ? "80%" : "70%") + "; display:flex; flex-direction:column; justify-content:center; align-items:center"}"><div style="${"width:80%"}"><h3 class="${"mt-1"}">Input 1</h3>
    <input placeholder="${"Input 1"}"></div>

<div style="${"width:80%"}"><h3 class="${"mt-0"}">Input 2</h3>
    <input placeholder="${"Input 2"}"></div></div>`;
    });
    css$26 = {
      code: "input.svelte-jbstn1:focus{border-color:#1DA1F2\n    }",
      map: null
    };
    TwitterVerifContent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_twitterVerif;
      $$unsubscribe_twitterVerif = subscribe(twitterVerif, (value) => value);
      let TwitterVerif;
      let selectedId;
      let inputVal;
      twitterVerif.subscribe((val) => {
        TwitterVerif = val;
        selectedId = TwitterVerif.selectedId;
        inputVal = TwitterVerif.accounts[selectedId]?.label;
      });
      $$result.css.add(css$26);
      $$unsubscribe_twitterVerif();
      return `<div style="${"width: 100%; height:70%; display:flex; flex-direction:column; justify-content:center; align-items:center"}"><div style="${"width:80%"}"><h3 class="${"mt-1"}">Account Handle</h3>
    <input${add_attribute("value", inputVal, 0)} class="${"svelte-jbstn1"}"></div>

</div>`;
    });
    css$17 = {
      code: ".cancel.svelte-1ssrwh5{height:2.4rem;width:5rem;cursor:pointer;color:red\n}.cancel.svelte-1ssrwh5:hover{background-color:rgba(255, 0, 61, 0.1);border-radius:6px}header.svelte-1ssrwh5{display:flex;flex-direction:row;width:100%;justify-content:space-between;align-items:center;padding-right:2rem;padding-left:2rem;border-bottom:var(--border)}footer.svelte-1ssrwh5{color:var(--primary);display:flex;justify-content:space-between;align-items:center;padding-right:2rem;padding-left:2rem;width:100%;border-top:var(--border);;}#background.svelte-1ssrwh5{display:var(--display);position:fixed;z-index:1;top:0;left:0;width:100vw;height:100vh;background-color:rgba(0, 0, 0, 0.5)}#modal.svelte-1ssrwh5{display:var(--display);position:fixed;z-index:2;top:50%;left:50%;transform:translate(-50%, -50%);background:#141e26;height:var(--modalHeight);width:var(--modalWidth);border-radius:20px;border:var(--border)\n\n}",
      map: null
    };
    Modal_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_discordVerif;
      let $$unsubscribe_modal;
      $$unsubscribe_discordVerif = subscribe(discordVerif, (value) => value);
      $$unsubscribe_modal = subscribe(modal, (value) => value);
      let Modal;
      let localRoles = [];
      let serverId = "";
      let roleName = "";
      let { mobile } = $$props;
      const modalWidth = mobile ? "80%" : "42%";
      const modalHeight = mobile ? "50%" : "60%";
      const headerHeight = mobile ? "15%" : "12%";
      const bodyHeight = mobile ? "72%" : "76%";
      const footerHeight = mobile ? "12%" : "12%";
      const saveWidth = mobile ? "4rem" : "4rem";
      modal.subscribe((val) => Modal = val);
      discordVerif.subscribe((val) => val);
      if ($$props.mobile === void 0 && $$bindings.mobile && mobile !== void 0)
        $$bindings.mobile(mobile);
      $$result.css.add(css$17);
      $$unsubscribe_discordVerif();
      $$unsubscribe_modal();
      return `<div id="${"background"}" style="${"--display: " + escape2(Modal.opened ? "block" : "none")}" class="${"svelte-1ssrwh5"}"></div>
    <main id="${"modal"}" style="${"--display: " + escape2(Modal.opened ? "block" : "none") + "; --modalWidth:" + escape2(modalWidth) + "; --modalHeight:" + escape2(modalHeight) + "; --border: " + escape2(Modal.content === "custom-token" ? "2px solid var(--primary)" : Modal.content !== "twitter" ? "2px solid #5865F2" : "2px solid #1DA1F2") + "; --color: " + escape2(Modal.content === "custom-token" ? "var(--primary)" : Modal.content !== "twitter" ? "#5865F2" : "#1DA1F2") + "; --bg: " + escape2(Modal.content === "custom-token" ? "rgba(56, 232, 198, 0.1)" : Modal.content !== "twitter" ? "rgba(88, 101, 242, 0.1)" : "rgba(29, 161, 242, 0.1)") + ";"}" class="${"svelte-1ssrwh5"}"><header style="${"height: " + escape2(headerHeight) + ";"}" class="${"svelte-1ssrwh5"}"><div><h3>${escape2(Modal.content)}</h3></div>
            <div></div></header>
        <div style="${"height:" + escape2(bodyHeight)}">${Modal.content === "custom-token" ? `${validate_component(CustomTokenContent, "CustomTokenContent").$$render($$result, { mobile }, {}, {})}` : `${Modal.content === "twitter" ? `${validate_component(TwitterVerifContent, "TwitterVerifContent").$$render($$result, {}, {}, {})}` : `${validate_component(DiscordVerifContent, "DiscordVerifContent").$$render($$result, { localRoles, serverId, roleName }, {}, {})}`}`}</div>

                <footer style="${"height: " + escape2(footerHeight) + ";"}" class="${"svelte-1ssrwh5"}"><div class="${"cancel flex-align svelte-1ssrwh5"}">CANCEL

                    </div>
                    <div style="${"height: 2.4rem; width: " + escape2(saveWidth) + "; cursor: pointer; color: var(--color)"}" class="${"flex-align"}">SAVE

                    </div></footer>
                </main>`;
    });
    EmeraldIdIcon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { color } = $$props;
      let { mobile } = $$props;
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.mobile === void 0 && $$bindings.mobile && mobile !== void 0)
        $$bindings.mobile(mobile);
      return `<svg${add_attribute("width", mobile ? "1.3rem" : "1.4rem", 0)}${add_attribute("height", mobile ? "1.25rem" : "1.4rem", 0)} viewBox="${"0 0 40 40"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}"><path d="${"M20 0C8.97111 0 0 8.97182 0 20C0 31.0282 8.97111 40 20 40C31.0282 40 40 31.0282 40 20C40 8.97182 31.0289 0 20 0ZM20 37.4403C10.3834 37.4403 2.55914 29.6173 2.55977 20C2.55977 10.3834 10.3834 2.55977 20 2.55977C29.6166 2.55977 37.4403 10.3834 37.4403 20C37.4403 29.6173 29.6166 37.4403 20 37.4403Z"}"${add_attribute("fill", color, 0)}></path><path d="${"M20.2873 27.8947L19.9741 27.643L19.6609 27.8947L16.6279 30.3322L15.6034 26.5717L15.4979 26.1844L15.097 26.2037L11.2078 26.3901L12.5856 22.759L12.7279 22.3841L12.3927 22.1638L9.13893 20.0255L12.3927 17.8871L12.7279 17.6669L12.5856 17.2919L11.2078 13.6609L15.097 13.8473L15.4979 13.8665L15.6034 13.4793L16.6279 9.71875L19.6609 12.1562L19.9741 12.4079L20.2873 12.1562L23.3203 9.71875L24.3448 13.4793L24.4503 13.8665L24.8512 13.8473L28.7404 13.6609L27.3626 17.2919L27.2203 17.6669L27.5554 17.8871L30.8093 20.0255L27.5554 22.1638L27.2203 22.3841L27.3626 22.759L28.7404 26.3901L24.8512 26.2037L24.4503 26.1844L24.3448 26.5717L23.3203 30.3322L20.2873 27.8947Z"}"${add_attribute("stroke", color, 0)}></path><path d="${"M11.2404 20.3245L13.8303 22.0264L12.7356 24.9111L7.16898 25.1761C6.93136 24.5978 6.73843 23.9957 6.58057 23.379L11.2404 20.3245Z"}"${add_attribute("stroke", color, 0)} stroke-width="${"0.5"}"></path><path d="${"M32.7797 14.8747C33.0173 15.4531 33.2102 16.0552 33.3681 16.6718L28.7083 19.7264L26.1184 18.0245L27.2131 15.1398L32.7797 14.8747Z"}"${add_attribute("stroke", color, 0)} stroke-width="${"0.5"}"></path><path d="${"M12.7356 15.1397L13.8303 18.0245L11.2404 19.7264L6.58057 16.6718C6.73839 16.0552 6.93135 15.453 7.16898 14.8747L12.7356 15.1397Z"}"${add_attribute("stroke", color, 0)} stroke-width="${"0.5"}"></path><path d="${"M12.6444 8.32176L16.9946 11.8144L16.1806 14.804L13.0876 14.6559L11.1071 9.44716C11.5919 9.02973 12.1009 8.6579 12.6444 8.32176Z"}"${add_attribute("stroke", color, 0)} stroke-width="${"0.5"}"></path><path d="${"M16.1806 25.247L16.9946 28.2364L12.6444 31.7292C12.1009 31.3929 11.5919 31.0212 11.1071 30.6038L13.0876 25.3949L16.1806 25.247Z"}"${add_attribute("stroke", color, 0)} stroke-width="${"0.5"}"></path><path d="${"M26.862 25.3949L28.8419 30.6176C28.3566 31.0233 27.8478 31.3937 27.3054 31.7292L22.9552 28.2364L23.7692 25.247L26.862 25.3949Z"}"${add_attribute("stroke", color, 0)} stroke-width="${"0.5"}"></path><path d="${"M28.7083 20.3245L33.3689 23.3796C33.211 24.0088 33.0179 24.6128 32.7799 25.1922L27.2132 24.9116L26.1184 22.0264L28.7083 20.3245Z"}"${add_attribute("stroke", color, 0)} stroke-width="${"0.5"}"></path><path d="${"M27.3039 8.32297C27.8342 8.65845 28.3415 9.02871 28.8258 9.43372L26.8615 14.656L23.7692 14.804L22.9552 11.8144L27.3039 8.32297Z"}"${add_attribute("stroke", color, 0)} stroke-width="${"0.5"}"></path><mask id="${"path-11-inside-1_159_2"}"${add_attribute("fill", color, 0)}><path fill-rule="${"evenodd"}" clip-rule="${"evenodd"}" d="${"M19.9746 34.1401C19.9745 34.1401 19.9745 34.1401 19.9744 34.1401C19.594 34.1401 19.2135 34.1236 18.8331 34.0904L17.2783 28.3288L19.9744 26.162L19.9746 26.1621V26.162L22.6707 28.3288L21.1159 34.0904C20.7355 34.1236 20.355 34.1401 19.9746 34.1401Z"}"></path></mask><path d="${"M18.8331 34.0904L18.3504 34.2207L18.4415 34.5582L18.7898 34.5886L18.8331 34.0904ZM17.2783 28.3288L16.9651 27.9391L16.7105 28.1437L16.7956 28.4591L17.2783 28.3288ZM19.9744 26.162L20.2876 25.7723L19.9744 25.5205L19.6612 25.7723L19.9744 26.162ZM19.9746 26.1621L19.6614 26.5519L20.4746 27.2054V26.1621H19.9746ZM19.9746 26.162L20.2878 25.7723L19.4746 25.1187V26.162H19.9746ZM22.6707 28.3288L23.1534 28.4591L23.2385 28.1437L22.9839 27.9391L22.6707 28.3288ZM21.1159 34.0904L21.1593 34.5886L21.5076 34.5582L21.5986 34.2207L21.1159 34.0904ZM19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9746 33.6401C19.9746 33.6401 19.9746 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9745 33.6401 19.9745 33.6401C19.9745 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401C19.9744 33.6401 19.9744 33.6401 19.9744 33.6401V34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9744 34.6401 19.9744 34.6401C19.9744 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9745 34.6401 19.9745 34.6401 19.9745 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401C19.9746 34.6401 19.9746 34.6401 19.9746 34.6401V33.6401ZM19.9744 33.6401C19.6086 33.6401 19.2425 33.6242 18.8765 33.5923L18.7898 34.5886C19.1845 34.6229 19.5795 34.6401 19.9744 34.6401V33.6401ZM19.3159 33.9602L17.7611 28.1985L16.7956 28.4591L18.3504 34.2207L19.3159 33.9602ZM17.5915 28.7185L20.2876 26.5517L19.6612 25.7723L16.9651 27.9391L17.5915 28.7185ZM19.6612 26.5517L19.6614 26.5519L20.2878 25.7724L20.2876 25.7723L19.6612 26.5517ZM19.4746 26.162V26.1621H20.4746V26.162H19.4746ZM22.9839 27.9391L20.2878 25.7723L19.6614 26.5517L22.3575 28.7185L22.9839 27.9391ZM21.5986 34.2207L23.1534 28.4591L22.188 28.1985L20.6332 33.9602L21.5986 34.2207ZM19.9746 34.6401C20.3695 34.6401 20.7645 34.6229 21.1593 34.5886L21.0725 33.5923C20.7065 33.6242 20.3405 33.6401 19.9746 33.6401V34.6401Z"}"${add_attribute("fill", color, 0)} mask="${"url(#path-11-inside-1_159_2)"}"></path><mask id="${"path-13-inside-2_159_2"}"${add_attribute("fill", color, 0)}><path fill-rule="${"evenodd"}" clip-rule="${"evenodd"}" d="${"M19.9746 5.91083C20.355 5.91083 20.7355 5.92739 21.1159 5.96051L22.6707 11.722L19.9746 13.8889V13.8887L19.9744 13.8889L17.2783 11.722L18.8331 5.96051C19.2135 5.92739 19.594 5.91083 19.9744 5.91083C19.9745 5.91083 19.9745 5.91083 19.9746 5.91083Z"}"></path></mask><path d="${"M21.1159 5.96051L21.5986 5.83024L21.5076 5.49272L21.1593 5.46239L21.1159 5.96051ZM22.6707 11.722L22.9839 12.1118L23.2385 11.9071L23.1534 11.5918L22.6707 11.722ZM19.9746 13.8889H19.4746V14.9322L20.2878 14.2786L19.9746 13.8889ZM19.9746 13.8887H20.4746V12.8455L19.6614 13.499L19.9746 13.8887ZM19.9744 13.8889L19.6612 14.2786L19.9744 14.5303L20.2876 14.2786L19.9744 13.8889ZM17.2783 11.722L16.7956 11.5918L16.7105 11.9071L16.9651 12.1118L17.2783 11.722ZM18.8331 5.96051L18.7898 5.46239L18.4415 5.49272L18.3504 5.83024L18.8331 5.96051ZM21.1593 5.46239C20.7645 5.42802 20.3695 5.41083 19.9746 5.41083V6.41083C20.3405 6.41083 20.7065 6.42675 21.0725 6.45862L21.1593 5.46239ZM23.1534 11.5918L21.5986 5.83024L20.6332 6.09078L22.188 11.8523L23.1534 11.5918ZM20.2878 14.2786L22.9839 12.1118L22.3575 11.3323L19.6614 13.4991L20.2878 14.2786ZM19.4746 13.8887V13.8889H20.4746V13.8887H19.4746ZM19.6614 13.499L19.6612 13.4991L20.2876 14.2786L20.2878 14.2785L19.6614 13.499ZM20.2876 13.4991L17.5915 11.3323L16.9651 12.1118L19.6612 14.2786L20.2876 13.4991ZM17.7611 11.8523L19.3159 6.09078L18.3504 5.83024L16.7956 11.5918L17.7611 11.8523ZM18.8765 6.45862C19.2425 6.42675 19.6086 6.41083 19.9744 6.41083V5.41083C19.5795 5.41083 19.1845 5.42802 18.7898 5.46239L18.8765 6.45862ZM19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9744 6.41083 19.9744 6.41083C19.9744 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9745 6.41083 19.9745 6.41083 19.9745 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083C19.9746 6.41083 19.9746 6.41083 19.9746 6.41083V5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9746 5.41083C19.9746 5.41083 19.9746 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9745 5.41083 19.9745 5.41083C19.9745 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083C19.9744 5.41083 19.9744 5.41083 19.9744 5.41083V6.41083Z"}"${add_attribute("fill", color, 0)} mask="${"url(#path-13-inside-2_159_2)"}"></path><circle cx="${"20"}" cy="${"20"}" r="${"14.5"}"${add_attribute("stroke", color, 0)}></circle></svg>`;
    });
    css8 = {
      code: ".app.svelte-118u7xd .drawer .panel{background:#11191F}ul.svelte-118u7xd{display:flex;justify-content:space-between;align-items:center;margin:0;padding:0;height:70%;width:70%;max-width:70%;overflow:scroll;border-radius:9px;background:rgba(255, 255, 255, 0.08);list-style:none}ul.svelte-118u7xd::-webkit-scrollbar{display:none}li.svelte-118u7xd{margin:0;padding:0;display:flex;justify-content:center;align-items:center;width:var(--width);height:100%;min-width:var(--width);cursor:pointer}li.active.svelte-118u7xd{display:flex;justify-content:center;align-items:center;color:#495057;background-color:#fff;border-bottom:2px solid var(--primary);color:var(--primary);background-color:rgba(56, 232, 198, 0.1);margin:0;padding:0;width:var(--width);height:100%;min-width:var(--width)}.inactive-tab.svelte-118u7xd:hover{background:var(--form-element-border-color)}.chevron-icon.svelte-118u7xd{cursor:pointer}.chevron-icon-disabled.svelte-118u7xd{opacity:0.5}.main-container.svelte-118u7xd{margin-top:-6%;height:3rem;display:flex;width:100%;justify-content:center;align-items:center}.chevron-wrapper.svelte-118u7xd{display:flex;justify-content:center;align-items:center;height:var(--height);width:var(--width)}",
      map: null
    };
    CreateProjectDetails = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_activeTabVal;
      let $$unsubscribe_tabs;
      let $$unsubscribe_projects;
      $$unsubscribe_activeTabVal = subscribe(activeTabVal, (value) => value);
      $$unsubscribe_tabs = subscribe(tabs, (value) => value);
      $$unsubscribe_projects = subscribe(projects, (value) => value);
      let { screenSize } = $$props;
      let mobile = screenSize === "mobile";
      let tabsValue;
      let activeTabValue;
      let btnLabel;
      tabs.subscribe((value) => {
        tabsValue = value;
      });
      activeTabVal.subscribe((val) => {
        activeTabValue = val;
        if (val === 6) {
          btnLabel = "CONFIRM";
        } else {
          btnLabel = "CONTINUE";
        }
      });
      tab1data.subscribe((val) => val);
      tokens.subscribe((val) => val);
      collections.subscribe((val) => val);
      emeraldIdVerif.subscribe((val) => val);
      discordVerif.subscribe((val) => val);
      twitterVerif.subscribe((val) => val);
      projects.subscribe((val) => val);
      if ($$props.screenSize === void 0 && $$bindings.screenSize && screenSize !== void 0)
        $$bindings.screenSize(screenSize);
      $$result.css.add(css8);
      $$unsubscribe_activeTabVal();
      $$unsubscribe_tabs();
      $$unsubscribe_projects();
      return `${validate_component(Dialog, "Dialog").$$render($$result, { mobile }, {}, {})}
${validate_component(Modal_1, "Modal").$$render($$result, { mobile }, {}, {})}
<article class="${"app svelte-118u7xd"}">${validate_component(DrawerComponent, "DrawerComponent").$$render($$result, {}, {}, {})}

    <main class="${"main-container svelte-118u7xd"}">
        <div style="${"--width:" + escape2(mobile ? "30%" : "20%")}" class="${"chevron-wrapper svelte-118u7xd"}"><div class="${escape2(null_to_empty(activeTabValue === 0 ? "chevron-icon-disabled" : "chevron-icon")) + " svelte-118u7xd"}">${validate_component(Icon, "Icon").$$render($$result, {
        class: "chevron-icon",
        icon: "akar-icons:circle-chevron-left",
        height: mobile ? 30 : 36,
        color: "lightgrey"
      }, {}, {})}</div></div>
        <ul class="${"svelte-118u7xd"}">${each(tabsValue, (item, i2) => {
        return `<li style="${"--width:" + escape2(mobile ? "33.3%" : "25%")}"${add_attribute("id", `tab${i2}`, 0)} class="${escape2(null_to_empty(activeTabValue === item.value ? "active" : "inactive-tab")) + " svelte-118u7xd"}">${i2 === 3 ? `<div class="${"flex-align"}">${validate_component(EmeraldIdIcon, "EmeraldIdIcon").$$render($$result, {
          mobile,
          color: activeTabValue === 3 || tabsValue[i2].done ? "var(--primary)" : "white"
        }, {}, {})}
                        </div>` : `${validate_component(Icon, "Icon").$$render($$result, {
          icon: item.icon,
          height: mobile ? 22 : i2 === 3 ? 26 : 30,
          color: tabsValue[i2].done ? "var(--primary)" : activeTabValue === item.value ? "var(--primary)" : "lightgrey"
        }, {}, {})}`}
                </li>`;
      })}</ul>
        <div style="${"--width:" + escape2(mobile ? "30%" : "20%")}" class="${"chevron-wrapper svelte-118u7xd"}"><div class="${escape2(null_to_empty(activeTabValue === 6 ? "chevron-icon-disabled" : "chevron-icon")) + " svelte-118u7xd"}">${validate_component(Icon, "Icon").$$render($$result, {
        class: "chevron-icon",
        icon: "akar-icons:circle-chevron-right",
        height: mobile ? 30 : 36,
        color: "lightgrey"
      }, {}, {})}</div></div></main>

    
    ${each(tabsValue, (item) => {
        return `${activeTabValue == item.value ? `<div class="${""}">
                ${validate_component(item.component || missing_component, "svelte:component").$$render($$result, { mobile }, {}, {})}</div>
            <footer><div class="${"mt-0 mb-0 pl-1"}"><button class="${"contrast small-button"}">${escape2(btnLabel)}</button></div>
            </footer>` : ``}`;
      })}
</article>`;
    });
    Create = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${$$result.head += `${$$result.title = `<title>Create Project ${escape2(PAGE_TITLE_EXTENSION)}</title>`, ""}`, ""}


${validate_component(MediaQuery, "MediaQuery").$$render($$result, { query: "(min-width: 1281px)" }, {}, {
        default: ({ matches }) => {
          return `${matches ? `${validate_component(CreateProjectDetails, "CreateProjectDetails").$$render($$result, { screenSize: "desktop" }, {}, {})}` : ``}`;
        }
      })}
    ${validate_component(MediaQuery, "MediaQuery").$$render($$result, {
        query: "(min-width: 481px) and (max-width: 1280px)"
      }, {}, {
        default: ({ matches }) => {
          return `${matches ? `${validate_component(CreateProjectDetails, "CreateProjectDetails").$$render($$result, { screenSize: "tablet" }, {}, {})}` : ``}`;
        }
      })}
    ${validate_component(MediaQuery, "MediaQuery").$$render($$result, { query: "(max-width: 480px)" }, {}, {
        default: ({ matches }) => {
          return `${matches ? `${validate_component(CreateProjectDetails, "CreateProjectDetails").$$render($$result, { screenSize: "mobile" }, {}, {})}` : ``}`;
        }
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/_whitelistId_-b34f27d7.js
var whitelistId_b34f27d7_exports = {};
__export(whitelistId_b34f27d7_exports, {
  default: () => U5BwhitelistIdu5D
});
async function readWhitelist(address, whitelistId) {
  const scriptWhitelist = await getWhitelist(address, whitelistId);
  const scriptTokenModules = scriptWhitelist.modules["A.f8d6e0586b0a20c7.GatewayModules.OwnsToken"];
  console.log(scriptTokenModules);
  let tokenModules = [];
  for (let i2 = 0; i2 < scriptTokenModules.length; i2++) {
    const scriptTokenModule = scriptTokenModules[i2];
    const tokenModule = {
      identifier: scriptTokenModule.identifier,
      amount: scriptTokenModule.amount,
      imgUrl: "https://res.cloudinary.com/do4mactw0/image/upload/v1647145425/FlowLogo_myf3sv.svg",
      label: "FLOW"
    };
    tokenModules.push(tokenModule);
  }
  let whitelist = {
    ...scriptWhitelist.variables,
    modules: {
      token: tokenModules
    }
  };
  console.log(whitelist);
  return whitelist;
}
var import_onflow_fcl_esm8, css9, TokenComponent2, U5BwhitelistIdu5D;
var init_whitelistId_b34f27d7 = __esm({
  ".svelte-kit/output/server/chunks/_whitelistId_-b34f27d7.js"() {
    init_shims();
    init_app_0013ff75();
    init_stores_c1e7c577();
    init_Dialog_dbbcc175();
    init_stores_14403ff2();
    init_actions_ef80cda2();
    init_ssr();
    import_onflow_fcl_esm8 = __toModule(require_fcl_cjs());
    init_index_b0a82c49();
    css9 = {
      code: ".valid.svelte-9fiaf2{display:flex;justify-content:space-between;align-items:center;height:70%;width:100%;background-color:rgba(56, 232, 198, 0.1);border-radius:50px}.token-container.svelte-9fiaf2{display:flex;width:var(--width);height:70%;justify-content:space-between;border-radius:50px;align-items:center;background-color:#252e37;font-weight:bold;margin-left:var(--margin-left)}.amount-container.svelte-9fiaf2{color:#252e37;font-weight:bold;display:flex;height:2.6rem;width:36%;justify-content:center;align-items:center;background:white;border-top-right-radius:50px;border-bottom-right-radius:50px}",
      map: null
    };
    TokenComponent2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { tokenModule } = $$props;
      let { token1valid } = $$props;
      let { i: i2 } = $$props;
      if ($$props.tokenModule === void 0 && $$bindings.tokenModule && tokenModule !== void 0)
        $$bindings.tokenModule(tokenModule);
      if ($$props.token1valid === void 0 && $$bindings.token1valid && token1valid !== void 0)
        $$bindings.token1valid(token1valid);
      if ($$props.i === void 0 && $$bindings.i && i2 !== void 0)
        $$bindings.i(i2);
      $$result.css.add(css9);
      return `<div style="${"height: 70%; width:100%;"}" class="${["svelte-9fiaf2", token1valid ? "valid" : ""].join(" ").trim()}"><div style="${"--width:" + escape2("30%") + "; --margin-left:" + escape2(i2 === 0 ? "0rem" : "0.8rem")}" class="${escape2(null_to_empty("token-container")) + " svelte-9fiaf2"}"><div style="${"display:flex; justify-content:space-between; align-items:center; width: 2.6rem; height:2.6rem; "}"><img style="${"height:100%; width:2.6rem; border-radius: 50px; object-fit:cover"}"${add_attribute("src", tokenModule.imgUrl, 0)} alt="${"logo"}"></div>
        <div style="${"margin-right: 1rem;"}">${escape2(tokenModule.label)}</div>
        <div class="${"amount-container svelte-9fiaf2"}">${escape2(parseFloat(tokenModule.amount).toFixed(2))}</div></div>
    ${token1valid ? `${validate_component(Icon_1, "Icon").$$render($$result, {
        icon: "line-md:confirm-circle",
        color: "var(--primary)",
        height: "2.6rem"
      }, {}, {})}` : ``}
</div>`;
    });
    U5BwhitelistIdu5D = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_transactionInProgress;
      let $$unsubscribe_transactionStatus;
      let $$unsubscribe_joinedWhitelists;
      let $page, $$unsubscribe_page;
      $$unsubscribe_transactionInProgress = subscribe(transactionInProgress2, (value) => value);
      $$unsubscribe_transactionStatus = subscribe(transactionStatus2, (value) => value);
      $$unsubscribe_joinedWhitelists = subscribe(joinedWhitelists, (value) => value);
      $$unsubscribe_page = subscribe(page, (value) => $page = value);
      let whitelist = readWhitelist($page.params.address, $page.params.whitelistId);
      let token1valid = null;
      $$unsubscribe_transactionInProgress();
      $$unsubscribe_transactionStatus();
      $$unsubscribe_joinedWhitelists();
      $$unsubscribe_page();
      return `${$$result.head += `${$$result.title = `<title>Whitelist details</title>`, ""}`, ""}
    ${validate_component(Dialog, "Dialog").$$render($$result, {}, {}, {})}
    ${function(__value) {
        if (is_promise(__value)) {
          __value.then(null, noop3);
          return ``;
        }
        return function(whitelist2) {
          return `
    <article><blockquote><h1>${escape2(whitelist2.name)}</h1>
            <p>${escape2(whitelist2.description)}</p></blockquote>
        <h1>Tokens</h1>
        <p>Something about the tokens</p>
        <div style="${"display: flex;"}" class="${"mt-1"}">${each(whitelist2.modules.token, (tokenModule, i2) => {
            return `${validate_component(TokenComponent2, "TokenComponent").$$render($$result, { token1valid, tokenModule, i: i2 }, {}, {})}`;
          })}</div>
        <h1>Collections</h1>
        <p>Something about the collections</p>
        <div class="${"mt-1"}">${whitelist2.modules["A.f8d6e0586b0a20c7.GatewayModules.OwnsNFT"] ? `${each(whitelist2.modules["A.f8d6e0586b0a20c7.GatewayModules.OwnsNFT"], (collection) => {
            return `${collection.selected ? `<div class="${"mt-1"}">${validate_component(CollectionComponent, "CollectionComponent").$$render($$result, Object.assign(collection), {}, {})}
            </div>` : ``}`;
          })}` : ``}</div>

        <div class="${"mt-2"}" style="${"display: flex;"}"><h1>Verification</h1></div>
        <p>Something about the verification</p>

        <div class="${"mt-1"}">${whitelist2.modules["A.f8d6e0586b0a20c7.GatewayModules.OwnsEmeraldID"] ? `` : ``}
            ${validate_component(VerticalSpace, "VerticalSpace").$$render($$result, { value: "0.8rem" }, {}, {})}
            ${whitelist2.modules["A.f8d6e0586b0a20c7.GatewayModules.DiscordRoles"] ? `` : ``}
            ${validate_component(VerticalSpace, "VerticalSpace").$$render($$result, { value: "0.8rem" }, {}, {})}
            ${whitelist2.modules["A.f8d6e0586b0a20c7.GatewayModules.TwitterFollows"] ? `` : ``}</div>
        <footer><button>JOIN</button></footer></article>
    `;
        }(__value);
      }(whitelist)}`;
    });
  }
});

// .svelte-kit/output/server/chunks/app-0013ff75.js
function noop3() {
}
function is_promise(value) {
  return value && typeof value === "object" && typeof value.then === "function";
}
function run(fn) {
  return fn();
}
function blank_object() {
  return /* @__PURE__ */ Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function safe_not_equal2(a2, b2) {
  return a2 != a2 ? b2 == b2 : a2 !== b2 || (a2 && typeof a2 === "object" || typeof a2 === "function");
}
function subscribe(store, ...callbacks2) {
  if (store == null) {
    return noop3;
  }
  const unsub = store.subscribe(...callbacks2);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function null_to_empty(value) {
  return value == null ? "" : value;
}
function custom_event(type, detail, bubbles = false) {
  const e3 = document.createEvent("CustomEvent");
  e3.initCustomEvent(type, bubbles, false, detail);
  return e3;
}
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function onDestroy(fn) {
  get_current_component().$$.on_destroy.push(fn);
}
function createEventDispatcher() {
  const component = get_current_component();
  return (type, detail) => {
    const callbacks2 = component.$$.callbacks[type];
    if (callbacks2) {
      const event = custom_event(type, detail);
      callbacks2.slice().forEach((fn) => {
        fn.call(component, event);
      });
    }
  };
}
function setContext(key, context) {
  get_current_component().$$.context.set(key, context);
}
function getContext(key) {
  return get_current_component().$$.context.get(key);
}
function spread(args, attrs_to_add) {
  const attributes = Object.assign({}, ...args);
  if (attrs_to_add) {
    const classes_to_add = attrs_to_add.classes;
    const styles_to_add = attrs_to_add.styles;
    if (classes_to_add) {
      if (attributes.class == null) {
        attributes.class = classes_to_add;
      } else {
        attributes.class += " " + classes_to_add;
      }
    }
    if (styles_to_add) {
      if (attributes.style == null) {
        attributes.style = style_object_to_string(styles_to_add);
      } else {
        attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));
      }
    }
  }
  let str = "";
  Object.keys(attributes).forEach((name) => {
    if (invalid_attribute_name_character.test(name))
      return;
    const value = attributes[name];
    if (value === true)
      str += " " + name;
    else if (boolean_attributes.has(name.toLowerCase())) {
      if (value)
        str += " " + name;
    } else if (value != null) {
      str += ` ${name}="${value}"`;
    }
  });
  return str;
}
function merge_ssr_styles(style_attribute, style_directive) {
  const style_object = {};
  for (const individual_style of style_attribute.split(";")) {
    const colon_index = individual_style.indexOf(":");
    const name = individual_style.slice(0, colon_index).trim();
    const value = individual_style.slice(colon_index + 1).trim();
    if (!name)
      continue;
    style_object[name] = value;
  }
  for (const name in style_directive) {
    const value = style_directive[name];
    if (value) {
      style_object[name] = value;
    } else {
      delete style_object[name];
    }
  }
  return style_object;
}
function escape2(html) {
  return String(html).replace(/["'&<>]/g, (match) => escaped2[match]);
}
function escape_attribute_value(value) {
  return typeof value === "string" ? escape2(value) : value;
}
function escape_object(obj) {
  const result = {};
  for (const key in obj) {
    result[key] = escape_attribute_value(obj[key]);
  }
  return result;
}
function each(items, fn) {
  let str = "";
  for (let i2 = 0; i2 < items.length; i2 += 1) {
    str += fn(items[i2], i2);
  }
  return str;
}
function validate_component(component, name) {
  if (!component || !component.$$render) {
    if (name === "svelte:component")
      name += " this={...}";
    throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
  }
  return component;
}
function create_ssr_component(fn) {
  function $$render(result, props, bindings, slots, context) {
    const parent_component = current_component;
    const $$ = {
      on_destroy,
      context: new Map(context || (parent_component ? parent_component.$$.context : [])),
      on_mount: [],
      before_update: [],
      after_update: [],
      callbacks: blank_object()
    };
    set_current_component({ $$ });
    const html = fn(result, props, bindings, slots);
    set_current_component(parent_component);
    return html;
  }
  return {
    render: (props = {}, { $$slots = {}, context = /* @__PURE__ */ new Map() } = {}) => {
      on_destroy = [];
      const result = { title: "", head: "", css: /* @__PURE__ */ new Set() };
      const html = $$render(result, props, {}, $$slots, context);
      run_all(on_destroy);
      return {
        html,
        css: {
          code: Array.from(result.css).map((css22) => css22.code).join("\n"),
          map: null
        },
        head: result.title + result.head
      };
    },
    $$render
  };
}
function add_attribute(name, value, boolean) {
  if (value == null || boolean && !value)
    return "";
  return ` ${name}${value === true && boolean_attributes.has(name) ? "" : `=${typeof value === "string" ? JSON.stringify(escape2(value)) : `"${value}"`}`}`;
}
function style_object_to_string(style_object) {
  return Object.keys(style_object).filter((key) => style_object[key]).map((key) => `${key}: ${style_object[key]};`).join(" ");
}
function afterUpdate() {
}
function set_paths(paths) {
  base = paths.base;
  assets = paths.assets || base;
}
function set_prerendering(value) {
}
function init(settings = default_settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  const hooks = get_hooks(user_hooks);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: assets + "/_app/start-2ba662f7.js",
      css: [assets + "/_app/assets/start-61d1577b.css", assets + "/_app/assets/vendor-25757cea.css"],
      js: [assets + "/_app/start-2ba662f7.js", assets + "/_app/chunks/vendor-d21acaa6.js", assets + "/_app/chunks/singletons-12a22614.js"]
    },
    fetched: void 0,
    floc: false,
    get_component_path: (id) => assets + "/_app/" + entry_lookup[id],
    get_stack: (error2) => String(error2),
    handle_error: (error2, request) => {
      hooks.handleError({ error: error2, request });
      error2.stack = options.get_stack(error2);
    },
    hooks,
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    prerender: false,
    read: settings.read,
    root: Root,
    service_worker: null,
    router: true,
    ssr: true,
    target: null,
    template,
    trailing_slash: "never"
  };
}
async function load_component(file) {
  const { entry, css: css22, js, styles } = metadata_lookup[file];
  return {
    module: await module_lookup[file](),
    entry: assets + "/_app/" + entry,
    css: css22.map((dep) => assets + "/_app/" + dep),
    js: js.map((dep) => assets + "/_app/" + dep),
    styles
  };
}
function render2(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return respond({ ...request, host }, options, { prerender });
}
var current_component, globals, boolean_attributes, invalid_attribute_name_character, escaped2, missing_component, on_destroy, css10, Root, base, assets, user_hooks, template, options, default_settings, d2, empty, manifest, get_hooks, module_lookup, metadata_lookup;
var init_app_0013ff75 = __esm({
  ".svelte-kit/output/server/chunks/app-0013ff75.js"() {
    init_shims();
    init_ssr();
    Promise.resolve();
    globals = typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : global;
    boolean_attributes = /* @__PURE__ */ new Set([
      "allowfullscreen",
      "allowpaymentrequest",
      "async",
      "autofocus",
      "autoplay",
      "checked",
      "controls",
      "default",
      "defer",
      "disabled",
      "formnovalidate",
      "hidden",
      "ismap",
      "loop",
      "multiple",
      "muted",
      "nomodule",
      "novalidate",
      "open",
      "playsinline",
      "readonly",
      "required",
      "reversed",
      "selected"
    ]);
    invalid_attribute_name_character = /[\s'">/=\u{FDD0}-\u{FDEF}\u{FFFE}\u{FFFF}\u{1FFFE}\u{1FFFF}\u{2FFFE}\u{2FFFF}\u{3FFFE}\u{3FFFF}\u{4FFFE}\u{4FFFF}\u{5FFFE}\u{5FFFF}\u{6FFFE}\u{6FFFF}\u{7FFFE}\u{7FFFF}\u{8FFFE}\u{8FFFF}\u{9FFFE}\u{9FFFF}\u{AFFFE}\u{AFFFF}\u{BFFFE}\u{BFFFF}\u{CFFFE}\u{CFFFF}\u{DFFFE}\u{DFFFF}\u{EFFFE}\u{EFFFF}\u{FFFFE}\u{FFFFF}\u{10FFFE}\u{10FFFF}]/u;
    escaped2 = {
      '"': "&quot;",
      "'": "&#39;",
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;"
    };
    missing_component = {
      $$render: () => ""
    };
    css10 = {
      code: "#svelte-announcer.svelte-1j55zn5{position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}",
      map: null
    };
    Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { stores } = $$props;
      let { page: page2 } = $$props;
      let { components } = $$props;
      let { props_0 = null } = $$props;
      let { props_1 = null } = $$props;
      let { props_2 = null } = $$props;
      setContext("__svelte__", stores);
      afterUpdate(stores.page.notify);
      if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
        $$bindings.stores(stores);
      if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
        $$bindings.page(page2);
      if ($$props.components === void 0 && $$bindings.components && components !== void 0)
        $$bindings.components(components);
      if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
        $$bindings.props_0(props_0);
      if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
        $$bindings.props_1(props_1);
      if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
        $$bindings.props_2(props_2);
      $$result.css.add(css10);
      {
        stores.page.set(page2);
      }
      return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
        default: () => {
          return `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
            default: () => {
              return `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}` : ``}`;
            }
          })}` : ``}`;
        }
      })}

${``}`;
    });
    base = "";
    assets = "";
    user_hooks = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      [Symbol.toStringTag]: "Module"
    });
    template = ({ head, body }) => '<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="utf-8" />\n  <meta name="description" content="Create and view FLOATs, a proof of attendance protocol built by Emerald City DAO" />\n  <link rel="icon" href="/favicon.png" />\n  <meta name="viewport" content="width=device-width, initial-scale=1" />\n  \n  <meta property="og:image" content="http://floats.city/social-card.png">\n  <meta property="twitter:image" content="http://floats.city/social-card.png">\n  <meta name="twitter:card" content="summary_large_image">\n  <meta property="og:title" content="FLOATs by Emerald City DAO">\n  <meta property="og:type" content="article" />\n  <meta property="og:url" content="https://floats.city">\n  \n  <!--  Non-Essential, But Recommended -->\n  <meta property="og:description" content="Create and view FLOATs, a proof of attendance protocol built by Emerald City DAO">\n  <meta property="og:site_name" content="FLOATs.city">\n  <meta name="twitter:image:alt" content="FLOATs.city">\n  \n  <meta name="twitter:title" content="FLOATs by Emerald City DAO" />\n  <meta name="twitter:description" content="Create and view FLOATs, a proof of attendance protocol built by Emerald City DAO" />\n  <meta name="twitter:description" content="Create and view FLOATs, a proof of attendance protocol built by Emerald City DAO" />\n  \n  <!--  Non-Essential, But Required for Analytics -->\n  <meta name="twitter:site" content="@emerald_dao">\n\n  ' + head + '\n</head>\n<body>\n  \n  <div id="svelte">' + body + "</div>\n</body>\n</html>\n";
    options = null;
    default_settings = { paths: { "base": "", "assets": "" } };
    d2 = (s3) => s3.replace(/%23/g, "#").replace(/%3[Bb]/g, ";").replace(/%2[Cc]/g, ",").replace(/%2[Ff]/g, "/").replace(/%3[Ff]/g, "?").replace(/%3[Aa]/g, ":").replace(/%40/g, "@").replace(/%26/g, "&").replace(/%3[Dd]/g, "=").replace(/%2[Bb]/g, "+").replace(/%24/g, "$");
    empty = () => ({});
    manifest = {
      assets: [{ "file": "emerald_id_logo.svg", "size": 104266, "type": "image/svg+xml" }, { "file": "emeraldboticon.png", "size": 8708, "type": "image/png" }, { "file": "emeraldboticon_big.png", "size": 108426, "type": "image/png" }, { "file": "emeraldcitylogo.png", "size": 11212, "type": "image/png" }, { "file": "emeraldcitylogo_big.png", "size": 592303, "type": "image/png" }, { "file": "favicon.png", "size": 18361, "type": "image/png" }, { "file": "floatlogo.png", "size": 18361, "type": "image/png" }, { "file": "floatlogo_big.png", "size": 267156, "type": "image/png" }, { "file": "floatlogowebpage.png", "size": 49896, "type": "image/png" }, { "file": "graffle-logo.png", "size": 143693, "type": "image/png" }, { "file": "island.mp4", "size": 9421944, "type": "video/mp4" }, { "file": "island.png", "size": 134471, "type": "image/png" }, { "file": "island_original.png", "size": 442155, "type": "image/png" }, { "file": "logo-mainnet.png", "size": 21097, "type": "image/png" }, { "file": "logo-testnet.png", "size": 20808, "type": "image/png" }, { "file": "robots.txt", "size": 67, "type": "text/plain" }, { "file": "social-card.png", "size": 58503, "type": "image/png" }, { "file": "updated_float.mp4", "size": 2946136, "type": "video/mp4" }],
      layout: "src/routes/__layout.svelte",
      error: "src/routes/__error.svelte",
      routes: [
        {
          type: "page",
          pattern: /^\/$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/index.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/projectDetails\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/projectDetails.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/MediaQuery\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/MediaQuery.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/create\/?$/,
          params: empty,
          a: ["src/routes/__layout.svelte", "src/routes/create.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/([^/]+?)\/whitelists\/?$/,
          params: (m2) => ({ address: d2(m2[1]) }),
          a: ["src/routes/__layout.svelte", "src/routes/[address]/whitelists.svelte"],
          b: ["src/routes/__error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/([^/]+?)\/([^/]+?)\/?$/,
          params: (m2) => ({ address: d2(m2[1]), whitelistId: d2(m2[2]) }),
          a: ["src/routes/__layout.svelte", "src/routes/[address]/[whitelistId].svelte"],
          b: ["src/routes/__error.svelte"]
        }
      ]
    };
    get_hooks = (hooks) => ({
      getSession: hooks.getSession || (() => ({})),
      handle: hooks.handle || (({ request, resolve: resolve2 }) => resolve2(request)),
      handleError: hooks.handleError || (({ error: error2 }) => console.error(error2.stack)),
      externalFetch: hooks.externalFetch || fetch
    });
    module_lookup = {
      "src/routes/__layout.svelte": () => Promise.resolve().then(() => (init_layout_67bffebc(), layout_67bffebc_exports)),
      "src/routes/__error.svelte": () => Promise.resolve().then(() => (init_error_ab13613c(), error_ab13613c_exports)),
      "src/routes/index.svelte": () => Promise.resolve().then(() => (init_index_253d4d4b(), index_253d4d4b_exports)),
      "src/routes/projectDetails.svelte": () => Promise.resolve().then(() => (init_projectDetails_e0be73da(), projectDetails_e0be73da_exports)),
      "src/routes/MediaQuery.svelte": () => Promise.resolve().then(() => (init_MediaQuery_872353f6(), MediaQuery_872353f6_exports)),
      "src/routes/create.svelte": () => Promise.resolve().then(() => (init_create_ef500858(), create_ef500858_exports)),
      "src/routes/[address]/whitelists.svelte": () => Promise.resolve().then(() => (init_whitelists_76275c80(), whitelists_76275c80_exports)).then(function(n) {
        return n.w;
      }),
      "src/routes/[address]/[whitelistId].svelte": () => Promise.resolve().then(() => (init_whitelistId_b34f27d7(), whitelistId_b34f27d7_exports))
    };
    metadata_lookup = { "src/routes/__layout.svelte": { "entry": "pages/__layout.svelte-d6d07a4a.js", "css": ["assets/pages/__layout.svelte-fb2a7933.css", "assets/Sidebar.svelte_svelte_type_style_lang-a8b8b1ab.css", "assets/vendor-25757cea.css", "assets/Header.svelte_svelte_type_style_lang-6c895964.css", "assets/stores-bb8d33eb.css"], "js": ["pages/__layout.svelte-d6d07a4a.js", "chunks/vendor-d21acaa6.js", "chunks/stores-01d0a976.js", "chunks/Header.svelte_svelte_type_style_lang-51696399.js", "chunks/stores-0e91bd47.js", "chunks/singletons-12a22614.js", "chunks/stores-116c8e4d.js", "pages/MediaQuery.svelte-358c936d.js"], "styles": [] }, "src/routes/__error.svelte": { "entry": "pages/__error.svelte-d70c9f99.js", "css": ["assets/vendor-25757cea.css"], "js": ["pages/__error.svelte-d70c9f99.js", "chunks/vendor-d21acaa6.js"], "styles": [] }, "src/routes/index.svelte": { "entry": "pages/index.svelte-4049a296.js", "css": ["assets/pages/index.svelte-30cff0a6.css", "assets/Sidebar.svelte_svelte_type_style_lang-a8b8b1ab.css", "assets/vendor-25757cea.css", "assets/whitelists-7506989d.css", "assets/Header.svelte_svelte_type_style_lang-6c895964.css", "assets/stores-bb8d33eb.css"], "js": ["pages/index.svelte-4049a296.js", "chunks/vendor-d21acaa6.js", "chunks/stores-0e91bd47.js", "chunks/singletons-12a22614.js", "chunks/stores-01d0a976.js", "chunks/whitelists-59f24c1c.js", "pages/MediaQuery.svelte-358c936d.js", "chunks/constants-4315861c.js", "chunks/Header.svelte_svelte_type_style_lang-51696399.js", "chunks/stores-116c8e4d.js"], "styles": [] }, "src/routes/projectDetails.svelte": { "entry": "pages/projectDetails.svelte-aa3d82ac.js", "css": ["assets/pages/projectDetails.svelte-8d3b1a51.css", "assets/vendor-25757cea.css", "assets/stores-bb8d33eb.css"], "js": ["pages/projectDetails.svelte-aa3d82ac.js", "chunks/vendor-d21acaa6.js", "chunks/stores-116c8e4d.js"], "styles": [] }, "src/routes/MediaQuery.svelte": { "entry": "pages/MediaQuery.svelte-358c936d.js", "css": ["assets/vendor-25757cea.css"], "js": ["pages/MediaQuery.svelte-358c936d.js", "chunks/vendor-d21acaa6.js"], "styles": [] }, "src/routes/create.svelte": { "entry": "pages/create.svelte-958996bb.js", "css": ["assets/pages/create.svelte-73bcfad8.css", "assets/vendor-25757cea.css", "assets/stores-bb8d33eb.css", "assets/Dialog-1351e10c.css", "assets/Header.svelte_svelte_type_style_lang-6c895964.css"], "js": ["pages/create.svelte-958996bb.js", "chunks/vendor-d21acaa6.js", "chunks/stores-116c8e4d.js", "chunks/Dialog-c2c2028d.js", "chunks/stores-0e91bd47.js", "chunks/singletons-12a22614.js", "chunks/stores-01d0a976.js", "chunks/constants-4315861c.js", "chunks/Header.svelte_svelte_type_style_lang-51696399.js", "pages/MediaQuery.svelte-358c936d.js"], "styles": [] }, "src/routes/[address]/whitelists.svelte": { "entry": "pages/_address_/whitelists.svelte-6aeefff3.js", "css": ["assets/vendor-25757cea.css", "assets/whitelists-7506989d.css"], "js": ["pages/_address_/whitelists.svelte-6aeefff3.js", "chunks/vendor-d21acaa6.js", "chunks/whitelists-59f24c1c.js", "chunks/stores-01d0a976.js", "pages/MediaQuery.svelte-358c936d.js"], "styles": [] }, "src/routes/[address]/[whitelistId].svelte": { "entry": "pages/_address_/_whitelistId_.svelte-4aa2bc65.js", "css": ["assets/pages/_address_/_whitelistId_.svelte-456d1e66.css", "assets/vendor-25757cea.css", "assets/Dialog-1351e10c.css", "assets/stores-bb8d33eb.css"], "js": ["pages/_address_/_whitelistId_.svelte-4aa2bc65.js", "chunks/vendor-d21acaa6.js", "chunks/stores-0e91bd47.js", "chunks/singletons-12a22614.js", "chunks/stores-01d0a976.js", "chunks/Dialog-c2c2028d.js", "chunks/stores-116c8e4d.js"], "styles": [] } };
  }
});

// .svelte-kit/vercel/entry.js
__export(exports, {
  default: () => entry_default
});
init_shims();

// node_modules/@sveltejs/kit/dist/node.js
init_shims();
function getRawBody(req) {
  return new Promise((fulfil, reject) => {
    const h2 = req.headers;
    if (!h2["content-type"]) {
      return fulfil(null);
    }
    req.on("error", reject);
    const length = Number(h2["content-length"]);
    if (isNaN(length) && h2["transfer-encoding"] == null) {
      return fulfil(null);
    }
    let data = new Uint8Array(length || 0);
    if (length > 0) {
      let offset = 0;
      req.on("data", (chunk) => {
        const new_len = offset + Buffer.byteLength(chunk);
        if (new_len > length) {
          return reject({
            status: 413,
            reason: 'Exceeded "Content-Length" limit'
          });
        }
        data.set(chunk, offset);
        offset = new_len;
      });
    } else {
      req.on("data", (chunk) => {
        const new_data = new Uint8Array(data.length + chunk.length);
        new_data.set(data, 0);
        new_data.set(chunk, data.length);
        data = new_data;
      });
    }
    req.on("end", () => {
      fulfil(data);
    });
  });
}

// .svelte-kit/output/server/app.js
init_shims();
init_ssr();
init_app_0013ff75();

// .svelte-kit/vercel/entry.js
init();
var entry_default = async (req, res) => {
  const { pathname, searchParams } = new URL(req.url || "", "http://localhost");
  let body;
  try {
    body = await getRawBody(req);
  } catch (err) {
    res.statusCode = err.status || 400;
    return res.end(err.reason || "Invalid request body");
  }
  const rendered = await render2({
    method: req.method,
    headers: req.headers,
    path: pathname,
    query: searchParams,
    rawBody: body
  });
  if (rendered) {
    const { status, headers, body: body2 } = rendered;
    return res.writeHead(status, headers).end(body2);
  }
  return res.writeHead(404).end();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
